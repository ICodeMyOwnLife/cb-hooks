{"version":3,"file":"index.umd.js","sources":["../src/useUpdatedRef/index.ts","../src/utils/common.ts","../src/creators/createRateLimitHook.ts","../src/utils/rateLimit/audit.ts","../src/useAudit/index.ts","../src/creators/createRateLimitValueHook.ts","../src/useAuditValue/index.ts","../src/useHandleChangeCheck/index.ts","../src/useCurrent/index.ts","../src/useCurryFunction/index.ts","../src/utils/rateLimit/debounce.ts","../src/useDebounce/index.ts","../src/useDebounceValue/index.ts","../src/useEffectOnce/index.ts","../src/useDidMount/index.ts","../src/useEvent/index.ts","../src/useTriggerUpdate/index.ts","../src/useToggleFullscreen/index.ts","../src/useHandleChangeNumber/index.ts","../src/useHandleChangeText/index.ts","../src/useIsMounted/index.ts","../src/constants/common.ts","../src/creators/createResourceHook.ts","../src/useLink/index.ts","../src/useMediaQuery/index.ts","../src/utils/rateLimit/sample.ts","../src/useSample/index.ts","../src/useSampleValue/index.ts","../src/useScript/index.ts","../src/utils/rateLimit/throttle.ts","../src/useThrottle/index.ts","../src/useThrottleValue/index.ts","../src/useWillUnmount/index.ts","../src/useAnimationFrame/index.ts","../src/useCallbackWithCleanup/index.ts","../src/useCheckInput/index.ts","../src/useDidUpdate/index.ts","../src/useForceUpdate/index.ts","../src/useFullscreen/index.ts","../src/useHandleChangeFile/index.ts","../src/useIntersectionObserver/index.ts","../src/useInterval/index.ts","../src/useMutationObserver/index.ts","../src/useNumberInput/index.ts","../src/useOnClickOutside/index.ts","../src/usePrevious/index.ts","../src/usePromise/index.ts","../src/usePromiseCallback/index.ts","../src/useResizeObserver/index.ts","../src/useScrollSpy/index.ts","../src/useTextInput/index.ts","../src/useTimeout/index.ts","../src/useTimeoutCallback/index.ts","../src/useToggle/index.ts","../src/useWindowBeforeUnload/index.ts","../src/useWindowScrollOffset/index.ts","../src/useWindowSize/index.ts","../src/useWorkerCallback/index.ts"],"sourcesContent":["import { DependencyList, useRef, useLayoutEffect } from 'react';\n\nconst useUpdatedRef = <TValue>(value: TValue, deps?: DependencyList) => {\n  const ref = useRef(value);\n\n  useLayoutEffect(() => {\n    ref.current = value;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  return ref;\n};\n\nexport default useUpdatedRef;\n","import { BaseSyntheticEvent } from 'react';\nimport { PickFrom } from '../types/common';\n\nexport const createUniqueObject = () => ({});\n\nexport const isBrowser = () =>\n  typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\nexport const isSyntheticEvent = (o: any): o is BaseSyntheticEvent =>\n  o instanceof Object && o.nativeEvent instanceof Event;\n\nexport const getWindowScrollOffset = (): Offset =>\n  isBrowser() ? { x: window.scrollX, y: window.scrollY } : {};\n\nexport const getWindowSize = (): WindowSize =>\n  isBrowser()\n    ? {\n        innerWidth: window.innerWidth,\n        innerHeight: window.innerHeight,\n        outerWidth: window.outerWidth,\n        outerHeight: window.outerHeight,\n      }\n    : {};\n\nexport const persistEvent = (o: unknown) => isSyntheticEvent(o) && o.persist();\n\nexport const pickFrom = <TObject extends object, TKeys extends keyof TObject>(\n  o: TObject,\n  keys: TKeys[],\n) =>\n  (Object.fromEntries(keys.map(k => [k, o[k]])) as unknown) as PickFrom<\n    TObject,\n    TKeys\n  >;\n\nexport interface Offset {\n  x?: number;\n  y?: number;\n}\n\nexport interface WindowSize {\n  innerWidth?: number;\n  innerHeight?: number;\n  outerWidth?: number;\n  outerHeight?: number;\n}\n","/**\n * References:\n * https://github.com/imbhargav5/rooks/blob/dev/packages/debounce/src/useDebounce.ts\n */\n\nimport { useRef, useEffect, useCallback } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\nimport { persistEvent } from '../utils/common';\nimport { RateLimitFunctionWithOptions } from '../types/common';\n\nconst createRateLimitHook = <TOptions>(\n  rateLimit: RateLimitFunctionWithOptions<TOptions>,\n) => <TArgs extends any[], TReturn>(\n  func: (...args: TArgs) => TReturn,\n  wait: number,\n  options?: TOptions,\n) => {\n  const funcRef = useUpdatedRef(func);\n  const rateLimitedFuncRef = useRef(rateLimit(func, wait, options));\n\n  useEffect(() => {\n    rateLimitedFuncRef.current = rateLimit(\n      (...args) => funcRef.current(...args),\n      wait,\n      options,\n    );\n\n    return () => rateLimitedFuncRef.current?.cancel();\n  }, [funcRef, options, wait]);\n\n  return useCallback<(...args: TArgs) => TReturn | undefined>((...args) => {\n    args.forEach(persistEvent);\n    return rateLimitedFuncRef.current(...args);\n  }, []);\n};\n\nexport default createRateLimitHook;\n","import {\n  RateLimitFunction,\n  CancellableRateLimitedFunction,\n} from '../../types/common';\n\nconst audit: RateLimitFunction = <TArgs extends any[], TReturn>(\n  func: (...args: TArgs) => TReturn,\n  wait: number,\n) => {\n  let timeoutId: NodeJS.Timeout | null = null;\n  let lastArgs: TArgs | null = null;\n  let result: TReturn | undefined;\n\n  const ratedFunction: CancellableRateLimitedFunction<TArgs, TReturn> = (\n    ...args\n  ) => {\n    lastArgs = args;\n    if (timeoutId === null) {\n      timeoutId = setTimeout(() => {\n        if (lastArgs !== null) {\n          result = func(...lastArgs);\n          lastArgs = null;\n        }\n        timeoutId = null;\n      }, wait);\n    }\n    return result;\n  };\n\n  ratedFunction.cancel = () => {\n    if (timeoutId !== null) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = null;\n    lastArgs = null;\n  };\n\n  return ratedFunction;\n};\n\nexport default audit;\n","import createRateLimitHook from '../creators/createRateLimitHook';\nimport audit from '../utils/rateLimit/audit';\n\nconst useAudit = createRateLimitHook(audit);\n\nexport default useAudit;\n","import { useState, useRef, useEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\nimport { RateLimitFunctionWithOptions } from '../types/common';\n\nconst createRateLimitValueHook = <TOptions>(\n  rateLimit: RateLimitFunctionWithOptions<TOptions>,\n) => <TArgs extends any[], TReturn>(\n  func: (...args: TArgs) => TReturn,\n  args: TArgs,\n  wait: number,\n  options?: TOptions,\n) => {\n  const [value, setValue] = useState<TReturn>();\n  const funcRef = useUpdatedRef(func);\n  const rateLimitedFuncRef = useRef(rateLimit(func, wait, options));\n\n  useEffect(() => {\n    rateLimitedFuncRef.current = rateLimit(\n      (...currentArgs) => {\n        const result = funcRef.current(...currentArgs);\n        setValue(result);\n        return result;\n      },\n      wait,\n      options,\n    );\n\n    return () => rateLimitedFuncRef.current?.cancel();\n  }, [funcRef, options, wait]);\n\n  useEffect(() => {\n    rateLimitedFuncRef.current(...args);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, args);\n\n  return value;\n};\n\nexport default createRateLimitValueHook;\n","import createRateLimitValueHook from '../creators/createRateLimitValueHook';\nimport audit from '../utils/rateLimit/audit';\n\nconst useAuditValue = createRateLimitValueHook(audit);\n\nexport default useAuditValue;\n","import { useCallback } from 'react';\nimport { CheckedTargetEvent } from '../types/common';\n\nconst useHandleChangeCheck = (\n  ...handlers: readonly ((checked: boolean) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { checked } }: CheckedTargetEvent) =>\n      handlers.forEach(handler => handler?.(Boolean(checked))),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeCheck;\n","import { useRef } from 'react';\nimport { InitialState } from '../types/common';\n\nconst useCurrent = <TValue>(initialValue?: InitialState<TValue>) => {\n  const ref = useRef(initialValue);\n\n  return {\n    set: (value: TValue) => {\n      ref.current = value;\n    },\n    get: () => ref.current,\n    is: (value: TValue) => ref.current === value,\n  } as const;\n};\n\nexport default useCurrent;\n","import { useCallback } from 'react';\n\nconst useCurryFunction: UseCurryFunction = (\n  fn: (...args: any[]) => any,\n  thisArg: any = null,\n  ...args: any[]\n) =>\n  useCallback(\n    (...restArgs: any[]) => fn?.apply(thisArg, [...args, ...restArgs]),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [fn, ...args],\n  );\n\nexport default useCurryFunction;\n\ninterface UseCurryFunction {\n  <TFirstArg, TRestArgs extends any[], TReturn>(\n    func: (firstArg: TFirstArg, ...restArgs: TRestArgs) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n  ): (...args: TRestArgs) => TReturn;\n  <TFirstArg, TSecondArg, TRestArgs extends any[], TReturn>(\n    func: (\n      firstArg: TFirstArg,\n      secondArg: TSecondArg,\n      ...restArgs: TRestArgs\n    ) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n    secondArg: TSecondArg,\n  ): (...args: TRestArgs) => TReturn;\n  <TFirstArg, TSecondArg, TThirdArg, TRestArgs extends any[], TReturn>(\n    func: (\n      firstArg: TFirstArg,\n      secondArg: TSecondArg,\n      thirdArg: TThirdArg,\n      ...restArgs: TRestArgs\n    ) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n    secondArg: TSecondArg,\n    thirdArg: TThirdArg,\n  ): (...args: TRestArgs) => TReturn;\n  <\n    TFirstArg,\n    TSecondArg,\n    TThirdArg,\n    TForthArg,\n    TRestArgs extends any[],\n    TReturn\n  >(\n    func: (\n      firstArg: TFirstArg,\n      secondArg: TSecondArg,\n      thirdArg: TThirdArg,\n      forthArg: TForthArg,\n      ...restArgs: TRestArgs\n    ) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n    secondArg: TSecondArg,\n    thirdArg: TThirdArg,\n    forthArg: TForthArg,\n  ): (...args: TRestArgs) => TReturn;\n}\n","import {\n  RateLimitFunctionWithOptions,\n  CancellableRateLimitedFunction,\n} from '../../types/common';\n\nconst debounce: RateLimitFunctionWithOptions<DebounceOptions> = <\n  TArgs extends any[],\n  TReturn\n>(\n  func: (...args: TArgs) => TReturn,\n  wait: number,\n  { leading, trailing }: DebounceOptions = { trailing: true },\n) => {\n  let lastArgs: TArgs | null = null;\n  let timeoutId: NodeJS.Timeout | null = null;\n  let result: TReturn | undefined;\n\n  const ratedFunction: CancellableRateLimitedFunction<TArgs, TReturn> = (\n    ...args\n  ) => {\n    lastArgs = args;\n\n    if (timeoutId !== null) {\n      clearTimeout(timeoutId);\n    } else if (leading) {\n      result = func(...lastArgs);\n      lastArgs = null;\n    }\n\n    timeoutId = setTimeout(() => {\n      if (trailing && lastArgs !== null) {\n        result = func(...lastArgs);\n        lastArgs = null;\n      }\n      timeoutId = null;\n    }, wait);\n\n    return result;\n  };\n\n  ratedFunction.cancel = () => {\n    if (timeoutId !== null) {\n      clearTimeout(timeoutId);\n    }\n    lastArgs = null;\n    timeoutId = null;\n  };\n\n  return ratedFunction;\n};\n\nexport default debounce;\n\nexport interface DebounceOptions {\n  leading?: boolean;\n  trailing?: boolean;\n}\n","import createRateLimitHook from '../creators/createRateLimitHook';\nimport debounce from '../utils/rateLimit/debounce';\n\nconst useDebounce = createRateLimitHook(debounce);\n\nexport default useDebounce;\n","import createRateLimitValueHook from '../creators/createRateLimitValueHook';\nimport debounce from '../utils/rateLimit/debounce';\n\nconst useDebounceValue = createRateLimitValueHook(debounce);\n\nexport default useDebounceValue;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useEffectOnce.ts\n */\n\nimport { EffectCallback, useEffect } from 'react';\n\nconst useEffectOnce = (effect: EffectCallback) => useEffect(effect, []);\n\nexport default useEffectOnce;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useMount.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useDidMount.js\n * https://github.com/imbhargav5/rooks/blob/dev/packages/shared/useDidMount.ts\n */\n\nimport useEffectOnce from '../useEffectOnce';\n\nconst useDidMount = (callback: VoidFunction) => useEffectOnce(callback);\n\nexport default useDidMount;\n","/**\n * References:\n * https://github.com/donavon/use-event-listener\n * https://github.com/streamich/react-use/blob/master/src/useEvent.ts\n * https://github.com/adambrgmn/hooks/blob/master/src/use-event-listener/index.ts\n */\n\nimport { useRef, useEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst getEventTarget = <TElement>(element: ElementType<TElement>) =>\n  element instanceof Function ? element() : element;\n\nconst isElement = (target: EventTarget | null): target is Element =>\n  target instanceof Object && 'matches' in target;\n\nconst checkAndInvokeEventListener = (\n  listener: EventListener | null,\n  event: Event,\n  selectors: string | undefined,\n) => {\n  if (!listener) {\n    return;\n  }\n  if (\n    selectors &&\n    (!isElement(event.target) || !event.target.matches(selectors))\n  ) {\n    return;\n  }\n  listener(event);\n};\n\nconst useEvent: UseEventHook = (\n  element: ElementType<EventTarget>,\n  eventNames: string | string[],\n  listener: EventListener | null,\n  {\n    capture,\n    once,\n    passive,\n    selectors,\n    usingAnimationFrame,\n    enabled = true,\n  }: UseEventOptions = {},\n) => {\n  const listenerRef = useUpdatedRef(listener);\n  const animationFrameRef = useRef(0);\n\n  useEffect(() => {\n    if (!enabled) {\n      return undefined;\n    }\n\n    const eventTarget = getEventTarget(element);\n    if (!eventTarget) {\n      return undefined;\n    }\n\n    const eventListener = (e: Event) => {\n      if (usingAnimationFrame) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = requestAnimationFrame(() =>\n          checkAndInvokeEventListener(listenerRef.current, e, selectors),\n        );\n      } else {\n        checkAndInvokeEventListener(listenerRef.current, e, selectors);\n      }\n    };\n\n    const eventNameList = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n    eventNameList.forEach(eventName =>\n      eventTarget.addEventListener(eventName, eventListener, {\n        capture,\n        once,\n        passive,\n      }),\n    );\n\n    return () => {\n      if (usingAnimationFrame && animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      eventNameList.forEach(eventName =>\n        eventTarget.removeEventListener(eventName, eventListener, { capture }),\n      );\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    element,\n    capture,\n    once,\n    passive,\n    selectors,\n    usingAnimationFrame,\n    enabled,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    ...eventNames,\n  ]);\n};\n\nexport default useEvent;\n\ninterface UseEventHook {\n  <TEventName extends keyof WindowEventMap>(\n    element: ElementType<Window>,\n    eventNames: TEventName | TEventName[],\n    listener: (e: WindowEventMap[TEventName]) => void | null,\n    options?: UseEventOptions,\n  ): void;\n  <TEventName extends keyof DocumentEventMap>(\n    element: ElementType<Document>,\n    eventNames: TEventName | TEventName[],\n    listener: (e: DocumentEventMap[TEventName]) => void | null,\n    options?: UseEventOptions,\n  ): void;\n  <TEventName extends keyof HTMLElementEventMap>(\n    element: ElementType<HTMLElement>,\n    eventNames: TEventName | TEventName[],\n    listener: (e: HTMLElementEventMap[TEventName]) => void | null,\n    options?: UseEventOptions,\n  ): void;\n  (\n    element: ElementType<EventTarget>,\n    eventNames: string | string[],\n    listener: EventListener | null,\n    options?: UseEventOptions,\n  ): void;\n}\n\nexport interface UseEventOptions extends AddEventListenerOptions {\n  selectors?: string;\n  usingAnimationFrame?: boolean;\n  enabled?: boolean;\n}\n\ntype ElementType<TElement> =\n  | TElement\n  | null\n  | undefined\n  | false\n  | (() => TElement | null | undefined | false);\n","import { useReducer } from 'react';\nimport { createUniqueObject } from '../utils/common';\n\nconst useTriggerUpdate = () =>\n  useReducer(createUniqueObject, createUniqueObject());\n\nexport default useTriggerUpdate;\n","/**\n * References:\n * https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API/Guide\n * https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API\n */\n\nimport { RefObject, useCallback } from 'react';\nimport useEvent from '../useEvent';\n\nconst useToggleFullscreen = (\n  elementRef: RefObject<Element>,\n  onChange: EventListener | null = null,\n  onError: EventListener | null = null,\n) => {\n  const toggleFullscreen = useCallback(\n    (show?: boolean) => {\n      if (\n        document.fullscreenElement &&\n        (show === false || show === undefined)\n      ) {\n        document.exitFullscreen();\n      }\n\n      if (\n        !document.fullscreenElement &&\n        (show === true || show === undefined)\n      ) {\n        // eslint-disable-next-line no-unused-expressions\n        elementRef.current?.requestFullscreen?.();\n      }\n    },\n    [elementRef],\n  );\n\n  useEvent(document, 'fullscreenchange', onChange);\n  useEvent(document, 'fullscreenerror', onError);\n\n  return toggleFullscreen;\n};\n\nexport default useToggleFullscreen;\n","import { useCallback } from 'react';\nimport { ValueTargetEvent } from '../types/common';\n\nconst useHandleChangeNumber = (\n  ...handlers: readonly ((value: number) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { value } }: ValueTargetEvent<string>) =>\n      handlers.forEach(handler => handler?.(Number(value))),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeNumber;\n","import { useCallback } from 'react';\nimport { ValueTargetEvent } from '../types/common';\n\nconst useHandleChangeText = (\n  ...handlers: readonly ((text: string) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { value } }: ValueTargetEvent<string>) =>\n      handlers.forEach(handler => handler?.(String(value))),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeText;\n","/**\n * References:\n * https://github.com/adambrgmn/hooks/blob/master/src/use-is-mounted/index.ts\n * https://github.com/hupe1980/react-is-mounted-hook/blob/master/src/use-is-mounted.tsx\n * https://github.com/streamich/react-use/blob/master/src/useRefMounted.ts\n */\n\nimport { useRef, useCallback } from 'react';\nimport useEffectOnce from '../useEffectOnce';\n\nconst useIsMounted = () => {\n  const isMountedRef = useRef(false);\n\n  useEffectOnce(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  });\n\n  return useCallback(() => isMountedRef.current, []);\n};\n\nexport default useIsMounted;\n","import { AsyncState } from '../types/common';\n\nexport const PENDING_STATE: AsyncState<any, any> = { loading: false };\nexport const LOADING_STATE: AsyncState<any, any> = { loading: true };\n","/**\n * References:\n * https://github.com/hupe1980/react-script-hook/blob/master/src/use-script.tsx\n */\n\nimport { useState, useEffect } from 'react';\nimport useIsMounted from '../useIsMounted';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { InitialState, AsyncState } from '../types/common';\n\nconst createResourceHook = <TAttrs extends Partial<HTMLElement>>(\n  tagName: 'script' | 'link',\n  isValid: (attrs: TAttrs) => boolean,\n) => (\n  attrs: TAttrs,\n  initialState: InitialState<AsyncState> = PENDING_STATE,\n) => {\n  const isMounted = useIsMounted();\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    if (!isValid(attrs)) {\n      setState(PENDING_STATE);\n      return undefined;\n    }\n\n    const element = ((attrs.id &&\n      document.querySelector(`${tagName}#${attrs.id}`)) ||\n      document.createElement(tagName)) as HTMLScriptElement;\n\n    Object.assign(element, attrs);\n\n    const handleLoad = () => {\n      if (isMounted()) {\n        setState(PENDING_STATE);\n      }\n    };\n\n    const handleError = (e: ErrorEvent) => {\n      if (isMounted()) {\n        setState({ loading: false, error: e.error });\n      }\n    };\n\n    element.addEventListener('load', handleLoad, false);\n    element.addEventListener('error', handleError, false);\n\n    setState(LOADING_STATE);\n    document.body.appendChild(element);\n\n    return () => {\n      element.removeEventListener('load', handleLoad, false);\n      element.removeEventListener('error', handleError, false);\n    };\n  }, [attrs, isMounted]);\n\n  return state;\n};\n\nexport default createResourceHook;\n","import createResourceHook from '../creators/createResourceHook';\nimport { isBrowser } from '../utils/common';\n\nconst useLink = createResourceHook<Partial<HTMLLinkElement>>(\n  'link',\n  ({ href }) =>\n    isBrowser() && !!href && !document.querySelector(`link[href=\"${href}\"]`),\n);\n\nexport default useLink;\n","/**\n * References:\n * https://material-ui.com/components/use-media-query/\n * https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/useMediaQuery/useMediaQuery.js\n * https://github.com/streamich/react-use/blob/master/src/useMedia.ts\n * https://github.com/jaredpalmer/the-platform/blob/master/src/useMedia.tsx\n * https://usehooks.com/useMedia/\n * https://github.com/ReactTraining/react-media\n * https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\n * https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList\n * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries\n * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n * https://gomakethings.com/a-better-way-to-test-breakpoints-with-vanilla-javascript/\n * https://github.com/akiran/json2mq\n */\n\nimport { useState, useEffect } from 'react';\nimport json2mq, { QueryObject } from 'json2mq';\nimport { pickFrom, isBrowser } from '../utils/common';\nimport { PickFrom, InitialState } from '../types/common';\n\nconst getMediaResult = (mql: MediaQueryList): MediaResult =>\n  pickFrom(mql, ['matches', 'media']);\n\nconst useMediaQuery = (\n  query: string | QueryObject,\n  initialState: InitialState<MediaResult> = { media: '', matches: false },\n) => {\n  const queryStr = typeof query === 'string' ? query : json2mq(query);\n  const [result, setResult] = useState(\n    isBrowser()\n      ? () => getMediaResult(window.matchMedia(queryStr))\n      : initialState,\n  );\n\n  useEffect(() => {\n    const mql = window.matchMedia(queryStr);\n    const onChange = (e: MediaQueryListEvent) => {\n      setResult(e);\n    };\n    setResult(getMediaResult(mql));\n    mql.addListener(onChange);\n    return () => mql.removeListener(onChange);\n  }, [queryStr]);\n\n  return result;\n};\n\nexport default useMediaQuery;\n\nexport type MediaResult = PickFrom<MediaQueryList, 'matches' | 'media'>;\n","import {\n  RateLimitFunction,\n  CancellableRateLimitedFunction,\n} from '../../types/common';\n\nconst sample: RateLimitFunction = <TArgs extends any[], TReturn>(\n  func: (...args: TArgs) => TReturn,\n  wait: number,\n) => {\n  let lastArgs: TArgs | null = null;\n  let result: TReturn | undefined;\n\n  const intervalId = setInterval(() => {\n    if (lastArgs) {\n      result = func(...lastArgs);\n      lastArgs = null;\n    }\n  }, wait);\n\n  const ratedFunction: CancellableRateLimitedFunction<TArgs, TReturn> = (\n    ...args\n  ) => {\n    lastArgs = args;\n    return result;\n  };\n\n  ratedFunction.cancel = () => {\n    clearInterval(intervalId);\n    lastArgs = null;\n  };\n\n  return ratedFunction;\n};\n\nexport default sample;\n","import createRateLimitHook from '../creators/createRateLimitHook';\nimport sample from '../utils/rateLimit/sample';\n\nconst useSample = createRateLimitHook(sample);\n\nexport default useSample;\n","import createRateLimitValueHook from '../creators/createRateLimitValueHook';\nimport sample from '../utils/rateLimit/sample';\n\nconst useSampleValue = createRateLimitValueHook(sample);\n\nexport default useSampleValue;\n","import createResourceHook from '../creators/createResourceHook';\nimport { isBrowser } from '../utils/common';\n\nconst useScript = createResourceHook<Partial<HTMLScriptElement>>(\n  'script',\n  ({ src }) =>\n    isBrowser() && !!src && !document.querySelector(`script[src=\"${src}\"]`),\n);\n\nexport default useScript;\n","import {\n  RateLimitFunctionWithOptions,\n  CancellableRateLimitedFunction,\n} from '../../types/common';\n\nconst throttle: RateLimitFunctionWithOptions<ThrottleOptions> = <\n  TArgs extends any[],\n  TReturn\n>(\n  func: (...args: TArgs) => TReturn,\n  wait: number,\n  { leading, trailing }: ThrottleOptions = { leading: true, trailing: true },\n) => {\n  let lastArgs: TArgs | null = null;\n  let timeoutId: NodeJS.Timeout | null = null;\n  let result: TReturn | undefined;\n\n  const ratedFunction: CancellableRateLimitedFunction<TArgs, TReturn> = (\n    ...args\n  ) => {\n    lastArgs = args;\n\n    if (timeoutId === null) {\n      if (leading) {\n        result = func(...lastArgs);\n        lastArgs = null;\n      }\n\n      timeoutId = setTimeout(() => {\n        if (trailing && lastArgs !== null) {\n          result = func(...lastArgs);\n          lastArgs = null;\n        }\n        timeoutId = null;\n      }, wait);\n    }\n\n    return result;\n  };\n\n  ratedFunction.cancel = () => {\n    if (timeoutId !== null) {\n      clearTimeout(timeoutId);\n    }\n    lastArgs = null;\n    timeoutId = null;\n  };\n\n  return ratedFunction;\n};\n\nexport default throttle;\n\nexport interface ThrottleOptions {\n  leading?: boolean;\n  trailing?: boolean;\n}\n","import createRateLimitHook from '../creators/createRateLimitHook';\nimport throttle from '../utils/rateLimit/throttle';\n\nconst useThrottle = createRateLimitHook(throttle);\n\nexport default useThrottle;\n","import createRateLimitValueHook from '../creators/createRateLimitValueHook';\nimport throttle from '../utils/rateLimit/throttle';\n\nconst useThrottleValue = createRateLimitValueHook(throttle);\n\nexport default useThrottleValue;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useUnmount.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useWillUnmount.js\n * https://github.com/imbhargav5/rooks/blob/dev/packages/will-unmount/src/useWillUnmount.ts\n */\n\nimport useEffectOnce from '../useEffectOnce';\n\nconst useWillUnmount = (callback: VoidFunction) =>\n  useEffectOnce(() => callback);\n\nexport default useWillUnmount;\n","import { DependencyList, useEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useAnimationFrame = (\n  callback: FrameRequestCallback,\n  deps: DependencyList = [],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useEffect(() => {\n    const handle = requestAnimationFrame(time => callbackRef.current?.(time));\n\n    return () => cancelAnimationFrame(handle);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useAnimationFrame;\n","import { DependencyList, useRef, useCallback } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useCallbackWithCleanup = <TArgs extends any[]>(\n  callback: (...args: TArgs) => void | VoidFunction,\n  deps: DependencyList = [],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n  const cleanupRef = useRef<void | VoidFunction>();\n\n  return useCallback((...args: TArgs) => {\n    if (cleanupRef.current) cleanupRef.current();\n    cleanupRef.current = callbackRef.current?.(...args);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useCallbackWithCleanup;\n","import { useState } from 'react';\nimport useHandleChangeCheck from '../useHandleChangeCheck';\nimport { InitialState } from '../types/common';\n\nconst useCheckInput = (initialValue: InitialState<boolean> = false) => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = useHandleChangeCheck(setValue);\n  return [value, setValue, handleChange] as const;\n};\n\nexport default useCheckInput;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useUpdateEffect.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useDidUpdate.js\n */\n\nimport { EffectCallback, DependencyList, useRef, useEffect } from 'react';\n\nconst useDidUpdate = (callback: EffectCallback, deps?: DependencyList) => {\n  const didMountRef = useRef(false);\n\n  useEffect(\n    didMountRef.current\n      ? callback\n      : () => {\n          didMountRef.current = true;\n        },\n    deps,\n  );\n};\n\nexport default useDidUpdate;\n","/**\n * References:\n * https://github.com/CharlesStover/use-force-update\n * https://reactjs.org/docs/hooks-faq.html#is-there-something-like-forceupdate\n */\n\nimport useTriggerUpdate from '../useTriggerUpdate';\n\nconst useForceUpdate = () => useTriggerUpdate()[1];\n\nexport default useForceUpdate;\n","import { useState, RefObject } from 'react';\nimport useToggleFullscreen from '../useToggleFullscreen';\nimport useCurryFunction from '../useCurryFunction';\n\nconst useFullscreen = (elementRef: RefObject<Element>) => {\n  const [fullscreen, setFullscreen] = useState(false);\n  const isFullscreen = () =>\n    !!document.fullscreenElement &&\n    document.fullscreenElement === elementRef.current;\n  const handleChange = () => setFullscreen(isFullscreen());\n  const toggleFullscreen = useToggleFullscreen(elementRef, handleChange);\n  const enterFullscreen = useCurryFunction(toggleFullscreen, null, true);\n  const exitFullscreen = useCurryFunction(toggleFullscreen, null, false);\n  return [\n    fullscreen,\n    toggleFullscreen,\n    enterFullscreen,\n    exitFullscreen,\n  ] as const;\n};\n\nexport default useFullscreen;\n","import { useCallback } from 'react';\nimport { FilesTargetEvent } from '../types/common';\n\nconst useHandleChangeFile = (\n  ...handlers: readonly ((files: FileList | null) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { files } }: FilesTargetEvent) =>\n      handlers.forEach(handler => handler?.(files)),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeFile;\n","/**\n * References:\n * https://github.com/adambrgmn/hooks/blob/master/src/use-in-view/index.ts\n * https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n */\n\nimport { RefObject, useLayoutEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useIntersectionObserver = (\n  elementRef: RefObject<Element>,\n  callback: IntersectionObserverCallback,\n  options?: IntersectionObserverInit,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useLayoutEffect(() => {\n    if (!elementRef.current) return undefined;\n\n    const observer = new IntersectionObserver(\n      (entries, currentObserver) =>\n        callbackRef.current?.(entries, currentObserver),\n      options,\n    );\n    observer.observe(elementRef.current);\n\n    return () => observer.disconnect();\n  }, [callbackRef, elementRef, options]);\n};\n\nexport default useIntersectionObserver;\n","/**\n * References:\n * https://github.com/dispix/react-pirate/blob/master/src/useInterval.js\n * https://github.com/donavon/use-interval\n */\n\nimport { DependencyList, useEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useInterval = (\n  callback: VoidFunction | undefined | null,\n  {\n    period,\n    leading,\n    running,\n    deps = [period, leading, running],\n  }: UseIntervalSettings,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useEffect(() => {\n    let handle: NodeJS.Timeout;\n\n    if (running) {\n      // eslint-disable-next-line no-unused-expressions\n      if (leading) callbackRef.current?.();\n      handle = setInterval(() => callbackRef.current?.(), period);\n    }\n\n    return () => {\n      if (handle) clearInterval(handle);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useInterval;\n\nexport interface UseIntervalSettings {\n  deps?: DependencyList;\n  leading?: boolean;\n  period: number;\n  running?: boolean;\n}\n","/**\n * References:\n * https://github.com/imbhargav5/rooks/blob/dev/packages/shared/useMutationObserver.ts\n * https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n */\n\nimport { useLayoutEffect, RefObject } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useMutationObserver = <TNode extends Node>(\n  nodeRef: RefObject<TNode>,\n  callback: MutationCallback,\n  options?: MutationObserverInit,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useLayoutEffect(() => {\n    if (!nodeRef.current) return undefined;\n\n    const observer = new MutationObserver((mutation, currentObserver) =>\n      callbackRef.current?.(mutation, currentObserver),\n    );\n    observer.observe(nodeRef.current, options);\n\n    return () => observer.disconnect();\n  }, [callbackRef, nodeRef, options]);\n};\n\nexport default useMutationObserver;\n","import { useState } from 'react';\nimport useHandleChangeNumber from '../useHandleChangeNumber';\nimport { InitialState } from '../types/common';\n\nconst useNumberInput = (initialValue: InitialState<number> = 0) => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = useHandleChangeNumber(setValue);\n  return [value, setValue, handleChange] as const;\n};\n\nexport default useNumberInput;\n","/**\n * References:\n * https://usehooks.com/useOnClickOutside/\n * https://github.com/sandiiarov/use-events/blob/master/src/useClickOutside/index.tsx\n * https://github.com/Andarist/use-onclickoutside/blob/master/src/index.ts\n * https://github.com/streamich/react-use/blob/master/src/useClickAway.ts\n * https://github.com/imbhargav5/rooks/blob/dev/packages/outside-click/src/useOutsideClick.ts\n */\n\nimport { RefObject } from 'react';\nimport useEvent from '../useEvent';\n\nconst useOnClickOutside = (\n  nodeRef: RefObject<Node>,\n  handleClickOutside: ClickHandler,\n) =>\n  useEvent(document, ['mousedown', 'touchstart'], e => {\n    if (\n      handleClickOutside &&\n      nodeRef.current &&\n      !nodeRef.current.contains(e.target as Node)\n    ) {\n      handleClickOutside(e);\n    }\n  });\n\nexport default useOnClickOutside;\n\nexport type ClickHandler = (e: TouchEvent | MouseEvent) => void;\n","/**\n * References:\n * https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n * https://github.com/Andarist/use-previous\n * https://github.com/dispix/react-pirate\n * https://github.com/imbhargav5/rooks/tree/dev/packages/previous\n * https://github.com/kitze/react-hanger\n * https://github.com/zakariaharti/react-hookedup\n * https://github.com/imbhargav5/rooks/blob/dev/packages/previous/src/usePrevious.ts\n */\n\nimport { useRef, useEffect } from 'react';\n\nconst usePrevious = <TValue>(value: TValue) => {\n  const prevRef = useRef<TValue>();\n\n  useEffect(() => {\n    prevRef.current = value;\n  });\n\n  return prevRef.current;\n};\n\nexport default usePrevious;\n","/**\n * References:\n * https://github.com/jacob-ebey/react-hook-utils/blob/master/src/usePromise.js\n * https://github.com/aiven715/promise-hook/blob/master/src/index.js\n * https://github.com/streamich/react-use/blob/master/src/useAsyncFn.ts\n * https://github.com/adambrgmn/hooks/blob/master/src/use-promise/index.ts\n */\n\nimport { DependencyList, useState, useEffect } from 'react';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { InitialState, AsyncState } from '../types/common';\n\nconst usePromise = <TResult, TError = unknown>(\n  promiseFactory: () => Promise<TResult> | false | undefined | null,\n  deps: DependencyList = [],\n  initialState: InitialState<AsyncState<TResult, TError>> = PENDING_STATE,\n) => {\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    let isCancelled = false;\n    const promise = promiseFactory();\n\n    if (!promise) {\n      setState(PENDING_STATE);\n      return undefined;\n    }\n\n    setState(LOADING_STATE);\n    promise\n      .then(result => {\n        if (!isCancelled) setState({ loading: false, result });\n      })\n      .catch(error => {\n        if (!isCancelled) setState({ loading: false, error });\n      });\n\n    return () => {\n      isCancelled = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  return state;\n};\n\nexport default usePromise;\n\nexport type PromiseState<TResult = unknown, TError = unknown> =\n  | {\n      loading: boolean;\n      result?: undefined;\n      error?: undefined;\n    }\n  | {\n      loading: false;\n      result: TResult;\n      error?: undefined;\n    }\n  | {\n      loading: false;\n      result?: undefined;\n      error: TError;\n    };\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useAsyncFn.ts\n * https://github.com/adambrgmn/hooks/blob/master/src/use-promise/index.ts\n */\n\nimport { DependencyList, useState, useCallback } from 'react';\nimport useIsMounted from '../useIsMounted';\nimport useCurrent from '../useCurrent';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { InitialState, AsyncState } from '../types/common';\n\nconst usePromiseCallback = <TArgs extends any[], TResult, TError = unknown>(\n  promiseFactory: (\n    ...args: TArgs\n  ) => Promise<TResult> | false | undefined | null,\n  deps: DependencyList = [],\n  initialState: InitialState<AsyncState<TResult, TError>> = PENDING_STATE,\n) => {\n  const isMounted = useIsMounted();\n  const [state, setState] = useState(initialState);\n  const currentPromise = useCurrent<\n    Promise<TResult> | false | undefined | null\n  >();\n\n  const callback = useCallback(\n    (...args: TArgs) => {\n      const promise = promiseFactory(...args);\n      currentPromise.set(promise);\n\n      if (!promise) {\n        setState(PENDING_STATE);\n        return;\n      }\n\n      setState(LOADING_STATE);\n      promise\n        .then(result => {\n          if (currentPromise.is(promise) && isMounted()) {\n            setState({ loading: false, result });\n          }\n        })\n        .catch(error => {\n          if (currentPromise.is(promise) && isMounted()) {\n            setState({ loading: false, error });\n          }\n        });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    deps,\n  );\n\n  return [state, callback] as const;\n};\n\nexport default usePromiseCallback;\n","import { RefObject, useLayoutEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useResizeObserver = (\n  elementRef: RefObject<Element>,\n  callback: ResizeObserverCallback,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useLayoutEffect(() => {\n    if (!elementRef.current) return undefined;\n\n    const observer = new ResizeObserver(entries =>\n      callbackRef.current?.(entries),\n    );\n    observer.observe(elementRef.current);\n\n    return () => observer.disconnect();\n  }, [callbackRef, elementRef]);\n};\n\nexport default useResizeObserver;\n","import { useRef, useCallback, useLayoutEffect, useState } from 'react';\n\nconst useScrollSpy = () => {\n  const [id, setId] = useState<string>();\n  const elementMapRef = useRef(new Map<Element, string>());\n\n  const register = useCallback((arg: string | Element) => {\n    if (typeof arg === 'string') {\n      const elementId = arg;\n      return (element: Element) => {\n        elementMapRef.current.set(element, elementId);\n      };\n    }\n    const element = arg;\n    const elementId = arg.getAttribute('id');\n    if (elementId) {\n      elementMapRef.current.set(element, elementId);\n    }\n    return undefined;\n  }, []);\n\n  useLayoutEffect(() => {\n    const observer = new IntersectionObserver(\n      entries => {\n        const intersectingEntries = entries.filter(\n          ({ isIntersecting }) => isIntersecting,\n        );\n\n        if (!intersectingEntries.length) return;\n\n        const { target } = intersectingEntries[0];\n        const newId =\n          elementMapRef.current.get(target) ?? target.getAttribute('id');\n\n        if (typeof newId === 'string') {\n          setId(newId);\n        }\n      },\n      { threshold: 1 },\n    );\n\n    elementMapRef.current.forEach((_, element) => observer.observe(element));\n\n    return () => observer.disconnect();\n  }, []);\n\n  return [id, register] as [string, ScrollSpyRegister];\n};\n\nexport default useScrollSpy;\n\nexport interface ScrollSpyRegister {\n  (element: Element): void;\n  (id: string): (element: Element) => void;\n}\n","import { useState } from 'react';\nimport useHandleChangeText from '../useHandleChangeText';\nimport { InitialState } from '../types/common';\n\nconst useTextInput = (initialValue: InitialState<string> = '') => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = useHandleChangeText(setValue);\n  return [value, setValue, handleChange] as const;\n};\n\nexport default useTextInput;\n","/**\n * References:\n * https://github.com/dispix/react-pirate/blob/master/src/useTimeout.js\n * https://github.com/imbhargav5/rooks/blob/master/packages/timeout/src/useTimeout.ts\n */\n\nimport { DependencyList, useEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useTimeout = (\n  callback: VoidFunction,\n  ms: number,\n  deps: DependencyList = [ms],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useEffect(() => {\n    const handle = setTimeout(() => callbackRef.current?.(), ms);\n    return () => clearTimeout(handle);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useTimeout;\n","import { useRef, useCallback } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\nimport useDidMount from '../useDidMount';\n\nconst useTimeoutCallback = (callback: VoidFunction, ms: number) => {\n  const callbackRef = useUpdatedRef(callback);\n  const timeoutRef = useRef<TimeoutObject>();\n\n  useDidMount(() => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current.handle);\n      timeoutRef.current.resolve();\n    }\n  });\n\n  const timeoutCallback = useCallback(\n    () =>\n      new Promise<void>(resolve => {\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current.handle);\n          timeoutRef.current.resolve();\n        }\n        const handle = setTimeout(() => {\n          // eslint-disable-next-line no-unused-expressions\n          callbackRef.current?.();\n          resolve();\n        }, ms);\n        timeoutRef.current = { handle, resolve };\n      }),\n    [callbackRef, ms],\n  );\n\n  return timeoutCallback;\n};\n\nexport default useTimeoutCallback;\n\ninterface TimeoutObject {\n  handle: NodeJS.Timeout;\n  resolve: VoidFunction;\n}\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useToggle.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useToggle.js\n */\n\nimport { useState, useCallback } from 'react';\nimport useCurryFunction from '../useCurryFunction';\nimport { InitialState } from '../types/common';\n\nconst useToggle = (initialValue: InitialState<boolean> = false) => {\n  const [value, setValue] = useState(initialValue);\n  const toggle = useCallback(() => setValue(prevValue => !prevValue), []);\n  const setTrue = useCurryFunction(setValue, null, true);\n  const setFalse = useCurryFunction(setValue, null, false);\n  return [value, toggle, setTrue, setFalse, setValue] as const;\n};\n\nexport default useToggle;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useBeforeUnload.ts\n */\n\nimport useEvent from '../useEvent';\n\nconst useWindowBeforeUnload = (message?: string, enabled = true) =>\n  useEvent(\n    window,\n    'beforeunload',\n    e => {\n      e.preventDefault();\n      if (message) e.returnValue = message;\n      return message;\n    },\n    { enabled },\n  );\n\nexport default useWindowBeforeUnload;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useWindowScroll.ts\n */\n\nimport { useState } from 'react';\nimport useEvent from '../useEvent';\nimport { getWindowScrollOffset } from '../utils/common';\n\nconst useWindowScrollOffset = () => {\n  const [scrollOffset, setScrollOffset] = useState(getWindowScrollOffset);\n  useEvent(window, 'scroll', () => setScrollOffset(getWindowScrollOffset()), {\n    capture: false,\n    passive: true,\n    usingAnimationFrame: true,\n  });\n  return scrollOffset;\n};\n\nexport default useWindowScrollOffset;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useWindowSize.ts\n * https://github.com/imbhargav5/rooks/blob/dev/packages/window-size/src/useWindowSize.ts\n * https://github.com/contiamo/operational-ui/blob/master/src/useWindowSize/index.ts\n */\n\nimport { useState } from 'react';\nimport useEvent from '../useEvent';\nimport { getWindowSize } from '../utils/common';\n\nconst useWindowSize = () => {\n  const [size, setSize] = useState(getWindowSize);\n  useEvent(window, 'resize', () => setSize(getWindowSize()));\n  return size;\n};\n\nexport default useWindowSize;\n","import { useRef, useState, useCallback } from 'react';\nimport useWillUnmount from '../useWillUnmount';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { InitialState, AsyncState } from '../types/common';\n\nconst useWorkerCallback = <\n  TMessage = unknown,\n  TResult = unknown,\n  TError = unknown\n>(\n  workerUrl: string,\n  options?: WorkerOptions,\n  initialState: InitialState<AsyncState<TResult, TError>> = PENDING_STATE,\n) => {\n  const [state, setState] = useState(initialState);\n  const workerRef = useRef<Worker>();\n\n  const callback = useCallback(\n    (message: TMessage, opts?: PostMessageOptions) => {\n      if (workerRef.current) {\n        workerRef.current.terminate();\n      }\n\n      const worker = new Worker(workerUrl, options);\n      worker.addEventListener('message', e =>\n        setState({ loading: false, result: e.data }),\n      );\n      worker.addEventListener('error', e =>\n        setState({ loading: false, error: e.error }),\n      );\n      worker.postMessage(message, opts);\n      setState(LOADING_STATE);\n      workerRef.current = worker;\n    },\n    [options, workerUrl],\n  );\n\n  useWillUnmount(() => {\n    if (workerRef.current) workerRef.current.terminate();\n  });\n\n  return [state, callback] as const;\n};\n\nexport default useWorkerCallback;\n"],"names":["useUpdatedRef","value","deps","ref","useRef","useLayoutEffect","current","createUniqueObject","isBrowser","window","document","getWindowScrollOffset","x","scrollX","y","scrollY","getWindowSize","innerWidth","innerHeight","outerWidth","outerHeight","persistEvent","o","Object","nativeEvent","Event","isSyntheticEvent","persist","createRateLimitHook","rateLimit","func","wait","options","funcRef","rateLimitedFuncRef","useEffect","_rateLimitedFuncRef$c","cancel","useCallback","args","forEach","audit","result","timeoutId","lastArgs","ratedFunction","setTimeout","clearTimeout","useAudit","createRateLimitValueHook","useState","setValue","useAuditValue","useHandleChangeCheck","handlers","checked","target","handler","Boolean","useCurrent","initialValue","set","get","is","useCurryFunction","fn","thisArg","restArgs","apply","debounce","trailing","leading","useDebounce","useDebounceValue","useEffectOnce","effect","useDidMount","callback","checkAndInvokeEventListener","listener","event","selectors","matches","useEvent","element","eventNames","capture","once","passive","usingAnimationFrame","enabled","listenerRef","animationFrameRef","eventTarget","Function","getEventTarget","eventListener","e","cancelAnimationFrame","requestAnimationFrame","eventNameList","Array","isArray","eventName","addEventListener","removeEventListener","useTriggerUpdate","useReducer","useToggleFullscreen","elementRef","onChange","onError","toggleFullscreen","show","fullscreenElement","undefined","exitFullscreen","requestFullscreen","useHandleChangeNumber","Number","useHandleChangeText","String","useIsMounted","isMountedRef","PENDING_STATE","loading","LOADING_STATE","createResourceHook","tagName","isValid","attrs","initialState","isMounted","state","setState","id","querySelector","createElement","assign","handleLoad","handleError","error","body","appendChild","useLink","href","getMediaResult","mql","fromEntries","map","k","sample","intervalId","setInterval","clearInterval","useSample","useSampleValue","useScript","src","throttle","useThrottle","useThrottleValue","useWillUnmount","callbackRef","handle","time","cleanupRef","didMountRef","fullscreen","setFullscreen","files","observer","IntersectionObserver","entries","currentObserver","observe","disconnect","period","running","query","media","queryStr","json2mq","matchMedia","setResult","addListener","removeListener","nodeRef","MutationObserver","mutation","handleClickOutside","contains","prevRef","promiseFactory","isCancelled","promise","then","currentPromise","ResizeObserver","setId","elementMapRef","Map","register","arg","elementId","getAttribute","intersectingEntries","filter","isIntersecting","length","newId","threshold","_","ms","timeoutRef","resolve","Promise","prevValue","message","preventDefault","returnValue","scrollOffset","setScrollOffset","size","setSize","workerUrl","workerRef","opts","terminate","worker","Worker","data","postMessage"],"mappings":"sUAEA,IAAMA,EAAgB,SAASC,EAAeC,GAC5C,IAAMC,EAAMC,SAAOH,GAOnB,OALAI,kBAAgB,WACdF,EAAIG,QAAUL,GAEbC,GAEIC,GCPII,EAAqB,iBAAO,IAE5BC,EAAY,iBACL,oBAAXC,aAAqD,IAApBA,OAAOC,UAKpCC,EAAwB,kBACnCH,IAAc,CAAEI,EAAGH,OAAOI,QAASC,EAAGL,OAAOM,SAAY,IAE9CC,EAAgB,kBAC3BR,IACI,CACES,WAAYR,OAAOQ,WACnBC,YAAaT,OAAOS,YACpBC,WAAYV,OAAOU,WACnBC,YAAaX,OAAOW,aAEtB,IAEOC,EAAe,SAACC,UAhBG,SAACA,UAC/BA,aAAaC,QAAUD,EAAEE,uBAAuBC,MAeNC,CAAiBJ,IAAMA,EAAEK,WCd/DC,EAAsB,SAC1BC,mBAEAC,EACAC,EACAC,GAEA,IAAMC,EAAUjC,EAAc8B,GACxBI,EAAqB9B,SAAOyB,EAAUC,EAAMC,EAAMC,IAYxD,OAVAG,YAAU,WAOR,OANAD,EAAmB5B,QAAUuB,EAC3B,kBAAaI,EAAQ3B,cAAR2B,cACbF,EACAC,oCAGWE,EAAmB5B,gBAAnB8B,EAA4BC,WACxC,CAACJ,EAASD,EAASD,IAEfO,cAAqD,sCAAIC,2BAAAA,kBAE9D,OADAA,EAAKC,QAAQnB,GACNa,EAAmB5B,cAAnB4B,EAA8BK,IACpC,MC5BCE,EAA2B,SAC/BX,EACAC,GAEA,IAEIW,EAFAC,EAAmC,KACnCC,EAAyB,KAGvBC,EAAgE,sCACjEN,2BAAAA,kBAYH,OAVAK,EAAWL,EACO,OAAdI,IACFA,EAAYG,WAAW,WACJ,OAAbF,IACFF,EAASZ,eAAQc,GACjBA,EAAW,MAEbD,EAAY,MACXZ,IAEEW,GAWT,OARAG,EAAcR,OAAS,WACH,OAAdM,GACFI,aAAaJ,GAEfA,EAAY,KACZC,EAAW,MAGNC,GClCHG,EAAWpB,EAAoBa,GCC/BQ,EAA2B,SAC/BpB,mBAEAC,EACAS,EACAR,EACAC,SAE0BkB,aAAnBjD,OAAOkD,OACRlB,EAAUjC,EAAc8B,GACxBI,EAAqB9B,SAAOyB,EAAUC,EAAMC,EAAMC,IAqBxD,OAnBAG,YAAU,WAWR,OAVAD,EAAmB5B,QAAUuB,EAC3B,WACE,IAAMa,EAAST,EAAQ3B,cAAR2B,aAEf,OADAkB,EAAST,GACFA,GAETX,EACAC,oCAGWE,EAAmB5B,gBAAnB8B,EAA4BC,WACxC,CAACJ,EAASD,EAASD,IAEtBI,YAAU,WACRD,EAAmB5B,cAAnB4B,EAA8BK,IAE7BA,GAEItC,IChCHmD,EAAgBH,EAAyBR,GCAzCY,EAAuB,sCACxBC,2BAAAA,yBAEHhB,cACE,gBAAaiB,IAAVC,OAAUD,eACXD,EAASd,QAAQ,SAAAiB,gBAAWA,SAAAA,EAAUC,QAAQH,OAEhDD,ICPEK,EAAa,SAASC,GAC1B,IAAMzD,EAAMC,SAAOwD,GAEnB,MAAO,CACLC,IAAK,SAAC5D,GACJE,EAAIG,QAAUL,GAEhB6D,IAAK,kBAAM3D,EAAIG,SACfyD,GAAI,SAAC9D,UAAkBE,EAAIG,UAAYL,KCTrC+D,EAAqC,SACzCC,EACAC,YAAAA,IAAAA,EAAe,iCACZ3B,mCAAAA,2BAEHD,cACE,sCAAI6B,2BAAAA,+BAAoBF,SAAAA,EAAIG,MAAMF,YAAa3B,EAAS4B,MAEvDF,UAAO1B,KCLN8B,EAA0D,SAI9DvC,EACAC,SAKIW,eAJqC,CAAE4B,UAAU,KAAnDC,IAAAA,QAASD,IAAAA,SAEP1B,EAAyB,KACzBD,EAAmC,KAGjCE,EAAgE,sCACjEN,2BAAAA,kBAmBH,OAjBAK,EAAWL,EAEO,OAAdI,EACFI,aAAaJ,GACJ4B,IACT7B,EAASZ,eAAQc,GACjBA,EAAW,MAGbD,EAAYG,WAAW,WACjBwB,GAAyB,OAAb1B,IACdF,EAASZ,eAAQc,GACjBA,EAAW,MAEbD,EAAY,MACXZ,GAEIW,GAWT,OARAG,EAAcR,OAAS,WACH,OAAdM,GACFI,aAAaJ,GAEfC,EAAW,KACXD,EAAY,MAGPE,GC7CH2B,EAAc5C,EAAoByC,GCAlCI,EAAmBxB,EAAyBoB,GCI5CK,EAAgB,SAACC,UAA2BxC,YAAUwC,EAAQ,KCE9DC,EAAc,SAACC,UAA2BH,EAAcG,ICOxDC,EAA8B,SAClCC,EACAC,EACAC,GANgB,IAACzB,EAQZuB,KAIHE,IAZezB,EAaHwB,EAAMxB,kBAZFjC,QAAU,YAAaiC,GAYTwB,EAAMxB,OAAO0B,QAAQD,KAIrDF,EAASC,IAGLG,EAAyB,SAC7BC,EACAC,EACAN,sBAQqB,KANnBO,IAAAA,QACAC,IAAAA,KACAC,IAAAA,QACAP,IAAAA,UACAQ,IAAAA,wBACAC,QAAAA,gBAGIC,EAAc3F,EAAc+E,GAC5Ba,EAAoBxF,SAAO,GAEjC+B,YAAU,WACR,GAAKuD,EAAL,CAIA,IAAMG,EA5Ca,SAAWT,UAChCA,aAAmBU,SAAWV,IAAYA,EA2CpBW,CAAeX,GACnC,GAAKS,EAAL,CAIA,IAAMG,EAAgB,SAACC,GACjBR,GACFS,qBAAqBN,EAAkBtF,SACvCsF,EAAkBtF,QAAU6F,sBAAsB,kBAChDrB,EAA4Ba,EAAYrF,QAAS2F,EAAGhB,MAGtDH,EAA4Ba,EAAYrF,QAAS2F,EAAGhB,IAIlDmB,EAAgBC,MAAMC,QAAQjB,GAAcA,EAAa,CAACA,GAUhE,OARAe,EAAc5D,QAAQ,SAAA+D,UACpBV,EAAYW,iBAAiBD,EAAWP,EAAe,CACrDV,QAAAA,EACAC,KAAAA,EACAC,QAAAA,iBAKEC,GAAuBG,EAAkBtF,SAC3C4F,qBAAqBN,EAAkBtF,SAEzC8F,EAAc5D,QAAQ,SAAA+D,UACpBV,EAAYY,oBAAoBF,EAAWP,EAAe,CAAEV,QAAAA,WAKhEF,EACAE,EACAC,EACAC,EACAP,EACAQ,EACAC,UAEGL,KC/FDqB,EAAmB,kBACvBC,aAAWpG,EfD4B,KgBMnCqG,EAAsB,SAC1BC,EACAC,EACAC,YADAD,IAAAA,EAAiC,eACjCC,IAAAA,EAAgC,MAEhC,IAAMC,EAAmB1E,cACvB,SAAC2E,UAEGvG,SAASwG,oBACC,IAATD,QAA2BE,IAATF,GAEnBvG,SAAS0G,iBAIR1G,SAASwG,oBACA,IAATD,QAA0BE,IAATF,YAGlBJ,EAAWvG,kBAAS+G,qBAAAA,qBAGxB,CAACR,IAMH,OAHA1B,EAASzE,SAAU,mBAAoBoG,GACvC3B,EAASzE,SAAU,kBAAmBqG,GAE/BC,GClCHM,EAAwB,sCACzBhE,2BAAAA,yBAEHhB,cACE,gBAAarC,IAAVuD,OAAUvD,aACXqD,EAASd,QAAQ,SAAAiB,gBAAWA,SAAAA,EAAU8D,OAAOtH,OAE/CqD,ICPEkE,EAAsB,sCACvBlE,2BAAAA,yBAEHhB,cACE,gBAAarC,IAAVuD,OAAUvD,aACXqD,EAASd,QAAQ,SAAAiB,gBAAWA,SAAAA,EAAUgE,OAAOxH,OAE/CqD,ICAEoE,EAAe,WACnB,IAAMC,EAAevH,UAAO,GAS5B,OAPAsE,EAAc,WAEZ,OADAiD,EAAarH,SAAU,aAErBqH,EAAarH,SAAU,KAIpBgC,cAAY,kBAAMqF,EAAarH,SAAS,KClBpCsH,EAAsC,CAAEC,SAAS,GACjDC,EAAsC,CAAED,SAAS,GCOxDE,EAAqB,SACzBC,EACAC,mBAEAC,EACAC,YAAAA,IAAAA,EAAyCP,GAEzC,IAAMQ,EAAYV,MACQxE,WAASiF,GAA5BE,OAAOC,OAsCd,OApCAnG,YAAU,WACR,GAAK8F,EAAQC,GAAb,CAKA,IAAM9C,EAAY8C,EAAMK,IACtB7H,SAAS8H,cAAiBR,MAAWE,EAAMK,KAC3C7H,SAAS+H,cAAcT,GAEzBzG,OAAOmH,OAAOtD,EAAS8C,GAEvB,IAAMS,EAAa,WACbP,KACFE,EAASV,IAIPgB,EAAc,SAAC3C,GACfmC,KACFE,EAAS,CAAET,SAAS,EAAOgB,MAAO5C,EAAE4C,SAUxC,OANAzD,EAAQoB,iBAAiB,OAAQmC,GAAY,GAC7CvD,EAAQoB,iBAAiB,QAASoC,GAAa,GAE/CN,EAASR,GACTpH,SAASoI,KAAKC,YAAY3D,cAGxBA,EAAQqB,oBAAoB,OAAQkC,GAAY,GAChDvD,EAAQqB,oBAAoB,QAASmC,GAAa,IA9BlDN,EAASV,IAgCV,CAACM,EAAOE,IAEJC,ICrDHW,EAAUjB,EACd,OACA,gBAAGkB,IAAAA,YACDzI,OAAiByI,IAASvI,SAAS8H,4BAA4BS,UCe7DC,EAAiB,SAACC,UvBMtB7H,EuBLS6H,EvBQR5H,OAAO6H,YuBRM,CAAC,UAAW,SvBQDC,IAAI,SAAAC,SAAK,CAACA,EAAGhI,EAAEgI,OAJlB,IACtBhI,GwBtBIiI,EAA4B,SAChCzH,EACAC,GAEA,IACIW,EADAE,EAAyB,KAGvB4G,EAAaC,YAAY,WACzB7G,IACFF,EAASZ,eAAQc,GACjBA,EAAW,OAEZb,GAEGc,EAAgE,sCACjEN,2BAAAA,kBAGH,OADAK,EAAWL,EACJG,GAQT,OALAG,EAAcR,OAAS,WACrBqH,cAAcF,GACd5G,EAAW,MAGNC,GC5BH8G,EAAY/H,EAAoB2H,GCAhCK,EAAiB3G,EAAyBsG,GCA1CM,EAAY9B,EAChB,SACA,gBAAG+B,IAAAA,WACDtJ,OAAiBsJ,IAAQpJ,SAAS8H,6BAA6BsB,UCD7DC,EAA0D,SAI9DjI,EACAC,SAKIW,eAJqC,CAAE6B,SAAS,EAAMD,UAAU,KAAlEC,IAAAA,QAASD,IAAAA,SAEP1B,EAAyB,KACzBD,EAAmC,KAGjCE,EAAgE,sCACjEN,2BAAAA,kBAmBH,OAjBAK,EAAWL,EAEO,OAAdI,IACE4B,IACF7B,EAASZ,eAAQc,GACjBA,EAAW,MAGbD,EAAYG,WAAW,WACjBwB,GAAyB,OAAb1B,IACdF,EAASZ,eAAQc,GACjBA,EAAW,MAEbD,EAAY,MACXZ,IAGEW,GAWT,OARAG,EAAcR,OAAS,WACH,OAAdM,GACFI,aAAaJ,GAEfC,EAAW,KACXD,EAAY,MAGPE,GC7CHmH,EAAcpI,EAAoBmI,GCAlCE,EAAmBhH,EAAyB8G,GCM5CG,EAAiB,SAACrF,UACtBH,EAAc,kBAAMG,yBCPI,SACxBA,EACA3E,YAAAA,IAAAA,EAAuB,IAEvB,IAAMiK,EAAcnK,EAAc6E,GAElC1C,YAAU,WACR,IAAMiI,EAASjE,sBAAsB,SAAAkE,gBAAQF,EAAY7J,eAAZ6J,EAAY7J,QAAU+J,KAEnE,yBAAanE,qBAAqBkE,KAEjClK,4DCX0B,SAC7B2E,EACA3E,YAAAA,IAAAA,EAAuB,IAEvB,IAAMiK,EAAcnK,EAAc6E,GAC5ByF,EAAalK,WAEnB,OAAOkC,cAAY,WACbgI,EAAWhK,SAASgK,EAAWhK,qCADdiC,2BAAAA,kBAErB+H,EAAWhK,cAAU6J,EAAY7J,eAAZ6J,EAAY7J,cAAZ6J,EAAyB5H,IAE7CrC,oBCViB,SAAC0D,YAAAA,IAAAA,GAAsC,SACjCV,WAASU,GAArBT,OAEd,MAAO,MAAQA,EADME,EAAqBF,6GCEvB,SAAC0B,EAA0B3E,GAC9C,IAAMqK,EAAcnK,UAAO,GAE3B+B,YACEoI,EAAYjK,QACRuE,EACA,WACE0F,EAAYjK,SAAU,GAE5BJ,oDCTmB,kBAAMwG,IAAmB,oBCJ1B,SAACG,SACe3D,YAAS,GAAtCsH,OAAYC,OAKbzD,EAAmBJ,EAAoBC,EADxB,kBAAM4D,IAFvB/J,SAASwG,mBACXxG,SAASwG,oBAAsBL,EAAWvG,WAK5C,MAAO,CACLkK,EACAxD,EAJsBhD,EAAiBgD,EAAkB,MAAM,GAC1ChD,EAAiBgD,EAAkB,MAAM,oDCTtC,sCACvB1D,2BAAAA,yBAEHhB,cACE,gBAAaoI,IAAVlH,OAAUkH,aACXpH,EAASd,QAAQ,SAAAiB,gBAAWA,SAAAA,EAAUiH,MAExCpH,gFCD4B,SAC9BuD,EACAhC,EACA7C,GAEA,IAAMmI,EAAcnK,EAAc6E,GAElCxE,kBAAgB,WACd,GAAKwG,EAAWvG,QAAhB,CAEA,IAAMqK,EAAW,IAAIC,qBACnB,SAACC,EAASC,gBACRX,EAAY7J,eAAZ6J,EAAY7J,QAAUuK,EAASC,IACjC9I,GAIF,OAFA2I,EAASI,QAAQlE,EAAWvG,2BAEfqK,EAASK,gBACrB,CAACb,EAAatD,EAAY7E,mBClBX,SAClB6C,SAEEoG,IAAAA,OACA1G,IAAAA,QACA2G,IAAAA,YACAhL,KAAAA,aAAO,CAAC+K,EAAQ1G,EAAS2G,KAGrBf,EAAcnK,EAAc6E,GAElC1C,YAAU,WACR,IAAIiI,EAQJ,OANIc,IAEE3G,UAAS4F,EAAY7J,SAAZ6J,EAAY7J,WACzB8J,EAASX,YAAY,wBAAMU,EAAY7J,eAAZ6J,EAAY7J,WAAa2K,eAIhDb,GAAQV,cAAcU,KAG3BlK,iDjBTiB,SACpBiL,EACAhD,YAAAA,IAAAA,EAA0C,CAAEiD,MAAO,GAAIlG,SAAS,IAEhE,IAAMmG,EAA4B,iBAAVF,EAAqBA,EAAQG,EAAQH,KACjCjI,WAC1B1C,IACI,kBAAM0I,EAAezI,OAAO8K,WAAWF,KACvClD,GAHCzF,OAAQ8I,OAgBf,OAVArJ,YAAU,WACR,IAAMgH,EAAM1I,OAAO8K,WAAWF,GACxBvE,EAAW,SAACb,GAChBuF,EAAUvF,IAIZ,OAFAuF,EAAUtC,EAAeC,IACzBA,EAAIsC,YAAY3E,qBACHqC,EAAIuC,eAAe5E,KAC/B,CAACuE,IAEG3I,yBkBpCmB,SAC1BiJ,EACA9G,EACA7C,GAEA,IAAMmI,EAAcnK,EAAc6E,GAElCxE,kBAAgB,WACd,GAAKsL,EAAQrL,QAAb,CAEA,IAAMqK,EAAW,IAAIiB,iBAAiB,SAACC,EAAUf,gBAC/CX,EAAY7J,eAAZ6J,EAAY7J,QAAUuL,EAAUf,KAIlC,OAFAH,EAASI,QAAQY,EAAQrL,QAAS0B,qBAErB2I,EAASK,gBACrB,CAACb,EAAawB,EAAS3J,sBCrBL,SAAC4B,YAAAA,IAAAA,EAAqC,SACjCV,WAASU,GAArBT,OAEd,MAAO,MAAQA,EADMmE,EAAsBnE,yBCMnB,SACxBwI,EACAG,UAEA3G,EAASzE,SAAU,CAAC,YAAa,cAAe,SAAAuF,GAE5C6F,GACAH,EAAQrL,UACPqL,EAAQrL,QAAQyL,SAAS9F,EAAEzC,SAE5BsI,EAAmB7F,oBCTL,SAAShG,GAC3B,IAAM+L,EAAU5L,WAMhB,OAJA+B,YAAU,WACR6J,EAAQ1L,QAAUL,IAGb+L,EAAQ1L,sBCRE,SACjB2L,EACA/L,EACAiI,YADAjI,IAAAA,EAAuB,aACvBiI,IAAAA,EAA0DP,SAEhC1E,WAASiF,GAA5BE,OAAOC,OA0Bd,OAxBAnG,YAAU,WACR,IAAI+J,GAAc,EACZC,EAAUF,IAEhB,GAAKE,EAcL,OATA7D,EAASR,GACTqE,EACGC,KAAK,SAAA1J,GACCwJ,GAAa5D,EAAS,CAAET,SAAS,EAAOnF,OAAAA,YAExC,SAAAmG,GACAqD,GAAa5D,EAAS,CAAET,SAAS,EAAOgB,MAAAA,iBAI/CqD,GAAc,GAdd5D,EAASV,IAiBV1H,GAEImI,wBC/BkB,SACzB4D,EAGA/L,EACAiI,YADAjI,IAAAA,EAAuB,aACvBiI,IAAAA,EAA0DP,GAE1D,IAAMQ,EAAYV,MACQxE,WAASiF,GAA5BE,OAAOC,OACR+D,EAAiB1I,IA+BvB,MAAO,CAAC0E,EA3BS/F,cACf,WACE,IAAM6J,EAAUF,0BAChBI,EAAexI,IAAIsI,GAEdA,GAKL7D,EAASR,GACTqE,EACGC,KAAK,SAAA1J,GACA2J,EAAetI,GAAGoI,IAAY/D,KAChCE,EAAS,CAAET,SAAS,EAAOnF,OAAAA,YAGxB,SAAAmG,GACDwD,EAAetI,GAAGoI,IAAY/D,KAChCE,EAAS,CAAET,SAAS,EAAOgB,MAAAA,OAb/BP,EAASV,IAkBb1H,yBC9CsB,SACxB2G,EACAhC,GAEA,IAAMsF,EAAcnK,EAAc6E,GAElCxE,kBAAgB,WACd,GAAKwG,EAAWvG,QAAhB,CAEA,IAAMqK,EAAW,IAAI2B,eAAe,SAAAzB,gBAClCV,EAAY7J,eAAZ6J,EAAY7J,QAAUuK,KAIxB,OAFAF,EAASI,QAAQlE,EAAWvG,2BAEfqK,EAASK,gBACrB,CAACb,EAAatD,mEChBE,iBACC3D,aAAbqF,OAAIgE,OACLC,EAAgBpM,SAAO,IAAIqM,KAE3BC,EAAWpK,cAAY,SAACqK,GAC5B,GAAmB,iBAARA,EAAkB,CAC3B,IAAMC,EAAYD,EAClB,gBAAQvH,GACNoH,EAAclM,QAAQuD,IAAIuB,EAASwH,IAGvC,IAAMxH,EAAUuH,EACVC,EAAYD,EAAIE,aAAa,MAC/BD,GACFJ,EAAclM,QAAQuD,IAAIuB,EAASwH,IAGpC,IA2BH,OAzBAvM,kBAAgB,WACd,IAAMsK,EAAW,IAAIC,qBACnB,SAAAC,SACQiC,EAAsBjC,EAAQkC,OAClC,qBAAGC,iBAGL,GAAKF,EAAoBG,OAAzB,KAEQzJ,EAAWsJ,EAAoB,GAA/BtJ,OACF0J,WACJV,EAAclM,QAAQwD,IAAIN,MAAWA,EAAOqJ,aAAa,MAEtC,iBAAVK,GACTX,EAAMW,KAGV,CAAEC,UAAW,IAKf,OAFAX,EAAclM,QAAQkC,QAAQ,SAAC4K,EAAGhI,UAAYuF,EAASI,QAAQ3F,uBAElDuF,EAASK,eACrB,IAEI,CAACzC,EAAImE,mBC1CO,SAAC9I,YAAAA,IAAAA,EAAqC,UAC/BV,WAASU,GAArBT,OAEd,MAAO,MAAQA,EADMqE,EAAoBrE,uDCGxB,SACjB0B,EACAwI,EACAnN,YAAAA,IAAAA,EAAuB,CAACmN,IAExB,IAAMlD,EAAcnK,EAAc6E,GAElC1C,YAAU,WACR,IAAMiI,EAAStH,WAAW,wBAAMqH,EAAY7J,eAAZ6J,EAAY7J,WAAa+M,GACzD,yBAAatK,aAAaqH,KAEzBlK,yBChBsB,SAAC2E,EAAwBwI,GAClD,IAAMlD,EAAcnK,EAAc6E,GAC5ByI,EAAalN,WA0BnB,OAxBAwE,EAAY,WACN0I,EAAWhN,UACbyC,aAAauK,EAAWhN,QAAQ8J,QAChCkD,EAAWhN,QAAQiN,aAICjL,cACtB,sBACMkL,QAAc,SAAAD,GACZD,EAAWhN,UACbyC,aAAauK,EAAWhN,QAAQ8J,QAChCkD,EAAWhN,QAAQiN,WAErB,IAAMnD,EAAStH,WAAW,iBAExBqH,EAAY7J,SAAZ6J,EAAY7J,UACZiN,KACCF,GACHC,EAAWhN,QAAU,CAAE8J,OAAAA,EAAQmD,QAAAA,MAEnC,CAACpD,EAAakD,iBCnBA,SAACzJ,YAAAA,IAAAA,GAAsC,SAC7BV,WAASU,GAArBT,OAId,MAAO,MAHQb,cAAY,kBAAMa,EAAS,SAAAsK,UAAcA,KAAY,IACpDzJ,EAAiBb,EAAU,MAAM,GAChCa,EAAiBb,EAAU,MAAM,GACRA,8GCRd,SAACuK,EAAkBhI,mBAAAA,IAAAA,GAAU,GACzDP,EACE1E,OACA,eACA,SAAAwF,GAGE,OAFAA,EAAE0H,iBACED,IAASzH,EAAE2H,YAAcF,GACtBA,GAET,CAAEhI,QAAAA,6BCPwB,iBACYxC,WAASvC,GAA1CkN,OAAcC,OAMrB,OALA3I,EAAS1E,OAAQ,SAAU,kBAAMqN,EAAgBnN,MAA0B,CACzE2E,SAAS,EACTE,SAAS,EACTC,qBAAqB,IAEhBoI,mBCLa,iBACI3K,WAASlC,GAA1B+M,OAAMC,OAEb,OADA7I,EAAS1E,OAAQ,SAAU,kBAAMuN,EAAQhN,OAClC+M,uBCTiB,SAKxBE,EACAjM,EACAmG,YAAAA,IAAAA,EAA0DP,SAEhC1E,WAASiF,GAA5BE,OAAOC,OACR4F,EAAY9N,WAEZyE,EAAWvC,cACf,SAACoL,EAAmBS,GACdD,EAAU5N,SACZ4N,EAAU5N,QAAQ8N,YAGpB,IAAMC,EAAS,IAAIC,OAAOL,EAAWjM,GACrCqM,EAAO7H,iBAAiB,UAAW,SAAAP,UACjCqC,EAAS,CAAET,SAAS,EAAOnF,OAAQuD,EAAEsI,SAEvCF,EAAO7H,iBAAiB,QAAS,SAAAP,UAC/BqC,EAAS,CAAET,SAAS,EAAOgB,MAAO5C,EAAE4C,UAEtCwF,EAAOG,YAAYd,EAASS,GAC5B7F,EAASR,GACToG,EAAU5N,QAAU+N,GAEtB,CAACrM,EAASiM,IAOZ,OAJA/D,EAAe,WACTgE,EAAU5N,SAAS4N,EAAU5N,QAAQ8N,cAGpC,CAAC/F,EAAOxD"}