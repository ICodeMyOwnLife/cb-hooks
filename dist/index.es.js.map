{"version":3,"file":"index.es.js","sources":["../src/hooks/useUpdatedRef.ts","../src/hooks/useEvent.ts","../src/hooks/useWindowBeforeUnload.ts","../src/creators/createHistoryBlockHook.ts","../src/creators/createBeforeLeaveHook.ts","../src/constants/common.ts","../src/hooks/usePromise.ts","../src/utils/FetchError.ts","../src/creators/createFetchHook.ts","../src/creators/createHistoryListenHook.ts","../src/utils/common.ts","../src/creators/createRateLimitHook.ts","../src/creators/createRateLimitValueHook.ts","../src/creators/createResourceHook.ts","../src/creators/createSearchParamsObjectHook.ts","../src/hooks/useAnimationFrame.ts","../src/hooks/useArray.ts","../src/hooks/useAudit.ts","../src/hooks/useAuditValue.ts","../src/hooks/useBase.ts","../src/hooks/useCallbackWithCleanup.ts","../src/hooks/useHandleChangeCheck.ts","../src/hooks/useCheckInput.ts","../src/hooks/useCurrent.ts","../src/hooks/useCurryFunction.ts","../src/hooks/useDebounce.ts","../src/hooks/useDebounceValue.ts","../src/hooks/useEffectOnce.ts","../src/hooks/useDidMount.ts","../src/hooks/useDidUpdate.ts","../src/hooks/useUpdatedLink.ts","../src/hooks/useFavicon.ts","../src/hooks/useFetch.ts","../src/hooks/useFetchArrayBuffer.ts","../src/hooks/useFetchBlob.ts","../src/hooks/useFetchFormData.ts","../src/hooks/useFetchStream.ts","../src/hooks/useFetchText.ts","../src/hooks/useTriggerUpdate.ts","../src/hooks/useForceUpdate.ts","../src/hooks/useToggleFullscreen.ts","../src/hooks/useFullscreen.ts","../src/hooks/useHandleChangeFile.ts","../src/hooks/useHandleChangeNumber.ts","../src/hooks/useHandleChangeText.ts","../src/hooks/useIntersectionObserverEffect.ts","../src/hooks/useInfiniteScroll.ts","../src/hooks/useIntersectionObserver.ts","../src/hooks/useInterval.ts","../src/hooks/useIsMounted.ts","../src/hooks/useLazyLoad.ts","../src/hooks/useLink.ts","../src/hooks/useMediaQuery.ts","../src/hooks/useMutationObserver.ts","../src/hooks/useNumberInput.ts","../src/hooks/useOnClickOutside.ts","../src/hooks/usePageVisibility.ts","../src/hooks/usePageVisibilityState.ts","../src/hooks/usePrevious.ts","../src/hooks/usePromiseCallback.ts","../src/hooks/useResizeObserver.ts","../src/hooks/useSample.ts","../src/hooks/useSampleValue.ts","../src/hooks/useScript.ts","../src/hooks/useScrollSpy.ts","../src/hooks/useTextInput.ts","../src/hooks/useThrottle.ts","../src/hooks/useThrottleValue.ts","../src/hooks/useTimeline.ts","../src/hooks/useTimeout.ts","../src/hooks/useTimeoutCallback.ts","../src/hooks/useWillUnmount.ts","../src/hooks/useTitle.ts","../src/hooks/useToggle.ts","../src/hooks/useWindowScrollOffset.ts","../src/hooks/useWindowSize.ts","../src/hooks/useWorkerCallback.ts"],"sourcesContent":["import { DependencyList, useRef, useLayoutEffect } from 'react';\n\nconst useUpdatedRef = <TValue>(value: TValue, deps?: DependencyList) => {\n  const ref = useRef(value);\n\n  useLayoutEffect(() => {\n    ref.current = value;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  return ref;\n};\n\nexport default useUpdatedRef;\n","/**\n * References:\n * https://github.com/donavon/use-event-listener\n * https://github.com/streamich/react-use/blob/master/src/useEvent.ts\n * https://github.com/adambrgmn/hooks/blob/master/src/use-event-listener/index.ts\n */\n\nimport { useRef, useEffect } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst getEventTarget = <TElement>(element: ElementType<TElement>) =>\n  element instanceof Function ? element() : element;\n\nconst isElement = (target: EventTarget | null): target is Element =>\n  target instanceof Object && 'matches' in target;\n\nconst checkAndInvokeEventListener = (\n  listener: EventListener | null,\n  event: Event,\n  selectors: string | undefined,\n) => {\n  if (!listener) {\n    return;\n  }\n  if (\n    selectors &&\n    (!isElement(event.target) || !event.target.matches(selectors))\n  ) {\n    return;\n  }\n  listener(event);\n};\n\nconst useEvent: UseEvent = (\n  element: ElementType<EventTarget>,\n  eventNames: string | string[],\n  listener: EventListener | null,\n  {\n    capture,\n    once,\n    passive,\n    selectors,\n    usingAnimationFrame,\n    enabled = true,\n  }: UseEventOptions = {},\n) => {\n  const listenerRef = useUpdatedRef(listener);\n  const animationFrameRef = useRef(0);\n\n  useEffect(() => {\n    if (!enabled) {\n      return undefined;\n    }\n\n    const eventTarget = getEventTarget(element);\n    if (!eventTarget) {\n      return undefined;\n    }\n\n    const eventListener = (e: Event) => {\n      if (usingAnimationFrame) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = requestAnimationFrame(() =>\n          checkAndInvokeEventListener(listenerRef.current, e, selectors),\n        );\n      } else {\n        checkAndInvokeEventListener(listenerRef.current, e, selectors);\n      }\n    };\n\n    const eventNameList = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n    eventNameList.forEach(eventName =>\n      eventTarget.addEventListener(eventName, eventListener, {\n        capture,\n        once,\n        passive,\n      }),\n    );\n\n    return () => {\n      if (usingAnimationFrame && animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      eventNameList.forEach(eventName =>\n        eventTarget.removeEventListener(eventName, eventListener, { capture }),\n      );\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    element,\n    capture,\n    once,\n    passive,\n    selectors,\n    usingAnimationFrame,\n    enabled,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    ...eventNames,\n  ]);\n};\n\nexport default useEvent;\n\ninterface UseEvent {\n  <TEventName extends keyof WindowEventMap>(\n    element: ElementType<Window>,\n    eventNames: TEventName | TEventName[],\n    listener: (e: WindowEventMap[TEventName]) => void | null,\n    options?: UseEventOptions,\n  ): void;\n  <TEventName extends keyof DocumentEventMap>(\n    element: ElementType<Document>,\n    eventNames: TEventName | TEventName[],\n    listener: (e: DocumentEventMap[TEventName]) => void | null,\n    options?: UseEventOptions,\n  ): void;\n  <TEventName extends keyof HTMLElementEventMap>(\n    element: ElementType<HTMLElement>,\n    eventNames: TEventName | TEventName[],\n    listener: (e: HTMLElementEventMap[TEventName]) => void | null,\n    options?: UseEventOptions,\n  ): void;\n  (\n    element: ElementType<EventTarget>,\n    eventNames: string | string[],\n    listener: EventListener | null,\n    options?: UseEventOptions,\n  ): void;\n}\n\nexport interface UseEventOptions extends AddEventListenerOptions {\n  selectors?: string;\n  usingAnimationFrame?: boolean;\n  enabled?: boolean;\n}\n\ntype ElementType<TElement> = ValueFactory<TElement | null | undefined | false>;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useBeforeUnload.ts\n */\n\nimport useEvent from './useEvent';\n\nconst useWindowBeforeUnload = (message?: string, enabled = true) =>\n  useEvent(\n    window,\n    'beforeunload',\n    e => {\n      e.preventDefault();\n      if (message) e.returnValue = message;\n      return message;\n    },\n    { enabled },\n  );\n\nexport default useWindowBeforeUnload;\n","/**\n * References:\n * https://github.com/ReactTraining/history/blob/master/docs/Blocking.md\n */\nimport { useEffect } from 'react';\nimport { History, TransitionPromptHook } from 'history';\nimport useUpdatedRef from '../hooks/useUpdatedRef';\n\nconst createHistoryBlockHook = (history: History) => (\n  handler: TransitionPromptHook<unknown>,\n) => {\n  const handlerRef = useUpdatedRef(handler);\n\n  useEffect(() => {\n    const unblock = history.block((location, action) =>\n      handlerRef.current?.(location, action),\n    );\n    return () => unblock();\n  }, [handlerRef]);\n};\n\nexport default createHistoryBlockHook;\n","import { History } from 'history';\nimport useWindowBeforeUnload from '../hooks/useWindowBeforeUnload';\nimport createHistoryBlockHook from './createHistoryBlockHook';\n\nconst createBeforeLeaveHook = (history: History) => (\n  enabled = true,\n  message?: string,\n) => {\n  const useHistoryBlock = createHistoryBlockHook(history);\n  useHistoryBlock(() => (enabled ? message || false : undefined));\n  useWindowBeforeUnload(message, enabled);\n};\n\nexport default createBeforeLeaveHook;\n","import { AsyncState } from '../types/common';\n\nexport const PENDING_STATE: AsyncState<any, any> = { loading: false };\nexport const LOADING_STATE: AsyncState<any, any> = { loading: true };\n","/**\n * References:\n * https://github.com/jacob-ebey/react-hook-utils/blob/master/src/usePromise.js\n * https://github.com/aiven715/promise-hook/blob/master/src/index.js\n * https://github.com/streamich/react-use/blob/master/src/useAsyncFn.ts\n * https://github.com/adambrgmn/hooks/blob/master/src/use-promise/index.ts\n */\n\nimport { DependencyList, useState, useEffect } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { AsyncState } from '../types/common';\n\nconst usePromise = <TResult, TError = unknown>(\n  promiseFactory: () => Promise<TResult> | false | undefined | null,\n  deps: DependencyList = [],\n  initialState: ValueFactory<AsyncState<TResult, TError>> = PENDING_STATE,\n  cleanup?: VoidFunction,\n) => {\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    let isCancelled = false;\n    const promise = promiseFactory();\n\n    if (!promise) {\n      setState(PENDING_STATE);\n      return undefined;\n    }\n\n    setState(LOADING_STATE);\n\n    promise\n      .then(result => {\n        if (!isCancelled) setState({ loading: false, result });\n      })\n      .catch(error => {\n        if (!isCancelled) setState({ loading: false, error });\n      });\n\n    return () => {\n      isCancelled = true;\n      cleanup?.();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  return state;\n};\n\nexport default usePromise;\n\nexport type PromiseState<TResult = unknown, TError = unknown> =\n  | {\n      loading: boolean;\n      result?: undefined;\n      error?: undefined;\n    }\n  | {\n      loading: false;\n      result: TResult;\n      error?: undefined;\n    }\n  | {\n      loading: false;\n      result?: undefined;\n      error: TError;\n    };\n","export default class FetchError extends Error {\n  constructor(statusText: string, readonly status: number) {\n    super(statusText || 'Fetch Error');\n  }\n}\n","/**\n * References:\n * https://github.com/mauricedb/use-abortable-fetch\n * https://medium.com/better-programming/learn-to-create-your-own-usefetch-react-hook-9cc31b038e53\n * https://github.com/ilyalesik/react-fetch-hook\n * https://github.com/raghav-grover/use-fetcher\n * https://github.com/alex-cory/use-http/blob/1d42e236846f7dc2ae13f6ad2861bb986252563a/src/useFetch.ts\n * https://github.com/franlol/useFetch\n */\n\nimport { useRef, DependencyList } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport { OmitFrom } from 'cb-toolset/object';\nimport usePromise from '../hooks/usePromise';\nimport FetchError from '../utils/FetchError';\nimport { AsyncState } from '../types/common';\n\nconst createFetchHook = <TResult>(\n  fetchFn: (input: RequestInfo, init?: RequestInit) => Promise<Response>,\n  getResult: (res: Response) => Promise<TResult>,\n) => <TAsyncResult extends TResult = TResult>(\n  input: RequestInfo,\n  init?: OmitFrom<RequestInit, 'signal'>,\n  deps?: DependencyList,\n  initialState?: ValueFactory<AsyncState<TAsyncResult, FetchError>>,\n) => {\n  const abortControllerRef = useRef<AbortController>();\n\n  return usePromise<TAsyncResult, FetchError>(\n    async () => {\n      const abortController = new AbortController();\n      abortControllerRef.current = abortController;\n      const res = await fetchFn(input, {\n        ...init,\n        signal: abortController.signal,\n      });\n      if (res.ok) {\n        const result = (await getResult(res)) as TAsyncResult;\n        return result;\n      }\n      throw new FetchError(res.statusText, res.status);\n    },\n    deps,\n    initialState,\n    () => abortControllerRef.current?.abort(),\n  );\n};\n\nexport default createFetchHook;\n","/**\n * References:\n * https://github.com/ReactTraining/history/blob/master/docs/GettingStarted.md\n */\n\nimport { useEffect } from 'react';\nimport { History, LocationListener } from 'history';\nimport useUpdatedRef from '../hooks/useUpdatedRef';\n\nconst createHistoryListenHook = (history: History) => (\n  listener: LocationListener<unknown>,\n) => {\n  const listenerRef = useUpdatedRef(listener);\n\n  useEffect(() => {\n    const unlisten = history.listen((location, action) =>\n      listenerRef.current?.(location, action),\n    );\n    return () => unlisten();\n  }, [listenerRef]);\n};\n\nexport default createHistoryListenHook;\n","import { BaseSyntheticEvent } from 'react';\nimport { isBrowser } from 'cb-toolset/dom';\n\nexport const isSyntheticEvent = (o: any): o is BaseSyntheticEvent =>\n  o instanceof Object && o.nativeEvent instanceof Event;\n\nexport const getWindowScrollOffset = (): Offset =>\n  isBrowser() ? { x: window.scrollX, y: window.scrollY } : {};\n\nexport const getWindowSize = (): WindowSize =>\n  isBrowser()\n    ? {\n        innerWidth: window.innerWidth,\n        innerHeight: window.innerHeight,\n        outerWidth: window.outerWidth,\n        outerHeight: window.outerHeight,\n      }\n    : {};\n\nexport const persistEvent = (o: unknown) => isSyntheticEvent(o) && o.persist();\n\nexport interface Offset {\n  x?: number;\n  y?: number;\n}\n\nexport interface WindowSize {\n  innerWidth?: number;\n  innerHeight?: number;\n  outerWidth?: number;\n  outerHeight?: number;\n}\n","/**\n * References:\n * https://github.com/imbhargav5/rooks/blob/dev/packages/debounce/src/useDebounce.ts\n */\n\nimport { useRef, useEffect, useCallback } from 'react';\nimport { RateLimitFunctionWithOptions } from 'cb-toolset/function';\nimport useUpdatedRef from '../hooks/useUpdatedRef';\nimport { persistEvent } from '../utils/common';\n\nconst createRateLimitHook = <TOptions>(\n  rateLimit: RateLimitFunctionWithOptions<TOptions>,\n) => <TArgs extends any[], TReturn>(\n  func: (...args: TArgs) => TReturn,\n  wait: number,\n  options?: TOptions,\n) => {\n  const funcRef = useUpdatedRef(func);\n  const rateLimitedFuncRef = useRef(rateLimit(func, wait, options));\n\n  useEffect(() => {\n    rateLimitedFuncRef.current = rateLimit(\n      (...args) => funcRef.current(...args),\n      wait,\n      options,\n    );\n\n    return () => rateLimitedFuncRef.current?.cancel();\n  }, [funcRef, options, wait]);\n\n  return useCallback<(...args: TArgs) => TReturn | undefined>((...args) => {\n    args.forEach(persistEvent);\n    return rateLimitedFuncRef.current(...args);\n  }, []);\n};\n\nexport default createRateLimitHook;\n","import { useState, useRef, useEffect } from 'react';\nimport { RateLimitFunctionWithOptions } from 'cb-toolset/function';\nimport useUpdatedRef from '../hooks/useUpdatedRef';\n\nconst createRateLimitValueHook = <TOptions>(\n  rateLimit: RateLimitFunctionWithOptions<TOptions>,\n) => <TArgs extends any[], TReturn>(\n  func: (...args: TArgs) => TReturn,\n  args: TArgs,\n  wait: number,\n  options?: TOptions,\n) => {\n  const [value, setValue] = useState<TReturn>();\n  const funcRef = useUpdatedRef(func);\n  const rateLimitedFuncRef = useRef(rateLimit(func, wait, options));\n\n  useEffect(() => {\n    rateLimitedFuncRef.current = rateLimit(\n      (...currentArgs) => {\n        const result = funcRef.current(...currentArgs);\n        setValue(result);\n        return result;\n      },\n      wait,\n      options,\n    );\n\n    return () => rateLimitedFuncRef.current?.cancel();\n  }, [funcRef, options, wait]);\n\n  useEffect(() => {\n    rateLimitedFuncRef.current(...args);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, args);\n\n  return value;\n};\n\nexport default createRateLimitValueHook;\n","/**\n * References:\n * https://github.com/hupe1980/react-script-hook/blob/master/src/use-script.tsx\n */\n\nimport { useState, useEffect } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useUpdatedRef from '../hooks/useUpdatedRef';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { AsyncState } from '../types/common';\n\nconst createResourceHook = <TAttrs extends Partial<HTMLElement>>(\n  tagName: 'script' | 'link',\n  isValid: (attrs: TAttrs) => boolean,\n  insert: (element: HTMLElement) => void,\n) => (\n  attrs: TAttrs,\n  onLoad?: (e: Event) => void,\n  onError?: (e: ErrorEvent) => void,\n  initialState: ValueFactory<AsyncState> = PENDING_STATE,\n) => {\n  const [state, setState] = useState(initialState);\n  const onLoadRef = useUpdatedRef(onLoad);\n  const onErrorRef = useUpdatedRef(onError);\n\n  useEffect(() => {\n    if (!isValid(attrs)) {\n      setState(PENDING_STATE);\n      return undefined;\n    }\n\n    const element = ((attrs.id &&\n      document.querySelector(`${tagName}#${attrs.id}`)) ||\n      document.createElement(tagName)) as HTMLScriptElement;\n\n    Object.assign(element, attrs);\n\n    const handleLoad = (e: Event) => {\n      setState(PENDING_STATE);\n      onLoadRef.current?.(e);\n    };\n\n    const handleError = (e: ErrorEvent) => {\n      setState({ loading: false, error: e.error });\n      onErrorRef.current?.(e);\n    };\n\n    element.addEventListener('load', handleLoad, false);\n    element.addEventListener('error', handleError, false);\n\n    setState(LOADING_STATE);\n    insert(element);\n\n    return () => {\n      element.removeEventListener('load', handleLoad, false);\n      element.removeEventListener('error', handleError, false);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return state;\n};\n\nexport default createResourceHook;\n","import { Context, useContext } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { createURLSearchObject } from 'cb-toolset/dom';\n\nconst createSearchParamsObjectHook = (\n  routerContext: Context<RouteComponentProps>,\n) => <TSearchObject>() => {\n  const searchString = useContext(routerContext).location.search;\n  return createURLSearchObject<TSearchObject>(searchString);\n};\n\nexport default createSearchParamsObjectHook;\n","import { DependencyList, useEffect } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useAnimationFrame = (\n  callback: FrameRequestCallback,\n  deps: DependencyList = [],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useEffect(() => {\n    const handle = requestAnimationFrame(time => callbackRef.current?.(time));\n\n    return () => cancelAnimationFrame(handle);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useAnimationFrame;\n","import { useReducer, useCallback, Reducer } from 'react';\n\nconst reducer = <TValue>(\n  state: readonly TValue[],\n  action: ArrayAction<TValue>,\n) => {\n  switch (action.type) {\n    case 'append':\n      return [...state, action.payload];\n\n    case 'prepend':\n      return [action.payload, ...state];\n\n    case 'filter':\n      return state.filter(action.payload);\n\n    default:\n      return state;\n  }\n};\n\nconst useArray = <TValue>(initialValue: readonly TValue[] = []) => {\n  const [array, dispatch] = useReducer<\n    Reducer<readonly TValue[], ArrayAction<TValue>>\n  >(reducer, initialValue);\n\n  const append = useCallback(\n    (item: TValue) => dispatch({ type: 'append', payload: item }),\n    [dispatch],\n  );\n\n  const prepend = useCallback(\n    (item: TValue) => dispatch({ type: 'prepend', payload: item }),\n    [dispatch],\n  );\n\n  const filter = useCallback(\n    (predicate: (value: TValue, index: number) => boolean) =>\n      dispatch({ type: 'filter', payload: predicate }),\n    [dispatch],\n  );\n\n  return [array, append, prepend, filter] as const;\n};\n\nexport default useArray;\n\ntype AppendAction<TValue> = { type: 'append'; payload: TValue };\ntype PrependAction<TValue> = { type: 'prepend'; payload: TValue };\ntype FilterAction<TValue> = {\n  type: 'filter';\n  payload: (value: TValue, index: number) => boolean;\n};\ntype ArrayAction<TValue> =\n  | AppendAction<TValue>\n  | PrependAction<TValue>\n  | FilterAction<TValue>;\n","import { audit } from 'cb-toolset/function';\nimport createRateLimitHook from '../creators/createRateLimitHook';\n\nconst useAudit = createRateLimitHook(audit);\n\nexport default useAudit;\n","import { audit } from 'cb-toolset/function';\nimport createRateLimitValueHook from '../creators/createRateLimitValueHook';\n\nconst useAuditValue = createRateLimitValueHook(audit);\n\nexport default useAuditValue;\n","/* eslint-disable no-param-reassign */\nimport { useEffect, DependencyList } from 'react';\n\nconst useBase = (attrs: BaseAttributes, deps: DependencyList = []) =>\n  useEffect(() => {\n    const setBaseAttrs = (\n      baseElement: HTMLBaseElement,\n      baseAttrs: BaseAttributes,\n    ) => {\n      const { href, target } = baseAttrs;\n      const prevAttrs: BaseAttributes = {\n        href: baseElement.href,\n        target: baseElement.target,\n      };\n      if (href) baseElement.href = href;\n      if (target) baseElement.target = target;\n      return prevAttrs;\n    };\n\n    const base = document.querySelector('base');\n\n    if (base) {\n      const baseElement = base;\n      const prevAttrs = setBaseAttrs(baseElement, attrs);\n      return () => setBaseAttrs(baseElement, prevAttrs);\n    }\n\n    const baseElement = document.createElement('base');\n    setBaseAttrs(baseElement, attrs);\n    document.head.insertAdjacentElement('afterbegin', baseElement);\n    return () => baseElement.remove();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\nexport default useBase;\n\nexport interface BaseAttributes {\n  href?: string;\n  target?: string;\n}\n","import { DependencyList, useRef, useCallback } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useCallbackWithCleanup = <TArgs extends any[]>(\n  callback: (...args: TArgs) => void | VoidFunction,\n  deps: DependencyList = [],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n  const cleanupRef = useRef<void | VoidFunction>();\n\n  return useCallback((...args: TArgs) => {\n    if (cleanupRef.current) cleanupRef.current();\n    cleanupRef.current = callbackRef.current?.(...args);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useCallbackWithCleanup;\n","import { useCallback } from 'react';\nimport { CheckedTargetEvent } from 'cb-toolset/dom';\n\nconst useHandleChangeCheck = (\n  ...handlers: readonly ((checked: boolean) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { checked } }: CheckedTargetEvent) =>\n      handlers.forEach(handler => handler?.(Boolean(checked))),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeCheck;\n","import { useState } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useHandleChangeCheck from './useHandleChangeCheck';\n\nconst useCheckInput = (initialValue: ValueFactory<boolean> = false) => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = useHandleChangeCheck(setValue);\n  return [value, setValue, handleChange] as const;\n};\n\nexport default useCheckInput;\n","import { useRef } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\n\nconst useCurrent = <TValue>(initialValue?: ValueFactory<TValue>) => {\n  const ref = useRef(initialValue);\n\n  return {\n    set: (value: TValue) => {\n      ref.current = value;\n    },\n    get: () => ref.current,\n    is: (value: TValue) => ref.current === value,\n  } as const;\n};\n\nexport default useCurrent;\n","import { useCallback } from 'react';\n\nconst useCurryFunction: UseCurryFunction = (\n  fn: (...args: any[]) => any,\n  thisArg: any = null,\n  ...args: any[]\n) =>\n  useCallback(\n    (...restArgs: any[]) => fn?.apply(thisArg, [...args, ...restArgs]),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [fn, ...args],\n  );\n\nexport default useCurryFunction;\n\ninterface UseCurryFunction {\n  <TFirstArg, TRestArgs extends any[], TReturn>(\n    func: (firstArg: TFirstArg, ...restArgs: TRestArgs) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n  ): (...args: TRestArgs) => TReturn;\n  <TFirstArg, TSecondArg, TRestArgs extends any[], TReturn>(\n    func: (\n      firstArg: TFirstArg,\n      secondArg: TSecondArg,\n      ...restArgs: TRestArgs\n    ) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n    secondArg: TSecondArg,\n  ): (...args: TRestArgs) => TReturn;\n  <TFirstArg, TSecondArg, TThirdArg, TRestArgs extends any[], TReturn>(\n    func: (\n      firstArg: TFirstArg,\n      secondArg: TSecondArg,\n      thirdArg: TThirdArg,\n      ...restArgs: TRestArgs\n    ) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n    secondArg: TSecondArg,\n    thirdArg: TThirdArg,\n  ): (...args: TRestArgs) => TReturn;\n  <\n    TFirstArg,\n    TSecondArg,\n    TThirdArg,\n    TForthArg,\n    TRestArgs extends any[],\n    TReturn\n  >(\n    func: (\n      firstArg: TFirstArg,\n      secondArg: TSecondArg,\n      thirdArg: TThirdArg,\n      forthArg: TForthArg,\n      ...restArgs: TRestArgs\n    ) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n    secondArg: TSecondArg,\n    thirdArg: TThirdArg,\n    forthArg: TForthArg,\n  ): (...args: TRestArgs) => TReturn;\n}\n","import { debounce } from 'cb-toolset/function';\nimport createRateLimitHook from '../creators/createRateLimitHook';\n\nconst useDebounce = createRateLimitHook(debounce);\n\nexport default useDebounce;\n","import { debounce } from 'cb-toolset/function';\nimport createRateLimitValueHook from '../creators/createRateLimitValueHook';\n\nconst useDebounceValue = createRateLimitValueHook(debounce);\n\nexport default useDebounceValue;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useEffectOnce.ts\n */\n\nimport { EffectCallback, useEffect } from 'react';\n\nconst useEffectOnce = (effect: EffectCallback) => useEffect(effect, []);\n\nexport default useEffectOnce;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useMount.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useDidMount.js\n * https://github.com/imbhargav5/rooks/blob/dev/packages/shared/useDidMount.ts\n */\n\nimport useEffectOnce from './useEffectOnce';\n\nconst useDidMount = (callback: VoidFunction) => useEffectOnce(callback);\n\nexport default useDidMount;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useUpdateEffect.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useDidUpdate.js\n */\n\nimport { EffectCallback, DependencyList, useRef, useEffect } from 'react';\n\nconst useDidUpdate = (callback: EffectCallback, deps?: DependencyList) => {\n  const didMountRef = useRef(false);\n\n  useEffect(\n    didMountRef.current\n      ? callback\n      : () => {\n          didMountRef.current = true;\n        },\n    deps,\n  );\n};\n\nexport default useDidUpdate;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/c0574064ca/src/useFavicon.ts\n */\n\nimport { useEffect, DependencyList } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useUpdatedLink = (\n  attrs: Partial<HTMLLinkElement>,\n  selector: string | (() => HTMLLinkElement),\n  deps: DependencyList = [],\n) => {\n  const selectorRef = useUpdatedRef(selector);\n\n  useEffect(() => {\n    const linkSelector = selectorRef.current;\n    const link =\n      (typeof linkSelector === 'function'\n        ? linkSelector()\n        : document.querySelector(linkSelector)) ||\n      document.createElement('link');\n\n    if (link instanceof HTMLLinkElement) {\n      Object.assign(link, attrs);\n      document.head.appendChild(link);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useUpdatedLink;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/c0574064ca/src/useFavicon.ts\n */\n\nimport useUpdatedLink from './useUpdatedLink';\n\nconst useFavicon = (href: string) =>\n  useUpdatedLink(\n    { href, rel: `shortcut icon`, type: `image/x-icon` },\n    `link[rel='shortcut icon']`,\n    [href],\n  );\n\nexport default useFavicon;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetch = createFetchHook(fetch, res => res.json());\n\nexport default useFetch;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchArrayBuffer = createFetchHook(fetch, res => res.arrayBuffer());\n\nexport default useFetchArrayBuffer;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchBlob = createFetchHook(fetch, res => res.blob());\n\nexport default useFetchBlob;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchFormData = createFetchHook(fetch, res => res.formData());\n\nexport default useFetchFormData;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchStream = createFetchHook(fetch, res => Promise.resolve(res.body));\n\nexport default useFetchStream;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchText = createFetchHook(fetch, res => res.text());\n\nexport default useFetchText;\n","import { useReducer } from 'react';\nimport { createUniqueObject } from 'cb-toolset/object';\n\nconst useTriggerUpdate = () =>\n  useReducer(createUniqueObject, createUniqueObject());\n\nexport default useTriggerUpdate;\n","/**\n * References:\n * https://github.com/CharlesStover/use-force-update\n * https://reactjs.org/docs/hooks-faq.html#is-there-something-like-forceupdate\n */\n\nimport useTriggerUpdate from './useTriggerUpdate';\n\nconst useForceUpdate = () => useTriggerUpdate()[1];\n\nexport default useForceUpdate;\n","/**\n * References:\n * https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API/Guide\n * https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API\n */\n\nimport { RefObject, useCallback } from 'react';\nimport useEvent from './useEvent';\n\nconst useToggleFullscreen = (\n  elementRef: RefObject<Element>,\n  onChange: EventListener | null = null,\n  onError: EventListener | null = null,\n) => {\n  const toggleFullscreen = useCallback(\n    (show?: boolean) => {\n      if (\n        document.fullscreenElement &&\n        (show === false || show === undefined)\n      ) {\n        document.exitFullscreen();\n      }\n\n      if (\n        !document.fullscreenElement &&\n        (show === true || show === undefined)\n      ) {\n        // eslint-disable-next-line no-unused-expressions\n        elementRef.current?.requestFullscreen?.();\n      }\n    },\n    [elementRef],\n  );\n\n  useEvent(document, 'fullscreenchange', onChange);\n  useEvent(document, 'fullscreenerror', onError);\n\n  return toggleFullscreen;\n};\n\nexport default useToggleFullscreen;\n","import { useState, RefObject } from 'react';\nimport useToggleFullscreen from './useToggleFullscreen';\nimport useCurryFunction from './useCurryFunction';\n\nconst useFullscreen = (elementRef: RefObject<Element>) => {\n  const [fullscreen, setFullscreen] = useState(false);\n  const isFullscreen = () =>\n    !!document.fullscreenElement &&\n    document.fullscreenElement === elementRef.current;\n  const handleChange = () => setFullscreen(isFullscreen());\n  const toggleFullscreen = useToggleFullscreen(elementRef, handleChange);\n  const enterFullscreen = useCurryFunction(toggleFullscreen, null, true);\n  const exitFullscreen = useCurryFunction(toggleFullscreen, null, false);\n  return [\n    fullscreen,\n    toggleFullscreen,\n    enterFullscreen,\n    exitFullscreen,\n  ] as const;\n};\n\nexport default useFullscreen;\n","import { useCallback } from 'react';\nimport { FilesTargetEvent } from 'cb-toolset/dom';\n\nconst useHandleChangeFile = (\n  ...handlers: readonly ((files: FileList | null) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { files } }: FilesTargetEvent) =>\n      handlers.forEach(handler => handler?.(files)),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeFile;\n","import { useCallback } from 'react';\nimport { ValueTargetEvent } from 'cb-toolset/dom';\n\nconst useHandleChangeNumber = (\n  ...handlers: readonly ((value: number) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { value } }: ValueTargetEvent<string>) =>\n      handlers.forEach(handler => handler?.(Number(value))),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeNumber;\n","import { useCallback } from 'react';\nimport { ValueTargetEvent } from 'cb-toolset/dom';\n\nconst useHandleChangeText = (\n  ...handlers: readonly ((text: string) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { value } }: ValueTargetEvent<string>) =>\n      handlers.forEach(handler => handler?.(String(value))),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeText;\n","import { DependencyList, useLayoutEffect } from 'react';\nimport { OmitFrom } from 'cb-toolset/object';\nimport { ValueFactory, getValueFromFactory } from 'cb-toolset/function';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useIntersectionObserverEffect = (\n  getTargets: () => Element[] | undefined | null,\n  callback: IntersectionObserverCallback,\n  options?: UseIntersectionObserverEffectOptions,\n  deps: DependencyList = [],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useLayoutEffect(() => {\n    const targets = getTargets();\n\n    if (!targets || !targets.length) return undefined;\n\n    const opts: IntersectionObserverInit | undefined = options && {\n      ...options,\n      root: getValueFromFactory(options.root),\n    };\n\n    const observer = new IntersectionObserver(\n      (entries, currentObserver) =>\n        callbackRef.current?.(entries, currentObserver),\n      opts,\n    );\n    targets.forEach(target => observer.observe(target));\n\n    return () => observer.disconnect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useIntersectionObserverEffect;\n\nexport interface UseIntersectionObserverEffectOptions\n  extends OmitFrom<IntersectionObserverInit, 'root'> {\n  root?: ValueFactory<Element | undefined | null>;\n}\n","import { RefObject, useRef } from 'react';\nimport useIntersectionObserverEffect, {\n  UseIntersectionObserverEffectOptions,\n} from './useIntersectionObserverEffect';\n\nconst isOptionsObject = (\n  o: unknown,\n): o is UseIntersectionObserverEffectOptions => o instanceof Object;\n\nconst useInfiniteScroll: UseInfiniteScroll = (\n  elementRef: RefObject<Element>,\n  loadMore: () => void | Promise<unknown>,\n  ...args: any[]\n) => {\n  const loadingRef = useRef<boolean>(false);\n  const loading: boolean | undefined =\n    typeof args[0] === 'boolean' ? args[0] : undefined;\n  const options:\n    | UseIntersectionObserverEffectOptions\n    | undefined = isOptionsObject(args[0])\n    ? args[0]\n    : isOptionsObject(args[1])\n    ? args[1]\n    : undefined;\n\n  useIntersectionObserverEffect(\n    () => elementRef.current && [elementRef.current],\n    async entries => {\n      if (\n        loading ||\n        loadingRef.current ||\n        entries.every(({ isIntersecting }) => !isIntersecting)\n      ) {\n        return;\n      }\n\n      loadingRef.current = true;\n\n      try {\n        await Promise.resolve(loadMore());\n      } catch {\n        // Do nothing\n      }\n\n      loadingRef.current = false;\n    },\n    options,\n  );\n};\n\nexport default useInfiniteScroll;\n\nexport interface UseInfiniteScroll {\n  (\n    elementRef: RefObject<Element>,\n    loadMore: () => Promise<unknown>,\n    options?: UseIntersectionObserverEffectOptions,\n  ): void;\n  (\n    elementRef: RefObject<Element>,\n    loadMore: VoidFunction,\n    loading: boolean,\n    options?: UseIntersectionObserverEffectOptions,\n  ): void;\n}\n","/**\n * References:\n * https://github.com/adambrgmn/hooks/blob/master/src/use-in-view/index.ts\n * https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n */\n\nimport { RefObject } from 'react';\nimport useIntersectionObserverEffect, {\n  UseIntersectionObserverEffectOptions,\n} from './useIntersectionObserverEffect';\n\nconst useIntersectionObserver = (\n  elementRef: RefObject<Element>,\n  callback: IntersectionObserverCallback,\n  options?: UseIntersectionObserverEffectOptions,\n) =>\n  useIntersectionObserverEffect(\n    () => elementRef.current && [elementRef.current],\n    callback,\n    options,\n    [options],\n  );\n\nexport default useIntersectionObserver;\n","/**\n * References:\n * https://github.com/dispix/react-pirate/blob/master/src/useInterval.js\n * https://github.com/donavon/use-interval\n */\n\nimport { DependencyList, useEffect } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useInterval = (\n  callback: VoidFunction | undefined | null,\n  {\n    period,\n    leading,\n    running,\n    deps = [period, leading, running],\n  }: UseIntervalSettings,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useEffect(() => {\n    let handle: NodeJS.Timeout;\n\n    if (running) {\n      // eslint-disable-next-line no-unused-expressions\n      if (leading) callbackRef.current?.();\n      handle = setInterval(() => callbackRef.current?.(), period);\n    }\n\n    return () => {\n      if (handle) clearInterval(handle);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useInterval;\n\nexport interface UseIntervalSettings {\n  deps?: DependencyList;\n  leading?: boolean;\n  period: number;\n  running?: boolean;\n}\n","/**\n * References:\n * https://github.com/adambrgmn/hooks/blob/master/src/use-is-mounted/index.ts\n * https://github.com/hupe1980/react-is-mounted-hook/blob/master/src/use-is-mounted.tsx\n * https://github.com/streamich/react-use/blob/master/src/useRefMounted.ts\n */\n\nimport { useRef, useCallback } from 'react';\nimport useEffectOnce from './useEffectOnce';\n\nconst useIsMounted = () => {\n  const isMountedRef = useRef(false);\n\n  useEffectOnce(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  });\n\n  return useCallback(() => isMountedRef.current, []);\n};\n\nexport default useIsMounted;\n","/* eslint-disable no-param-reassign */\nimport { useRef, useCallback } from 'react';\nimport useIntersectionObserverEffect, {\n  UseIntersectionObserverEffectOptions,\n} from './useIntersectionObserverEffect';\n\nconst defaultGetSrc = (image: HTMLImageElement) => image.dataset.src;\n\nconst useLazyLoad = ({\n  getSrc = defaultGetSrc,\n  ...options\n}: UseLazyLoadOptions = {}) => {\n  const imageMapRef = useRef(new Map<HTMLImageElement, string>());\n\n  const register = useCallback(\n    (arg: string | HTMLImageElement) => {\n      if (typeof arg === 'string') {\n        const src = arg;\n\n        return (image: HTMLImageElement) => {\n          imageMapRef.current.set(image, src);\n        };\n      }\n\n      if (arg instanceof HTMLImageElement) {\n        const image = arg;\n        const src = getSrc(image);\n\n        if (src) {\n          imageMapRef.current.set(image, src);\n        }\n      }\n\n      return undefined;\n    },\n    [getSrc],\n  ) as UseLazyLoadRegister;\n\n  useIntersectionObserverEffect(\n    () => Array.from(imageMapRef.current.keys()),\n    (entries, currentObserver) =>\n      entries.forEach(({ isIntersecting, target }) => {\n        if (!isIntersecting || !(target instanceof HTMLImageElement)) return;\n\n        const src = imageMapRef.current.get(target) || getSrc(target);\n\n        if (src) {\n          target.src = src;\n        }\n\n        currentObserver.unobserve(target);\n      }),\n    options,\n  );\n\n  return register;\n};\n\nexport default useLazyLoad;\n\nexport interface UseLazyLoadOptions\n  extends UseIntersectionObserverEffectOptions {\n  getSrc?: (image: HTMLImageElement) => string | null | undefined;\n}\n\nexport interface UseLazyLoadRegister {\n  (image: HTMLImageElement): void;\n  (src: string): (image: HTMLImageElement) => void;\n}\n","import { isBrowser } from 'cb-toolset/dom';\nimport createResourceHook from '../creators/createResourceHook';\n\nconst useLink = createResourceHook<Partial<HTMLLinkElement>>(\n  'link',\n  ({ href }) =>\n    isBrowser() && !!href && !document.querySelector(`link[href=\"${href}\"]`),\n  element => document.head.appendChild(element),\n);\n\nexport default useLink;\n","/**\n * References:\n * https://material-ui.com/components/use-media-query/\n * https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/useMediaQuery/useMediaQuery.js\n * https://github.com/streamich/react-use/blob/master/src/useMedia.ts\n * https://github.com/jaredpalmer/the-platform/blob/master/src/useMedia.tsx\n * https://usehooks.com/useMedia/\n * https://github.com/ReactTraining/react-media\n * https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\n * https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList\n * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries\n * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n * https://gomakethings.com/a-better-way-to-test-breakpoints-with-vanilla-javascript/\n * https://github.com/akiran/json2mq\n */\n\nimport { useState, useEffect } from 'react';\nimport { pickFrom, PickFrom } from 'cb-toolset/object';\nimport { isBrowser } from 'cb-toolset/dom';\nimport { ValueFactory } from 'cb-toolset/function';\n\nconst getMediaResult = (mql: MediaQueryList): MediaResult =>\n  pickFrom(mql, 'matches', 'media');\n\nconst useMediaQuery = (\n  query: string,\n  initialState: ValueFactory<MediaResult> = { media: '', matches: false },\n) => {\n  const [result, setResult] = useState(\n    isBrowser() ? () => getMediaResult(window.matchMedia(query)) : initialState,\n  );\n\n  useEffect(() => {\n    const mql = window.matchMedia(query);\n    const onChange = (e: MediaQueryListEvent) => {\n      setResult(e);\n    };\n    setResult(getMediaResult(mql));\n    mql.addListener(onChange);\n    return () => mql.removeListener(onChange);\n  }, [query]);\n\n  return result;\n};\n\nexport default useMediaQuery;\n\nexport type MediaResult = PickFrom<MediaQueryList, 'matches' | 'media'>;\n","/**\n * References:\n * https://github.com/imbhargav5/rooks/blob/dev/packages/shared/useMutationObserver.ts\n * https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n */\n\nimport { useLayoutEffect, RefObject } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useMutationObserver = <TNode extends Node>(\n  nodeRef: RefObject<TNode>,\n  callback: MutationCallback,\n  options?: MutationObserverInit,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useLayoutEffect(() => {\n    if (!nodeRef.current) return undefined;\n\n    const observer = new MutationObserver((mutation, currentObserver) =>\n      callbackRef.current?.(mutation, currentObserver),\n    );\n    observer.observe(nodeRef.current, options);\n\n    return () => observer.disconnect();\n  }, [callbackRef, nodeRef, options]);\n};\n\nexport default useMutationObserver;\n","import { useState } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useHandleChangeNumber from './useHandleChangeNumber';\n\nconst useNumberInput = (initialValue: ValueFactory<number> = 0) => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = useHandleChangeNumber(setValue);\n  return [value, setValue, handleChange] as const;\n};\n\nexport default useNumberInput;\n","/**\n * References:\n * https://usehooks.com/useOnClickOutside/\n * https://github.com/sandiiarov/use-events/blob/master/src/useClickOutside/index.tsx\n * https://github.com/Andarist/use-onclickoutside/blob/master/src/index.ts\n * https://github.com/streamich/react-use/blob/master/src/useClickAway.ts\n * https://github.com/imbhargav5/rooks/blob/dev/packages/outside-click/src/useOutsideClick.ts\n */\n\nimport { RefObject } from 'react';\nimport useEvent from './useEvent';\n\nconst useOnClickOutside = (\n  nodeRef: RefObject<Node>,\n  handleClickOutside: ClickHandler,\n) =>\n  useEvent(document, ['mousedown', 'touchstart'], e => {\n    if (\n      handleClickOutside &&\n      nodeRef.current &&\n      !nodeRef.current.contains(e.target as Node)\n    ) {\n      handleClickOutside(e);\n    }\n  });\n\nexport default useOnClickOutside;\n\nexport type ClickHandler = (e: TouchEvent | MouseEvent) => void;\n","import useEvent from './useEvent';\n\nconst usePageVisibility = (callback: (state: VisibilityState) => void) =>\n  useEvent(document, 'visibilitychange', () =>\n    callback?.(document.visibilityState),\n  );\n\nexport default usePageVisibility;\n","import { useState } from 'react';\nimport usePageVisibility from './usePageVisibility';\n\nconst usePageVisibilityState = () => {\n  const [state, setState] = useState(document.visibilityState);\n  usePageVisibility(setState);\n  return state;\n};\n\nexport default usePageVisibilityState;\n","/**\n * References:\n * https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n * https://github.com/Andarist/use-previous\n * https://github.com/dispix/react-pirate\n * https://github.com/imbhargav5/rooks/tree/dev/packages/previous\n * https://github.com/kitze/react-hanger\n * https://github.com/zakariaharti/react-hookedup\n * https://github.com/imbhargav5/rooks/blob/dev/packages/previous/src/usePrevious.ts\n */\n\nimport { useRef, useEffect } from 'react';\n\nconst defaultPredicate = () => true;\n\nconst usePrevious = <TValue>(\n  value: TValue,\n  predicate: (value: TValue) => boolean = defaultPredicate,\n) => {\n  const prevRef = useRef<TValue>();\n\n  useEffect(() => {\n    if (predicate(value)) prevRef.current = value;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  return prevRef.current;\n};\n\nexport default usePrevious;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useAsyncFn.ts\n * https://github.com/adambrgmn/hooks/blob/master/src/use-promise/index.ts\n */\n\nimport { DependencyList, useState, useCallback } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useIsMounted from './useIsMounted';\nimport useCurrent from './useCurrent';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { AsyncState } from '../types/common';\n\nconst usePromiseCallback = <TArgs extends any[], TResult, TError = unknown>(\n  promiseFactory: (\n    ...args: TArgs\n  ) => Promise<TResult> | false | undefined | null,\n  deps: DependencyList = [],\n  initialState: ValueFactory<AsyncState<TResult, TError>> = PENDING_STATE,\n) => {\n  const isMounted = useIsMounted();\n  const [state, setState] = useState(initialState);\n  const currentPromise = useCurrent<\n    Promise<TResult> | false | undefined | null\n  >();\n\n  const callback = useCallback(\n    (...args: TArgs) => {\n      const promise = promiseFactory(...args);\n      currentPromise.set(promise);\n\n      if (!promise) {\n        setState(PENDING_STATE);\n        return;\n      }\n\n      setState(LOADING_STATE);\n\n      promise\n        .then(result => {\n          if (currentPromise.is(promise) && isMounted()) {\n            setState({ loading: false, result });\n          }\n        })\n        .catch(error => {\n          if (currentPromise.is(promise) && isMounted()) {\n            setState({ loading: false, error });\n          }\n        });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    deps,\n  );\n\n  return [state, callback] as const;\n};\n\nexport default usePromiseCallback;\n","import { RefObject, useLayoutEffect } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useResizeObserver = (\n  elementRef: RefObject<Element>,\n  callback: ResizeObserverCallback,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useLayoutEffect(() => {\n    if (!elementRef.current) return undefined;\n\n    const observer = new ResizeObserver(entries =>\n      callbackRef.current?.(entries),\n    );\n    observer.observe(elementRef.current);\n\n    return () => observer.disconnect();\n  }, [callbackRef, elementRef]);\n};\n\nexport default useResizeObserver;\n","import { sample } from 'cb-toolset/function';\nimport createRateLimitHook from '../creators/createRateLimitHook';\n\nconst useSample = createRateLimitHook(sample);\n\nexport default useSample;\n","import { sample } from 'cb-toolset/function';\nimport createRateLimitValueHook from '../creators/createRateLimitValueHook';\n\nconst useSampleValue = createRateLimitValueHook(sample);\n\nexport default useSampleValue;\n","import { isBrowser } from 'cb-toolset/dom';\nimport createResourceHook from '../creators/createResourceHook';\n\nconst useScript = createResourceHook<Partial<HTMLScriptElement>>(\n  'script',\n  ({ src }) =>\n    isBrowser() && !!src && !document.querySelector(`script[src=\"${src}\"]`),\n  element => document.body.appendChild(element),\n);\n\nexport default useScript;\n","import { useRef, useCallback, useState } from 'react';\nimport useIntersectionObserverEffect, {\n  UseIntersectionObserverEffectOptions,\n} from './useIntersectionObserverEffect';\n\nconst defaultGetId = <TElement extends Element>(element: TElement) =>\n  element?.getAttribute('id');\n\nconst isElement = <TElement extends Element>(o: unknown): o is TElement =>\n  o instanceof Element;\n\nconst useScrollSpy = <TElement extends Element = Element>({\n  getId = defaultGetId,\n  threshold = 1,\n  ...rest\n}: UseScrollSpyOptions<TElement> = {}) => {\n  const [id, setId] = useState<string>();\n  const elementMapRef = useRef(new Map<TElement, string>());\n  const intersectingElementsRef = useRef(new Set<TElement>());\n\n  const register = useCallback(\n    (arg: string | TElement) => {\n      if (typeof arg === 'string') {\n        const elementId = arg;\n\n        return (element: TElement) => {\n          elementMapRef.current.set(element, elementId);\n        };\n      }\n\n      if (isElement<TElement>(arg)) {\n        const element = arg;\n        const elementId = getId(element);\n\n        if (elementId) {\n          elementMapRef.current.set(element, elementId);\n        }\n      }\n\n      return undefined;\n    },\n    [getId],\n  ) as UseScrollSpyRegister<TElement>;\n\n  useIntersectionObserverEffect(\n    () => Array.from(elementMapRef.current.keys()),\n    entries => {\n      entries.forEach(({ intersectionRatio, target }) => {\n        if (intersectionRatio >= threshold) {\n          intersectingElementsRef.current.add(target as TElement);\n        } else {\n          intersectingElementsRef.current.delete(target as TElement);\n        }\n      });\n\n      if (!intersectingElementsRef.current.size) return;\n\n      const selectedElement = Array.from(\n        intersectingElementsRef.current,\n      ).reduce((prev, curr) =>\n        prev.getBoundingClientRect().top < curr.getBoundingClientRect().top\n          ? prev\n          : curr,\n      );\n\n      const newId =\n        elementMapRef.current.get(selectedElement) || getId(selectedElement);\n\n      if (typeof newId === 'string') {\n        setId(newId);\n      }\n    },\n    { ...rest, threshold },\n  );\n\n  return [id, register] as const;\n};\n\nexport default useScrollSpy;\n\nexport interface UseScrollSpyOptions<TElement>\n  extends UseIntersectionObserverEffectOptions {\n  getId?: (element: TElement) => string | null | undefined;\n  threshold?: number;\n}\n\nexport interface UseScrollSpyRegister<TElement extends Element> {\n  (element: TElement): void;\n  (id: string): (element: TElement) => void;\n}\n","import { useState } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useHandleChangeText from './useHandleChangeText';\n\nconst useTextInput = (initialValue: ValueFactory<string> = '') => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = useHandleChangeText(setValue);\n  return [value, setValue, handleChange] as const;\n};\n\nexport default useTextInput;\n","import { throttle } from 'cb-toolset/function';\nimport createRateLimitHook from '../creators/createRateLimitHook';\n\nconst useThrottle = createRateLimitHook(throttle);\n\nexport default useThrottle;\n","import { throttle } from 'cb-toolset/function';\nimport createRateLimitValueHook from '../creators/createRateLimitValueHook';\n\nconst useThrottleValue = createRateLimitValueHook(throttle);\n\nexport default useThrottleValue;\n","/**\n * References:\n * https://github.com/kripod/react-hooks/blob/master/packages/state-hooks/src/useTimeline.ts\n */\n\nimport { useRef, useEffect } from 'react';\n\nconst defaultPredicate = () => true;\n\nconst useTimeline = <TValue>(\n  value: TValue,\n  revert = true,\n  predicate: (value: TValue) => boolean = defaultPredicate,\n) => {\n  const accumulateRef = useRef<TValue[]>([]);\n\n  useEffect(() => {\n    if (predicate(value)) {\n      accumulateRef.current = revert\n        ? [value, ...accumulateRef.current]\n        : [...accumulateRef.current, value];\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  return accumulateRef.current;\n};\n\nexport default useTimeline;\n","/**\n * References:\n * https://github.com/dispix/react-pirate/blob/master/src/useTimeout.js\n * https://github.com/imbhargav5/rooks/blob/master/packages/timeout/src/useTimeout.ts\n */\n\nimport { DependencyList, useEffect } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useTimeout = (\n  callback: VoidFunction,\n  ms: number,\n  deps: DependencyList = [ms],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useEffect(() => {\n    const handle = setTimeout(() => callbackRef.current?.(), ms);\n    return () => clearTimeout(handle);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useTimeout;\n","import { useRef, useCallback } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\nimport useDidMount from './useDidMount';\n\nconst useTimeoutCallback = (callback: VoidFunction, ms: number) => {\n  const callbackRef = useUpdatedRef(callback);\n  const timeoutRef = useRef<TimeoutObject>();\n\n  useDidMount(() => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current.handle);\n      timeoutRef.current.resolve();\n    }\n  });\n\n  const timeoutCallback = useCallback(\n    () =>\n      new Promise<void>(resolve => {\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current.handle);\n          timeoutRef.current.resolve();\n        }\n        const handle = setTimeout(() => {\n          // eslint-disable-next-line no-unused-expressions\n          callbackRef.current?.();\n          resolve();\n        }, ms);\n        timeoutRef.current = { handle, resolve };\n      }),\n    [callbackRef, ms],\n  );\n\n  return timeoutCallback;\n};\n\nexport default useTimeoutCallback;\n\ninterface TimeoutObject {\n  handle: NodeJS.Timeout;\n  resolve: VoidFunction;\n}\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useUnmount.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useWillUnmount.js\n * https://github.com/imbhargav5/rooks/blob/dev/packages/will-unmount/src/useWillUnmount.ts\n */\n\nimport useEffectOnce from './useEffectOnce';\n\nconst useWillUnmount = (callback: VoidFunction) =>\n  useEffectOnce(() => callback);\n\nexport default useWillUnmount;\n","/**\n * References:\n * https://github.com/withvoid/melting-pot/blob/master/src/hooks/useTitle.js\n * https://github.com/streamich/react-use/blob/master/src/useTitle.ts\n */\n\nimport { useRef, useEffect } from 'react';\nimport useWillUnmount from './useWillUnmount';\n\nconst useTitle = (title: string, options?: UseTitleOptions) => {\n  const titleRef = useRef(document.title);\n\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  useWillUnmount(() => {\n    if (options?.restoreOnUnmount) {\n      document.title = titleRef.current;\n    }\n  });\n};\n\nexport default useTitle;\n\nexport interface UseTitleOptions {\n  restoreOnUnmount?: boolean;\n}\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useToggle.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useToggle.js\n */\n\nimport { useState, useCallback } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useCurryFunction from './useCurryFunction';\n\nconst useToggle = (initialValue: ValueFactory<boolean> = false) => {\n  const [value, setValue] = useState(initialValue);\n  const toggle = useCallback(() => setValue(prevValue => !prevValue), []);\n  const setTrue = useCurryFunction(setValue, null, true);\n  const setFalse = useCurryFunction(setValue, null, false);\n  return [value, toggle, setTrue, setFalse, setValue] as const;\n};\n\nexport default useToggle;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useWindowScroll.ts\n */\n\nimport { useState } from 'react';\nimport useEvent from './useEvent';\nimport { getWindowScrollOffset } from '../utils/common';\n\nconst useWindowScrollOffset = () => {\n  const [scrollOffset, setScrollOffset] = useState(getWindowScrollOffset);\n  useEvent(window, 'scroll', () => setScrollOffset(getWindowScrollOffset()), {\n    capture: false,\n    passive: true,\n    usingAnimationFrame: true,\n  });\n  return scrollOffset;\n};\n\nexport default useWindowScrollOffset;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useWindowSize.ts\n * https://github.com/imbhargav5/rooks/blob/dev/packages/window-size/src/useWindowSize.ts\n * https://github.com/contiamo/operational-ui/blob/master/src/useWindowSize/index.ts\n */\n\nimport { useState } from 'react';\nimport useEvent from './useEvent';\nimport { getWindowSize } from '../utils/common';\n\nconst useWindowSize = () => {\n  const [size, setSize] = useState(getWindowSize);\n  useEvent(window, 'resize', () => setSize(getWindowSize()));\n  return size;\n};\n\nexport default useWindowSize;\n","import { useRef, useState, useCallback } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useWillUnmount from './useWillUnmount';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { AsyncState } from '../types/common';\n\nconst useWorkerCallback = <\n  TMessage = unknown,\n  TResult = unknown,\n  TError = unknown\n>(\n  workerUrl: string,\n  options?: WorkerOptions,\n  initialState: ValueFactory<AsyncState<TResult, TError>> = PENDING_STATE,\n) => {\n  const [state, setState] = useState(initialState);\n  const workerRef = useRef<Worker>();\n\n  const callback = useCallback(\n    (message: TMessage, opts?: PostMessageOptions) => {\n      if (workerRef.current) {\n        workerRef.current.terminate();\n      }\n\n      const worker = new Worker(workerUrl, options);\n      worker.addEventListener('message', e =>\n        setState({ loading: false, result: e.data }),\n      );\n      worker.addEventListener('error', e =>\n        setState({ loading: false, error: e.error }),\n      );\n      worker.postMessage(message, opts);\n      setState(LOADING_STATE);\n      workerRef.current = worker;\n    },\n    [options, workerUrl],\n  );\n\n  useWillUnmount(() => {\n    if (workerRef.current) workerRef.current.terminate();\n  });\n\n  return [state, callback] as const;\n};\n\nexport default useWorkerCallback;\n"],"names":["useUpdatedRef","value","deps","ref","useRef","useLayoutEffect","current","checkAndInvokeEventListener","listener","event","selectors","target","Object","matches","useEvent","element","eventNames","capture","once","passive","usingAnimationFrame","enabled","listenerRef","animationFrameRef","useEffect","eventTarget","Function","getEventTarget","eventListener","e","cancelAnimationFrame","requestAnimationFrame","eventNameList","Array","isArray","forEach","eventName","addEventListener","removeEventListener","useWindowBeforeUnload","message","window","preventDefault","returnValue","createHistoryBlockHook","history","handler","handlerRef","unblock","block","location","action","createBeforeLeaveHook","useHistoryBlock","undefined","PENDING_STATE","loading","LOADING_STATE","usePromise","promiseFactory","initialState","cleanup","useState","state","setState","isCancelled","promise","then","result","error","FetchError","statusText","status","_this","Error","createFetchHook","fetchFn","getResult","input","init","abortControllerRef","abortController","AbortController","signal","res","ok","_abortControllerRef$c","abort","createHistoryListenHook","unlisten","listen","getWindowScrollOffset","isBrowser","x","scrollX","y","scrollY","getWindowSize","innerWidth","innerHeight","outerWidth","outerHeight","persistEvent","o","nativeEvent","Event","isSyntheticEvent","persist","createRateLimitHook","rateLimit","func","wait","options","funcRef","rateLimitedFuncRef","_rateLimitedFuncRef$c","cancel","useCallback","args","createRateLimitValueHook","setValue","createResourceHook","tagName","isValid","insert","attrs","onLoad","onError","onLoadRef","onErrorRef","id","document","querySelector","createElement","assign","handleLoad","handleError","createSearchParamsObjectHook","routerContext","searchString","useContext","search","createURLSearchObject","useAnimationFrame","callback","callbackRef","handle","time","reducer","type","payload","filter","useArray","initialValue","useReducer","dispatch","item","predicate","useAudit","audit","useAuditValue","useBase","setBaseAttrs","baseElement","baseAttrs","href","prevAttrs","base","head","insertAdjacentElement","remove","useCallbackWithCleanup","cleanupRef","useHandleChangeCheck","handlers","checked","Boolean","useCheckInput","useCurrent","set","get","is","useCurryFunction","fn","thisArg","apply","useDebounce","debounce","useDebounceValue","useEffectOnce","effect","useDidMount","useDidUpdate","didMountRef","useUpdatedLink","selector","selectorRef","linkSelector","link","HTMLLinkElement","appendChild","useFavicon","rel","useFetch","fetch","json","useFetchArrayBuffer","arrayBuffer","useFetchBlob","blob","useFetchFormData","formData","useFetchStream","Promise","resolve","body","useFetchText","text","useTriggerUpdate","createUniqueObject","useForceUpdate","useToggleFullscreen","elementRef","onChange","toggleFullscreen","show","fullscreenElement","exitFullscreen","requestFullscreen","useFullscreen","fullscreen","setFullscreen","useHandleChangeFile","files","useHandleChangeNumber","Number","useHandleChangeText","String","useIntersectionObserverEffect","getTargets","targets","length","opts","root","getValueFromFactory","observer","IntersectionObserver","entries","currentObserver","observe","disconnect","isOptionsObject","useInfiniteScroll","loadMore","loadingRef","every","isIntersecting","useIntersectionObserver","useInterval","period","leading","running","setInterval","clearInterval","useIsMounted","isMountedRef","defaultGetSrc","image","dataset","src","useLazyLoad","getSrc","imageMapRef","Map","register","arg","HTMLImageElement","from","keys","unobserve","useLink","getMediaResult","mql","pickFrom","useMediaQuery","query","media","matchMedia","setResult","addListener","removeListener","useMutationObserver","nodeRef","MutationObserver","mutation","useNumberInput","useOnClickOutside","handleClickOutside","contains","usePageVisibility","visibilityState","usePageVisibilityState","defaultPredicate","usePrevious","prevRef","usePromiseCallback","isMounted","currentPromise","useResizeObserver","ResizeObserver","useSample","sample","useSampleValue","useScript","defaultGetId","getAttribute","useScrollSpy","getId","threshold","rest","setId","elementMapRef","intersectingElementsRef","Set","elementId","Element","intersectionRatio","add","size","selectedElement","reduce","prev","curr","getBoundingClientRect","top","newId","useTextInput","useThrottle","throttle","useThrottleValue","useTimeline","revert","accumulateRef","useTimeout","ms","setTimeout","clearTimeout","useTimeoutCallback","timeoutRef","useWillUnmount","useTitle","title","titleRef","restoreOnUnmount","useToggle","prevValue","useWindowScrollOffset","scrollOffset","setScrollOffset","useWindowSize","setSize","useWorkerCallback","workerUrl","workerRef","terminate","worker","Worker","data","postMessage"],"mappings":"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"}