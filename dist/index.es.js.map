{"version":3,"file":"index.es.js","sources":["../src/hooks/useUpdatedRef.ts","../src/hooks/useEvent.ts","../src/hooks/useWindowBeforeUnload.ts","../src/creators/createHistoryBlockHook.ts","../src/creators/createBeforeLeaveHook.ts","../src/constants/common.ts","../src/hooks/usePromise.ts","../src/utils/FetchError.ts","../src/creators/createFetchHook.ts","../src/creators/createHistoryListenHook.ts","../src/utils/common.ts","../src/creators/createRateLimitHook.ts","../src/creators/createRateLimitValueHook.ts","../src/hooks/useEffectOnce.ts","../src/hooks/useIsMounted.ts","../src/creators/createResourceHook.ts","../src/creators/createSearchParamsObjectHook.ts","../src/hooks/useAnimationFrame.ts","../src/hooks/useArray.ts","../src/hooks/useAudit.ts","../src/hooks/useAuditValue.ts","../src/hooks/useBase.ts","../src/hooks/useCallbackWithCleanup.ts","../src/hooks/useHandleChangeCheck.ts","../src/hooks/useCheckInput.ts","../src/hooks/useCurrent.ts","../src/hooks/useCurryFunction.ts","../src/hooks/useDebounce.ts","../src/hooks/useDebounceValue.ts","../src/hooks/useDidMount.ts","../src/hooks/useDidUpdate.ts","../src/hooks/useUpdatedLink.ts","../src/hooks/useFavicon.ts","../src/hooks/useFetch.ts","../src/hooks/useFetchArrayBuffer.ts","../src/hooks/useFetchBlob.ts","../src/hooks/useFetchFormData.ts","../src/hooks/useFetchStream.ts","../src/hooks/useFetchText.ts","../src/hooks/useTriggerUpdate.ts","../src/hooks/useForceUpdate.ts","../src/hooks/useToggleFullscreen.ts","../src/hooks/useFullscreen.ts","../src/hooks/useHandleChangeFile.ts","../src/hooks/useHandleChangeNumber.ts","../src/hooks/useHandleChangeText.ts","../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/hooks/useIntersectionObserverEffect.ts","../src/hooks/useInfiniteScroll.ts","../src/hooks/useIntersectionObserver.ts","../src/hooks/useInterval.ts","../src/hooks/useLazyLoad.ts","../src/hooks/useLink.ts","../src/hooks/useMediaQuery.ts","../src/hooks/useMutationObserver.ts","../src/hooks/useNumberInput.ts","../src/hooks/useOnClickOutside.ts","../src/hooks/usePageVisibility.ts","../src/hooks/usePageVisibilityState.ts","../src/hooks/usePrevious.ts","../src/hooks/usePromiseCallback.ts","../src/hooks/useResizeObserver.ts","../src/hooks/useSample.ts","../src/hooks/useSampleValue.ts","../src/hooks/useScript.ts","../src/hooks/useScrollSpy.ts","../src/hooks/useTextInput.ts","../src/hooks/useThrottle.ts","../src/hooks/useThrottleValue.ts","../src/hooks/useTimeline.ts","../src/hooks/useTimeout.ts","../src/hooks/useTimeoutCallback.ts","../src/hooks/useWillUnmount.ts","../src/hooks/useTitle.ts","../src/hooks/useToggle.ts","../src/hooks/useWindowScrollOffset.ts","../src/hooks/useWindowSize.ts","../src/hooks/useWorkerCallback.ts"],"sourcesContent":["import { DependencyList, useRef, useLayoutEffect } from 'react';\n\nconst useUpdatedRef = <TValue>(value: TValue, deps?: DependencyList) => {\n  const ref = useRef(value);\n\n  useLayoutEffect(() => {\n    ref.current = value;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  return ref;\n};\n\nexport default useUpdatedRef;\n","/**\n * References:\n * https://github.com/donavon/use-event-listener\n * https://github.com/streamich/react-use/blob/master/src/useEvent.ts\n * https://github.com/adambrgmn/hooks/blob/master/src/use-event-listener/index.ts\n */\n\nimport { useRef, useEffect } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst getEventTarget = <TElement>(element: ElementType<TElement>) =>\n  element instanceof Function ? element() : element;\n\nconst isElement = (target: EventTarget | null): target is Element =>\n  target instanceof Object && 'matches' in target;\n\nconst checkAndInvokeEventListener = (\n  listener: EventListener | null,\n  event: Event,\n  selectors: string | undefined,\n) => {\n  if (!listener) {\n    return;\n  }\n  if (\n    selectors &&\n    (!isElement(event.target) || !event.target.matches(selectors))\n  ) {\n    return;\n  }\n  listener(event);\n};\n\nconst useEvent: UseEvent = (\n  element: ElementType<EventTarget>,\n  eventNames: string | string[],\n  listener: EventListener | null,\n  {\n    capture,\n    once,\n    passive,\n    selectors,\n    usingAnimationFrame,\n    enabled = true,\n  }: UseEventOptions = {},\n) => {\n  const listenerRef = useUpdatedRef(listener);\n  const animationFrameRef = useRef(0);\n\n  useEffect(() => {\n    if (!enabled) {\n      return undefined;\n    }\n\n    const eventTarget = getEventTarget(element);\n    if (!eventTarget) {\n      return undefined;\n    }\n\n    const eventListener = (e: Event) => {\n      if (usingAnimationFrame) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = requestAnimationFrame(() =>\n          checkAndInvokeEventListener(listenerRef.current, e, selectors),\n        );\n      } else {\n        checkAndInvokeEventListener(listenerRef.current, e, selectors);\n      }\n    };\n\n    const eventNameList = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n    eventNameList.forEach(eventName =>\n      eventTarget.addEventListener(eventName, eventListener, {\n        capture,\n        once,\n        passive,\n      }),\n    );\n\n    return () => {\n      if (usingAnimationFrame && animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      eventNameList.forEach(eventName =>\n        eventTarget.removeEventListener(eventName, eventListener, { capture }),\n      );\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    element,\n    capture,\n    once,\n    passive,\n    selectors,\n    usingAnimationFrame,\n    enabled,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    ...eventNames,\n  ]);\n};\n\nexport default useEvent;\n\ninterface UseEvent {\n  <TEventName extends keyof WindowEventMap>(\n    element: ElementType<Window>,\n    eventNames: TEventName | TEventName[],\n    listener: (e: WindowEventMap[TEventName]) => void | null,\n    options?: UseEventOptions,\n  ): void;\n  <TEventName extends keyof DocumentEventMap>(\n    element: ElementType<Document>,\n    eventNames: TEventName | TEventName[],\n    listener: (e: DocumentEventMap[TEventName]) => void | null,\n    options?: UseEventOptions,\n  ): void;\n  <TEventName extends keyof HTMLElementEventMap>(\n    element: ElementType<HTMLElement>,\n    eventNames: TEventName | TEventName[],\n    listener: (e: HTMLElementEventMap[TEventName]) => void | null,\n    options?: UseEventOptions,\n  ): void;\n  (\n    element: ElementType<EventTarget>,\n    eventNames: string | string[],\n    listener: EventListener | null,\n    options?: UseEventOptions,\n  ): void;\n}\n\nexport interface UseEventOptions extends AddEventListenerOptions {\n  selectors?: string;\n  usingAnimationFrame?: boolean;\n  enabled?: boolean;\n}\n\ntype ElementType<TElement> = ValueFactory<TElement | null | undefined | false>;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useBeforeUnload.ts\n */\n\nimport useEvent from './useEvent';\n\nconst useWindowBeforeUnload = (message?: string, enabled = true) =>\n  useEvent(\n    window,\n    'beforeunload',\n    e => {\n      e.preventDefault();\n      if (message) e.returnValue = message;\n      return message;\n    },\n    { enabled },\n  );\n\nexport default useWindowBeforeUnload;\n","/**\n * References:\n * https://github.com/ReactTraining/history/blob/master/docs/Blocking.md\n */\nimport { useEffect } from 'react';\nimport { History, TransitionPromptHook } from 'history';\nimport useUpdatedRef from '../hooks/useUpdatedRef';\n\nconst createHistoryBlockHook = (history: History) => (\n  handler: TransitionPromptHook<unknown>,\n) => {\n  const handlerRef = useUpdatedRef(handler);\n\n  useEffect(() => {\n    const unblock = history.block((location, action) =>\n      handlerRef.current?.(location, action),\n    );\n    return () => unblock();\n  }, [handlerRef]);\n};\n\nexport default createHistoryBlockHook;\n","import { History } from 'history';\nimport useWindowBeforeUnload from '../hooks/useWindowBeforeUnload';\nimport createHistoryBlockHook from './createHistoryBlockHook';\n\nconst createBeforeLeaveHook = (history: History) => (\n  enabled = true,\n  message?: string,\n) => {\n  const useHistoryBlock = createHistoryBlockHook(history);\n  useHistoryBlock(() => (enabled ? message || false : undefined));\n  useWindowBeforeUnload(message, enabled);\n};\n\nexport default createBeforeLeaveHook;\n","import { AsyncState } from '../types/common';\n\nexport const PENDING_STATE: AsyncState<any, any> = { loading: false };\nexport const LOADING_STATE: AsyncState<any, any> = { loading: true };\n","/**\n * References:\n * https://github.com/jacob-ebey/react-hook-utils/blob/master/src/usePromise.js\n * https://github.com/aiven715/promise-hook/blob/master/src/index.js\n * https://github.com/streamich/react-use/blob/master/src/useAsyncFn.ts\n * https://github.com/adambrgmn/hooks/blob/master/src/use-promise/index.ts\n */\n\nimport { DependencyList, useState, useEffect } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { AsyncState } from '../types/common';\n\nconst usePromise = <TResult, TError = unknown>(\n  promiseFactory: () => Promise<TResult> | false | undefined | null,\n  deps: DependencyList = [],\n  initialState: ValueFactory<AsyncState<TResult, TError>> = PENDING_STATE,\n  cleanup?: VoidFunction,\n) => {\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    let isCancelled = false;\n    const promise = promiseFactory();\n\n    if (!promise) {\n      setState(PENDING_STATE);\n      return undefined;\n    }\n\n    setState(LOADING_STATE);\n\n    promise\n      .then(result => {\n        if (!isCancelled) setState({ loading: false, result });\n      })\n      .catch(error => {\n        if (!isCancelled) setState({ loading: false, error });\n      });\n\n    return () => {\n      isCancelled = true;\n      cleanup?.();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  return state;\n};\n\nexport default usePromise;\n\nexport type PromiseState<TResult = unknown, TError = unknown> =\n  | {\n      loading: boolean;\n      result?: undefined;\n      error?: undefined;\n    }\n  | {\n      loading: false;\n      result: TResult;\n      error?: undefined;\n    }\n  | {\n      loading: false;\n      result?: undefined;\n      error: TError;\n    };\n","export default class FetchError extends Error {\n  constructor(statusText: string, readonly status: number) {\n    super(statusText || 'Fetch Error');\n  }\n}\n","/**\n * References:\n * https://github.com/mauricedb/use-abortable-fetch\n * https://medium.com/better-programming/learn-to-create-your-own-usefetch-react-hook-9cc31b038e53\n * https://github.com/ilyalesik/react-fetch-hook\n * https://github.com/raghav-grover/use-fetcher\n * https://github.com/alex-cory/use-http/blob/1d42e236846f7dc2ae13f6ad2861bb986252563a/src/useFetch.ts\n * https://github.com/franlol/useFetch\n */\n\nimport { useRef, DependencyList } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport { OmitFrom } from 'cb-toolset/object';\nimport usePromise from '../hooks/usePromise';\nimport FetchError from '../utils/FetchError';\nimport { AsyncState } from '../types/common';\n\nconst createFetchHook = <TResult>(\n  fetchFn: (input: RequestInfo, init?: RequestInit) => Promise<Response>,\n  getResult: (res: Response) => Promise<TResult>,\n) => <TAsyncResult extends TResult = TResult>(\n  input: RequestInfo,\n  init?: OmitFrom<RequestInit, 'signal'>,\n  deps?: DependencyList,\n  initialState?: ValueFactory<AsyncState<TAsyncResult, FetchError>>,\n) => {\n  const abortControllerRef = useRef<AbortController>();\n\n  return usePromise<TAsyncResult, FetchError>(\n    async () => {\n      const abortController = new AbortController();\n      abortControllerRef.current = abortController;\n      const res = await fetchFn(input, {\n        ...init,\n        signal: abortController.signal,\n      });\n      if (res.ok) {\n        const result = (await getResult(res)) as TAsyncResult;\n        return result;\n      }\n      throw new FetchError(res.statusText, res.status);\n    },\n    deps,\n    initialState,\n    () => abortControllerRef.current?.abort(),\n  );\n};\n\nexport default createFetchHook;\n","/**\n * References:\n * https://github.com/ReactTraining/history/blob/master/docs/GettingStarted.md\n */\n\nimport { useEffect } from 'react';\nimport { History, LocationListener } from 'history';\nimport useUpdatedRef from '../hooks/useUpdatedRef';\n\nconst createHistoryListenHook = (history: History) => (\n  listener: LocationListener<unknown>,\n) => {\n  const listenerRef = useUpdatedRef(listener);\n\n  useEffect(() => {\n    const unlisten = history.listen((location, action) =>\n      listenerRef.current?.(location, action),\n    );\n    return () => unlisten();\n  }, [listenerRef]);\n};\n\nexport default createHistoryListenHook;\n","import { BaseSyntheticEvent } from 'react';\nimport { isBrowser } from 'cb-toolset/dom';\n\nexport const isSyntheticEvent = (o: any): o is BaseSyntheticEvent =>\n  o instanceof Object && o.nativeEvent instanceof Event;\n\nexport const getWindowScrollOffset = (): Offset =>\n  isBrowser() ? { x: window.scrollX, y: window.scrollY } : {};\n\nexport const getWindowSize = (): WindowSize =>\n  isBrowser()\n    ? {\n        innerWidth: window.innerWidth,\n        innerHeight: window.innerHeight,\n        outerWidth: window.outerWidth,\n        outerHeight: window.outerHeight,\n      }\n    : {};\n\nexport const persistEvent = (o: unknown) => isSyntheticEvent(o) && o.persist();\n\nexport interface Offset {\n  x?: number;\n  y?: number;\n}\n\nexport interface WindowSize {\n  innerWidth?: number;\n  innerHeight?: number;\n  outerWidth?: number;\n  outerHeight?: number;\n}\n","/**\n * References:\n * https://github.com/imbhargav5/rooks/blob/dev/packages/debounce/src/useDebounce.ts\n */\n\nimport { useRef, useEffect, useCallback } from 'react';\nimport { RateLimitFunctionWithOptions } from 'cb-toolset/function';\nimport useUpdatedRef from '../hooks/useUpdatedRef';\nimport { persistEvent } from '../utils/common';\n\nconst createRateLimitHook = <TOptions>(\n  rateLimit: RateLimitFunctionWithOptions<TOptions>,\n) => <TArgs extends any[], TReturn>(\n  func: (...args: TArgs) => TReturn,\n  wait: number,\n  options?: TOptions,\n) => {\n  const funcRef = useUpdatedRef(func);\n  const rateLimitedFuncRef = useRef(rateLimit(func, wait, options));\n\n  useEffect(() => {\n    rateLimitedFuncRef.current = rateLimit(\n      (...args) => funcRef.current(...args),\n      wait,\n      options,\n    );\n\n    return () => rateLimitedFuncRef.current?.cancel();\n  }, [funcRef, options, wait]);\n\n  return useCallback<(...args: TArgs) => TReturn | undefined>((...args) => {\n    args.forEach(persistEvent);\n    return rateLimitedFuncRef.current(...args);\n  }, []);\n};\n\nexport default createRateLimitHook;\n","import { useState, useRef, useEffect } from 'react';\nimport { RateLimitFunctionWithOptions } from 'cb-toolset/function';\nimport useUpdatedRef from '../hooks/useUpdatedRef';\n\nconst createRateLimitValueHook = <TOptions>(\n  rateLimit: RateLimitFunctionWithOptions<TOptions>,\n) => <TArgs extends any[], TReturn>(\n  func: (...args: TArgs) => TReturn,\n  args: TArgs,\n  wait: number,\n  options?: TOptions,\n) => {\n  const [value, setValue] = useState<TReturn>();\n  const funcRef = useUpdatedRef(func);\n  const rateLimitedFuncRef = useRef(rateLimit(func, wait, options));\n\n  useEffect(() => {\n    rateLimitedFuncRef.current = rateLimit(\n      (...currentArgs) => {\n        const result = funcRef.current(...currentArgs);\n        setValue(result);\n        return result;\n      },\n      wait,\n      options,\n    );\n\n    return () => rateLimitedFuncRef.current?.cancel();\n  }, [funcRef, options, wait]);\n\n  useEffect(() => {\n    rateLimitedFuncRef.current(...args);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, args);\n\n  return value;\n};\n\nexport default createRateLimitValueHook;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useEffectOnce.ts\n */\n\nimport { EffectCallback, useEffect } from 'react';\n\nconst useEffectOnce = (effect: EffectCallback) => useEffect(effect, []);\n\nexport default useEffectOnce;\n","/**\n * References:\n * https://github.com/adambrgmn/hooks/blob/master/src/use-is-mounted/index.ts\n * https://github.com/hupe1980/react-is-mounted-hook/blob/master/src/use-is-mounted.tsx\n * https://github.com/streamich/react-use/blob/master/src/useRefMounted.ts\n */\n\nimport { useRef, useCallback } from 'react';\nimport useEffectOnce from './useEffectOnce';\n\nconst useIsMounted = () => {\n  const isMountedRef = useRef(false);\n\n  useEffectOnce(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  });\n\n  return useCallback(() => isMountedRef.current, []);\n};\n\nexport default useIsMounted;\n","/**\n * References:\n * https://github.com/hupe1980/react-script-hook/blob/master/src/use-script.tsx\n */\n\nimport { useState, useEffect } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useIsMounted from '../hooks/useIsMounted';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { AsyncState } from '../types/common';\n\nconst createResourceHook = <TAttrs extends Partial<HTMLElement>>(\n  tagName: 'script' | 'link',\n  isValid: (attrs: TAttrs) => boolean,\n  insert: (element: HTMLElement) => void,\n) => (\n  attrs: TAttrs,\n  initialState: ValueFactory<AsyncState> = PENDING_STATE,\n) => {\n  const isMounted = useIsMounted();\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    if (!isValid(attrs)) {\n      setState(PENDING_STATE);\n      return undefined;\n    }\n\n    const element = ((attrs.id &&\n      document.querySelector(`${tagName}#${attrs.id}`)) ||\n      document.createElement(tagName)) as HTMLScriptElement;\n\n    Object.assign(element, attrs);\n\n    const handleLoad = () => {\n      if (isMounted()) {\n        setState(PENDING_STATE);\n      }\n    };\n\n    const handleError = (e: ErrorEvent) => {\n      if (isMounted()) {\n        setState({ loading: false, error: e.error });\n      }\n    };\n\n    element.addEventListener('load', handleLoad, false);\n    element.addEventListener('error', handleError, false);\n\n    setState(LOADING_STATE);\n    insert(element);\n\n    return () => {\n      element.removeEventListener('load', handleLoad, false);\n      element.removeEventListener('error', handleError, false);\n    };\n  }, [attrs, isMounted]);\n\n  return state;\n};\n\nexport default createResourceHook;\n","import { Context, useContext } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { createURLSearchObject } from 'cb-toolset/dom';\n\nconst createSearchParamsObjectHook = (\n  routerContext: Context<RouteComponentProps>,\n) => <TSearchObject>() => {\n  const searchString = useContext(routerContext).location.search;\n  return createURLSearchObject<TSearchObject>(searchString);\n};\n\nexport default createSearchParamsObjectHook;\n","import { DependencyList, useEffect } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useAnimationFrame = (\n  callback: FrameRequestCallback,\n  deps: DependencyList = [],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useEffect(() => {\n    const handle = requestAnimationFrame(time => callbackRef.current?.(time));\n\n    return () => cancelAnimationFrame(handle);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useAnimationFrame;\n","import { useReducer, useCallback, Reducer } from 'react';\n\nconst reducer = <TValue>(\n  state: readonly TValue[],\n  action: ArrayAction<TValue>,\n) => {\n  switch (action.type) {\n    case 'append':\n      return [...state, action.payload];\n\n    case 'prepend':\n      return [action.payload, ...state];\n\n    case 'filter':\n      return state.filter(action.payload);\n\n    default:\n      return state;\n  }\n};\n\nconst useArray = <TValue>(initialValue: readonly TValue[] = []) => {\n  const [array, dispatch] = useReducer<\n    Reducer<readonly TValue[], ArrayAction<TValue>>\n  >(reducer, initialValue);\n\n  const append = useCallback(\n    (item: TValue) => dispatch({ type: 'append', payload: item }),\n    [dispatch],\n  );\n\n  const prepend = useCallback(\n    (item: TValue) => dispatch({ type: 'prepend', payload: item }),\n    [dispatch],\n  );\n\n  const filter = useCallback(\n    (predicate: (value: TValue, index: number) => boolean) =>\n      dispatch({ type: 'filter', payload: predicate }),\n    [dispatch],\n  );\n\n  return [array, append, prepend, filter] as const;\n};\n\nexport default useArray;\n\ntype AppendAction<TValue> = { type: 'append'; payload: TValue };\ntype PrependAction<TValue> = { type: 'prepend'; payload: TValue };\ntype FilterAction<TValue> = {\n  type: 'filter';\n  payload: (value: TValue, index: number) => boolean;\n};\ntype ArrayAction<TValue> =\n  | AppendAction<TValue>\n  | PrependAction<TValue>\n  | FilterAction<TValue>;\n","import { audit } from 'cb-toolset/function';\nimport createRateLimitHook from '../creators/createRateLimitHook';\n\nconst useAudit = createRateLimitHook(audit);\n\nexport default useAudit;\n","import { audit } from 'cb-toolset/function';\nimport createRateLimitValueHook from '../creators/createRateLimitValueHook';\n\nconst useAuditValue = createRateLimitValueHook(audit);\n\nexport default useAuditValue;\n","/* eslint-disable no-param-reassign */\nimport { useEffect, DependencyList } from 'react';\n\nconst useBase = (attrs: BaseAttributes, deps: DependencyList = []) =>\n  useEffect(() => {\n    const setBaseAttrs = (\n      baseElement: HTMLBaseElement,\n      baseAttrs: BaseAttributes,\n    ) => {\n      const { href, target } = baseAttrs;\n      const prevAttrs: BaseAttributes = {\n        href: baseElement.href,\n        target: baseElement.target,\n      };\n      if (href) baseElement.href = href;\n      if (target) baseElement.target = target;\n      return prevAttrs;\n    };\n\n    const base = document.querySelector('base');\n\n    if (base) {\n      const baseElement = base;\n      const prevAttrs = setBaseAttrs(baseElement, attrs);\n      return () => setBaseAttrs(baseElement, prevAttrs);\n    }\n\n    const baseElement = document.createElement('base');\n    setBaseAttrs(baseElement, attrs);\n    document.head.insertAdjacentElement('afterbegin', baseElement);\n    return () => baseElement.remove();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\nexport default useBase;\n\nexport interface BaseAttributes {\n  href?: string;\n  target?: string;\n}\n","import { DependencyList, useRef, useCallback } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useCallbackWithCleanup = <TArgs extends any[]>(\n  callback: (...args: TArgs) => void | VoidFunction,\n  deps: DependencyList = [],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n  const cleanupRef = useRef<void | VoidFunction>();\n\n  return useCallback((...args: TArgs) => {\n    if (cleanupRef.current) cleanupRef.current();\n    cleanupRef.current = callbackRef.current?.(...args);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useCallbackWithCleanup;\n","import { useCallback } from 'react';\nimport { CheckedTargetEvent } from 'cb-toolset/dom';\n\nconst useHandleChangeCheck = (\n  ...handlers: readonly ((checked: boolean) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { checked } }: CheckedTargetEvent) =>\n      handlers.forEach(handler => handler?.(Boolean(checked))),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeCheck;\n","import { useState } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useHandleChangeCheck from './useHandleChangeCheck';\n\nconst useCheckInput = (initialValue: ValueFactory<boolean> = false) => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = useHandleChangeCheck(setValue);\n  return [value, setValue, handleChange] as const;\n};\n\nexport default useCheckInput;\n","import { useRef } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\n\nconst useCurrent = <TValue>(initialValue?: ValueFactory<TValue>) => {\n  const ref = useRef(initialValue);\n\n  return {\n    set: (value: TValue) => {\n      ref.current = value;\n    },\n    get: () => ref.current,\n    is: (value: TValue) => ref.current === value,\n  } as const;\n};\n\nexport default useCurrent;\n","import { useCallback } from 'react';\n\nconst useCurryFunction: UseCurryFunction = (\n  fn: (...args: any[]) => any,\n  thisArg: any = null,\n  ...args: any[]\n) =>\n  useCallback(\n    (...restArgs: any[]) => fn?.apply(thisArg, [...args, ...restArgs]),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [fn, ...args],\n  );\n\nexport default useCurryFunction;\n\ninterface UseCurryFunction {\n  <TFirstArg, TRestArgs extends any[], TReturn>(\n    func: (firstArg: TFirstArg, ...restArgs: TRestArgs) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n  ): (...args: TRestArgs) => TReturn;\n  <TFirstArg, TSecondArg, TRestArgs extends any[], TReturn>(\n    func: (\n      firstArg: TFirstArg,\n      secondArg: TSecondArg,\n      ...restArgs: TRestArgs\n    ) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n    secondArg: TSecondArg,\n  ): (...args: TRestArgs) => TReturn;\n  <TFirstArg, TSecondArg, TThirdArg, TRestArgs extends any[], TReturn>(\n    func: (\n      firstArg: TFirstArg,\n      secondArg: TSecondArg,\n      thirdArg: TThirdArg,\n      ...restArgs: TRestArgs\n    ) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n    secondArg: TSecondArg,\n    thirdArg: TThirdArg,\n  ): (...args: TRestArgs) => TReturn;\n  <\n    TFirstArg,\n    TSecondArg,\n    TThirdArg,\n    TForthArg,\n    TRestArgs extends any[],\n    TReturn\n  >(\n    func: (\n      firstArg: TFirstArg,\n      secondArg: TSecondArg,\n      thirdArg: TThirdArg,\n      forthArg: TForthArg,\n      ...restArgs: TRestArgs\n    ) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n    secondArg: TSecondArg,\n    thirdArg: TThirdArg,\n    forthArg: TForthArg,\n  ): (...args: TRestArgs) => TReturn;\n}\n","import { debounce } from 'cb-toolset/function';\nimport createRateLimitHook from '../creators/createRateLimitHook';\n\nconst useDebounce = createRateLimitHook(debounce);\n\nexport default useDebounce;\n","import { debounce } from 'cb-toolset/function';\nimport createRateLimitValueHook from '../creators/createRateLimitValueHook';\n\nconst useDebounceValue = createRateLimitValueHook(debounce);\n\nexport default useDebounceValue;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useMount.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useDidMount.js\n * https://github.com/imbhargav5/rooks/blob/dev/packages/shared/useDidMount.ts\n */\n\nimport useEffectOnce from './useEffectOnce';\n\nconst useDidMount = (callback: VoidFunction) => useEffectOnce(callback);\n\nexport default useDidMount;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useUpdateEffect.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useDidUpdate.js\n */\n\nimport { EffectCallback, DependencyList, useRef, useEffect } from 'react';\n\nconst useDidUpdate = (callback: EffectCallback, deps?: DependencyList) => {\n  const didMountRef = useRef(false);\n\n  useEffect(\n    didMountRef.current\n      ? callback\n      : () => {\n          didMountRef.current = true;\n        },\n    deps,\n  );\n};\n\nexport default useDidUpdate;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/c0574064ca/src/useFavicon.ts\n */\n\nimport { useEffect, DependencyList } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useUpdatedLink = (\n  attrs: Partial<HTMLLinkElement>,\n  selector: string | (() => HTMLLinkElement),\n  deps: DependencyList = [],\n) => {\n  const selectorRef = useUpdatedRef(selector);\n\n  useEffect(() => {\n    const linkSelector = selectorRef.current;\n    const link =\n      (typeof linkSelector === 'function'\n        ? linkSelector()\n        : document.querySelector(linkSelector)) ||\n      document.createElement('link');\n\n    if (link instanceof HTMLLinkElement) {\n      Object.assign(link, attrs);\n      document.head.appendChild(link);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useUpdatedLink;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/c0574064ca/src/useFavicon.ts\n */\n\nimport useUpdatedLink from './useUpdatedLink';\n\nconst useFavicon = (href: string) =>\n  useUpdatedLink(\n    { href, rel: `shortcut icon`, type: `image/x-icon` },\n    `link[rel='shortcut icon']`,\n    [href],\n  );\n\nexport default useFavicon;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetch = createFetchHook(fetch, res => res.json());\n\nexport default useFetch;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchArrayBuffer = createFetchHook(fetch, res => res.arrayBuffer());\n\nexport default useFetchArrayBuffer;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchBlob = createFetchHook(fetch, res => res.blob());\n\nexport default useFetchBlob;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchFormData = createFetchHook(fetch, res => res.formData());\n\nexport default useFetchFormData;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchStream = createFetchHook(fetch, res => Promise.resolve(res.body));\n\nexport default useFetchStream;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchText = createFetchHook(fetch, res => res.text());\n\nexport default useFetchText;\n","import { useReducer } from 'react';\nimport { createUniqueObject } from 'cb-toolset/object';\n\nconst useTriggerUpdate = () =>\n  useReducer(createUniqueObject, createUniqueObject());\n\nexport default useTriggerUpdate;\n","/**\n * References:\n * https://github.com/CharlesStover/use-force-update\n * https://reactjs.org/docs/hooks-faq.html#is-there-something-like-forceupdate\n */\n\nimport useTriggerUpdate from './useTriggerUpdate';\n\nconst useForceUpdate = () => useTriggerUpdate()[1];\n\nexport default useForceUpdate;\n","/**\n * References:\n * https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API/Guide\n * https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API\n */\n\nimport { RefObject, useCallback } from 'react';\nimport useEvent from './useEvent';\n\nconst useToggleFullscreen = (\n  elementRef: RefObject<Element>,\n  onChange: EventListener | null = null,\n  onError: EventListener | null = null,\n) => {\n  const toggleFullscreen = useCallback(\n    (show?: boolean) => {\n      if (\n        document.fullscreenElement &&\n        (show === false || show === undefined)\n      ) {\n        document.exitFullscreen();\n      }\n\n      if (\n        !document.fullscreenElement &&\n        (show === true || show === undefined)\n      ) {\n        // eslint-disable-next-line no-unused-expressions\n        elementRef.current?.requestFullscreen?.();\n      }\n    },\n    [elementRef],\n  );\n\n  useEvent(document, 'fullscreenchange', onChange);\n  useEvent(document, 'fullscreenerror', onError);\n\n  return toggleFullscreen;\n};\n\nexport default useToggleFullscreen;\n","import { useState, RefObject } from 'react';\nimport useToggleFullscreen from './useToggleFullscreen';\nimport useCurryFunction from './useCurryFunction';\n\nconst useFullscreen = (elementRef: RefObject<Element>) => {\n  const [fullscreen, setFullscreen] = useState(false);\n  const isFullscreen = () =>\n    !!document.fullscreenElement &&\n    document.fullscreenElement === elementRef.current;\n  const handleChange = () => setFullscreen(isFullscreen());\n  const toggleFullscreen = useToggleFullscreen(elementRef, handleChange);\n  const enterFullscreen = useCurryFunction(toggleFullscreen, null, true);\n  const exitFullscreen = useCurryFunction(toggleFullscreen, null, false);\n  return [\n    fullscreen,\n    toggleFullscreen,\n    enterFullscreen,\n    exitFullscreen,\n  ] as const;\n};\n\nexport default useFullscreen;\n","import { useCallback } from 'react';\nimport { FilesTargetEvent } from 'cb-toolset/dom';\n\nconst useHandleChangeFile = (\n  ...handlers: readonly ((files: FileList | null) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { files } }: FilesTargetEvent) =>\n      handlers.forEach(handler => handler?.(files)),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeFile;\n","import { useCallback } from 'react';\nimport { ValueTargetEvent } from 'cb-toolset/dom';\n\nconst useHandleChangeNumber = (\n  ...handlers: readonly ((value: number) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { value } }: ValueTargetEvent<string>) =>\n      handlers.forEach(handler => handler?.(Number(value))),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeNumber;\n","import { useCallback } from 'react';\nimport { ValueTargetEvent } from 'cb-toolset/dom';\n\nconst useHandleChangeText = (\n  ...handlers: readonly ((text: string) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { value } }: ValueTargetEvent<string>) =>\n      handlers.forEach(handler => handler?.(String(value))),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeText;\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { DependencyList, useLayoutEffect } from 'react';\nimport { OmitFrom } from 'cb-toolset/object';\nimport { ValueFactory, getValueFromFactory } from 'cb-toolset/function';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useIntersectionObserverEffect = (\n  getTargets: () => Element[] | undefined | null,\n  callback: IntersectionObserverCallback,\n  options?: UseIntersectionObserverEffectOptions,\n  deps: DependencyList = [],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useLayoutEffect(() => {\n    const targets = getTargets();\n\n    if (!targets || !targets.length) return undefined;\n\n    const opts: IntersectionObserverInit | undefined = options && {\n      ...options,\n      root: getValueFromFactory(options.root),\n    };\n\n    const observer = new IntersectionObserver(\n      (entries, currentObserver) =>\n        callbackRef.current?.(entries, currentObserver),\n      opts,\n    );\n    targets.forEach(target => observer.observe(target));\n\n    return () => observer.disconnect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useIntersectionObserverEffect;\n\nexport interface UseIntersectionObserverEffectOptions\n  extends OmitFrom<IntersectionObserverInit, 'root'> {\n  root?: ValueFactory<Element | undefined | null>;\n}\n","import { RefObject, useRef } from 'react';\nimport useIntersectionObserverEffect, {\n  UseIntersectionObserverEffectOptions,\n} from './useIntersectionObserverEffect';\n\nconst isOptionsObject = (\n  o: unknown,\n): o is UseIntersectionObserverEffectOptions => o instanceof Object;\n\nconst useInfiniteScroll: UseInfiniteScroll = (\n  elementRef: RefObject<Element>,\n  loadMore: () => void | Promise<unknown>,\n  ...args: any[]\n) => {\n  const loadingRef = useRef<boolean>(false);\n  const loading: boolean | undefined =\n    typeof args[0] === 'boolean' ? args[0] : undefined;\n  const options:\n    | UseIntersectionObserverEffectOptions\n    | undefined = isOptionsObject(args[0])\n    ? args[0]\n    : isOptionsObject(args[1])\n    ? args[1]\n    : undefined;\n\n  useIntersectionObserverEffect(\n    () => elementRef.current && [elementRef.current],\n    async entries => {\n      if (\n        loading ||\n        loadingRef.current ||\n        entries.every(({ isIntersecting }) => !isIntersecting)\n      ) {\n        return;\n      }\n\n      loadingRef.current = true;\n\n      try {\n        await Promise.resolve(loadMore());\n      } catch {\n        // Do nothing\n      }\n\n      loadingRef.current = false;\n    },\n    options,\n  );\n};\n\nexport default useInfiniteScroll;\n\nexport interface UseInfiniteScroll {\n  (\n    elementRef: RefObject<Element>,\n    loadMore: () => Promise<unknown>,\n    options?: UseIntersectionObserverEffectOptions,\n  ): void;\n  (\n    elementRef: RefObject<Element>,\n    loadMore: VoidFunction,\n    loading: boolean,\n    options?: UseIntersectionObserverEffectOptions,\n  ): void;\n}\n","/**\n * References:\n * https://github.com/adambrgmn/hooks/blob/master/src/use-in-view/index.ts\n * https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n */\n\nimport { RefObject } from 'react';\nimport useIntersectionObserverEffect, {\n  UseIntersectionObserverEffectOptions,\n} from './useIntersectionObserverEffect';\n\nconst useIntersectionObserver = (\n  elementRef: RefObject<Element>,\n  callback: IntersectionObserverCallback,\n  options?: UseIntersectionObserverEffectOptions,\n) =>\n  useIntersectionObserverEffect(\n    () => elementRef.current && [elementRef.current],\n    callback,\n    options,\n    [options],\n  );\n\nexport default useIntersectionObserver;\n","/**\n * References:\n * https://github.com/dispix/react-pirate/blob/master/src/useInterval.js\n * https://github.com/donavon/use-interval\n */\n\nimport { DependencyList, useEffect } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useInterval = (\n  callback: VoidFunction | undefined | null,\n  {\n    period,\n    leading,\n    running,\n    deps = [period, leading, running],\n  }: UseIntervalSettings,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useEffect(() => {\n    let handle: NodeJS.Timeout;\n\n    if (running) {\n      // eslint-disable-next-line no-unused-expressions\n      if (leading) callbackRef.current?.();\n      handle = setInterval(() => callbackRef.current?.(), period);\n    }\n\n    return () => {\n      if (handle) clearInterval(handle);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useInterval;\n\nexport interface UseIntervalSettings {\n  deps?: DependencyList;\n  leading?: boolean;\n  period: number;\n  running?: boolean;\n}\n","/* eslint-disable no-param-reassign */\nimport { useRef, useCallback } from 'react';\nimport useIntersectionObserverEffect, {\n  UseIntersectionObserverEffectOptions,\n} from './useIntersectionObserverEffect';\n\nconst defaultGetSrc = (image: HTMLImageElement) => image.dataset.src;\n\nconst useLazyLoad = ({\n  getSrc = defaultGetSrc,\n  ...options\n}: UseLazyLoadOptions = {}) => {\n  const imageMapRef = useRef(new Map<HTMLImageElement, string>());\n\n  const register = useCallback(\n    (arg: string | HTMLImageElement) => {\n      if (typeof arg === 'string') {\n        const src = arg;\n\n        return (image: HTMLImageElement) => {\n          imageMapRef.current.set(image, src);\n        };\n      }\n\n      if (arg instanceof HTMLImageElement) {\n        const image = arg;\n        const src = getSrc(image);\n\n        if (src) {\n          imageMapRef.current.set(image, src);\n        }\n      }\n\n      return undefined;\n    },\n    [getSrc],\n  ) as UseLazyLoadRegister;\n\n  useIntersectionObserverEffect(\n    () => Array.from(imageMapRef.current.keys()),\n    (entries, currentObserver) =>\n      entries.forEach(({ isIntersecting, target }) => {\n        if (!isIntersecting || !(target instanceof HTMLImageElement)) return;\n\n        const src = imageMapRef.current.get(target) || getSrc(target);\n\n        if (src) {\n          target.src = src;\n        }\n\n        currentObserver.unobserve(target);\n      }),\n    options,\n  );\n\n  return register;\n};\n\nexport default useLazyLoad;\n\nexport interface UseLazyLoadOptions\n  extends UseIntersectionObserverEffectOptions {\n  getSrc?: (image: HTMLImageElement) => string | null | undefined;\n}\n\nexport interface UseLazyLoadRegister {\n  (image: HTMLImageElement): void;\n  (src: string): (image: HTMLImageElement) => void;\n}\n","import { isBrowser } from 'cb-toolset/dom';\nimport createResourceHook from '../creators/createResourceHook';\n\nconst useLink = createResourceHook<Partial<HTMLLinkElement>>(\n  'link',\n  ({ href }) =>\n    isBrowser() && !!href && !document.querySelector(`link[href=\"${href}\"]`),\n  element => document.head.appendChild(element),\n);\n\nexport default useLink;\n","/**\n * References:\n * https://material-ui.com/components/use-media-query/\n * https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/useMediaQuery/useMediaQuery.js\n * https://github.com/streamich/react-use/blob/master/src/useMedia.ts\n * https://github.com/jaredpalmer/the-platform/blob/master/src/useMedia.tsx\n * https://usehooks.com/useMedia/\n * https://github.com/ReactTraining/react-media\n * https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\n * https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList\n * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries\n * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n * https://gomakethings.com/a-better-way-to-test-breakpoints-with-vanilla-javascript/\n * https://github.com/akiran/json2mq\n */\n\nimport { useState, useEffect } from 'react';\nimport { pickFrom, PickFrom } from 'cb-toolset/object';\nimport { isBrowser } from 'cb-toolset/dom';\nimport { ValueFactory } from 'cb-toolset/function';\n\nconst getMediaResult = (mql: MediaQueryList): MediaResult =>\n  pickFrom(mql, 'matches', 'media');\n\nconst useMediaQuery = (\n  query: string,\n  initialState: ValueFactory<MediaResult> = { media: '', matches: false },\n) => {\n  const [result, setResult] = useState(\n    isBrowser() ? () => getMediaResult(window.matchMedia(query)) : initialState,\n  );\n\n  useEffect(() => {\n    const mql = window.matchMedia(query);\n    const onChange = (e: MediaQueryListEvent) => {\n      setResult(e);\n    };\n    setResult(getMediaResult(mql));\n    mql.addListener(onChange);\n    return () => mql.removeListener(onChange);\n  }, [query]);\n\n  return result;\n};\n\nexport default useMediaQuery;\n\nexport type MediaResult = PickFrom<MediaQueryList, 'matches' | 'media'>;\n","/**\n * References:\n * https://github.com/imbhargav5/rooks/blob/dev/packages/shared/useMutationObserver.ts\n * https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n */\n\nimport { useLayoutEffect, RefObject } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useMutationObserver = <TNode extends Node>(\n  nodeRef: RefObject<TNode>,\n  callback: MutationCallback,\n  options?: MutationObserverInit,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useLayoutEffect(() => {\n    if (!nodeRef.current) return undefined;\n\n    const observer = new MutationObserver((mutation, currentObserver) =>\n      callbackRef.current?.(mutation, currentObserver),\n    );\n    observer.observe(nodeRef.current, options);\n\n    return () => observer.disconnect();\n  }, [callbackRef, nodeRef, options]);\n};\n\nexport default useMutationObserver;\n","import { useState } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useHandleChangeNumber from './useHandleChangeNumber';\n\nconst useNumberInput = (initialValue: ValueFactory<number> = 0) => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = useHandleChangeNumber(setValue);\n  return [value, setValue, handleChange] as const;\n};\n\nexport default useNumberInput;\n","/**\n * References:\n * https://usehooks.com/useOnClickOutside/\n * https://github.com/sandiiarov/use-events/blob/master/src/useClickOutside/index.tsx\n * https://github.com/Andarist/use-onclickoutside/blob/master/src/index.ts\n * https://github.com/streamich/react-use/blob/master/src/useClickAway.ts\n * https://github.com/imbhargav5/rooks/blob/dev/packages/outside-click/src/useOutsideClick.ts\n */\n\nimport { RefObject } from 'react';\nimport useEvent from './useEvent';\n\nconst useOnClickOutside = (\n  nodeRef: RefObject<Node>,\n  handleClickOutside: ClickHandler,\n) =>\n  useEvent(document, ['mousedown', 'touchstart'], e => {\n    if (\n      handleClickOutside &&\n      nodeRef.current &&\n      !nodeRef.current.contains(e.target as Node)\n    ) {\n      handleClickOutside(e);\n    }\n  });\n\nexport default useOnClickOutside;\n\nexport type ClickHandler = (e: TouchEvent | MouseEvent) => void;\n","import useEvent from './useEvent';\n\nconst usePageVisibility = (callback: (state: VisibilityState) => void) =>\n  useEvent(document, 'visibilitychange', () =>\n    callback?.(document.visibilityState),\n  );\n\nexport default usePageVisibility;\n","import { useState } from 'react';\nimport usePageVisibility from './usePageVisibility';\n\nconst usePageVisibilityState = () => {\n  const [state, setState] = useState(document.visibilityState);\n  usePageVisibility(setState);\n  return state;\n};\n\nexport default usePageVisibilityState;\n","/**\n * References:\n * https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n * https://github.com/Andarist/use-previous\n * https://github.com/dispix/react-pirate\n * https://github.com/imbhargav5/rooks/tree/dev/packages/previous\n * https://github.com/kitze/react-hanger\n * https://github.com/zakariaharti/react-hookedup\n * https://github.com/imbhargav5/rooks/blob/dev/packages/previous/src/usePrevious.ts\n */\n\nimport { useRef, useEffect } from 'react';\n\nconst defaultPredicate = () => true;\n\nconst usePrevious = <TValue>(\n  value: TValue,\n  predicate: (value: TValue) => boolean = defaultPredicate,\n) => {\n  const prevRef = useRef<TValue>();\n\n  useEffect(() => {\n    if (predicate(value)) prevRef.current = value;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  return prevRef.current;\n};\n\nexport default usePrevious;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useAsyncFn.ts\n * https://github.com/adambrgmn/hooks/blob/master/src/use-promise/index.ts\n */\n\nimport { DependencyList, useState, useCallback } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useIsMounted from './useIsMounted';\nimport useCurrent from './useCurrent';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { AsyncState } from '../types/common';\n\nconst usePromiseCallback = <TArgs extends any[], TResult, TError = unknown>(\n  promiseFactory: (\n    ...args: TArgs\n  ) => Promise<TResult> | false | undefined | null,\n  deps: DependencyList = [],\n  initialState: ValueFactory<AsyncState<TResult, TError>> = PENDING_STATE,\n) => {\n  const isMounted = useIsMounted();\n  const [state, setState] = useState(initialState);\n  const currentPromise = useCurrent<\n    Promise<TResult> | false | undefined | null\n  >();\n\n  const callback = useCallback(\n    (...args: TArgs) => {\n      const promise = promiseFactory(...args);\n      currentPromise.set(promise);\n\n      if (!promise) {\n        setState(PENDING_STATE);\n        return;\n      }\n\n      setState(LOADING_STATE);\n\n      promise\n        .then(result => {\n          if (currentPromise.is(promise) && isMounted()) {\n            setState({ loading: false, result });\n          }\n        })\n        .catch(error => {\n          if (currentPromise.is(promise) && isMounted()) {\n            setState({ loading: false, error });\n          }\n        });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    deps,\n  );\n\n  return [state, callback] as const;\n};\n\nexport default usePromiseCallback;\n","import { RefObject, useLayoutEffect } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useResizeObserver = (\n  elementRef: RefObject<Element>,\n  callback: ResizeObserverCallback,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useLayoutEffect(() => {\n    if (!elementRef.current) return undefined;\n\n    const observer = new ResizeObserver(entries =>\n      callbackRef.current?.(entries),\n    );\n    observer.observe(elementRef.current);\n\n    return () => observer.disconnect();\n  }, [callbackRef, elementRef]);\n};\n\nexport default useResizeObserver;\n","import { sample } from 'cb-toolset/function';\nimport createRateLimitHook from '../creators/createRateLimitHook';\n\nconst useSample = createRateLimitHook(sample);\n\nexport default useSample;\n","import { sample } from 'cb-toolset/function';\nimport createRateLimitValueHook from '../creators/createRateLimitValueHook';\n\nconst useSampleValue = createRateLimitValueHook(sample);\n\nexport default useSampleValue;\n","import { isBrowser } from 'cb-toolset/dom';\nimport createResourceHook from '../creators/createResourceHook';\n\nconst useScript = createResourceHook<Partial<HTMLScriptElement>>(\n  'script',\n  ({ src }) =>\n    isBrowser() && !!src && !document.querySelector(`script[src=\"${src}\"]`),\n  element => document.body.appendChild(element),\n);\n\nexport default useScript;\n","import { useRef, useCallback, useState } from 'react';\nimport useIntersectionObserverEffect, {\n  UseIntersectionObserverEffectOptions,\n} from './useIntersectionObserverEffect';\n\nconst defaultGetId = <TElement extends Element>(element: TElement) =>\n  element?.getAttribute('id');\n\nconst isElement = <TElement extends Element>(o: unknown): o is TElement =>\n  o instanceof Element;\n\nconst useScrollSpy = <TElement extends Element = Element>({\n  getId = defaultGetId,\n  threshold = 1,\n  ...rest\n}: UseScrollSpyOptions<TElement> = {}) => {\n  const [id, setId] = useState<string>();\n  const elementMapRef = useRef(new Map<TElement, string>());\n  const intersectingElementsRef = useRef(new Set<TElement>());\n\n  const register = useCallback(\n    (arg: string | TElement) => {\n      if (typeof arg === 'string') {\n        const elementId = arg;\n\n        return (element: TElement) => {\n          elementMapRef.current.set(element, elementId);\n        };\n      }\n\n      if (isElement<TElement>(arg)) {\n        const element = arg;\n        const elementId = getId(element);\n\n        if (elementId) {\n          elementMapRef.current.set(element, elementId);\n        }\n      }\n\n      return undefined;\n    },\n    [getId],\n  ) as UseScrollSpyRegister<TElement>;\n\n  useIntersectionObserverEffect(\n    () => Array.from(elementMapRef.current.keys()),\n    entries => {\n      entries.forEach(({ intersectionRatio, target }) => {\n        if (intersectionRatio >= threshold) {\n          intersectingElementsRef.current.add(target as TElement);\n        } else {\n          intersectingElementsRef.current.delete(target as TElement);\n        }\n      });\n\n      if (!intersectingElementsRef.current.size) return;\n\n      const selectedElement = Array.from(\n        intersectingElementsRef.current,\n      ).reduce((prev, curr) =>\n        prev.getBoundingClientRect().top < curr.getBoundingClientRect().top\n          ? prev\n          : curr,\n      );\n\n      const newId =\n        elementMapRef.current.get(selectedElement) || getId(selectedElement);\n\n      if (typeof newId === 'string') {\n        setId(newId);\n      }\n    },\n    { ...rest, threshold },\n  );\n\n  return [id, register] as const;\n};\n\nexport default useScrollSpy;\n\nexport interface UseScrollSpyOptions<TElement>\n  extends UseIntersectionObserverEffectOptions {\n  getId?: (element: TElement) => string | null | undefined;\n  threshold?: number;\n}\n\nexport interface UseScrollSpyRegister<TElement extends Element> {\n  (element: TElement): void;\n  (id: string): (element: TElement) => void;\n}\n","import { useState } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useHandleChangeText from './useHandleChangeText';\n\nconst useTextInput = (initialValue: ValueFactory<string> = '') => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = useHandleChangeText(setValue);\n  return [value, setValue, handleChange] as const;\n};\n\nexport default useTextInput;\n","import { throttle } from 'cb-toolset/function';\nimport createRateLimitHook from '../creators/createRateLimitHook';\n\nconst useThrottle = createRateLimitHook(throttle);\n\nexport default useThrottle;\n","import { throttle } from 'cb-toolset/function';\nimport createRateLimitValueHook from '../creators/createRateLimitValueHook';\n\nconst useThrottleValue = createRateLimitValueHook(throttle);\n\nexport default useThrottleValue;\n","/**\n * References:\n * https://github.com/kripod/react-hooks/blob/master/packages/state-hooks/src/useTimeline.ts\n */\n\nimport { useRef, useEffect } from 'react';\n\nconst defaultPredicate = () => true;\n\nconst useTimeline = <TValue>(\n  value: TValue,\n  revert = true,\n  predicate: (value: TValue) => boolean = defaultPredicate,\n) => {\n  const accumulateRef = useRef<TValue[]>([]);\n\n  useEffect(() => {\n    if (predicate(value)) {\n      accumulateRef.current = revert\n        ? [value, ...accumulateRef.current]\n        : [...accumulateRef.current, value];\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  return accumulateRef.current;\n};\n\nexport default useTimeline;\n","/**\n * References:\n * https://github.com/dispix/react-pirate/blob/master/src/useTimeout.js\n * https://github.com/imbhargav5/rooks/blob/master/packages/timeout/src/useTimeout.ts\n */\n\nimport { DependencyList, useEffect } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useTimeout = (\n  callback: VoidFunction,\n  ms: number,\n  deps: DependencyList = [ms],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useEffect(() => {\n    const handle = setTimeout(() => callbackRef.current?.(), ms);\n    return () => clearTimeout(handle);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useTimeout;\n","import { useRef, useCallback } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\nimport useDidMount from './useDidMount';\n\nconst useTimeoutCallback = (callback: VoidFunction, ms: number) => {\n  const callbackRef = useUpdatedRef(callback);\n  const timeoutRef = useRef<TimeoutObject>();\n\n  useDidMount(() => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current.handle);\n      timeoutRef.current.resolve();\n    }\n  });\n\n  const timeoutCallback = useCallback(\n    () =>\n      new Promise<void>(resolve => {\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current.handle);\n          timeoutRef.current.resolve();\n        }\n        const handle = setTimeout(() => {\n          // eslint-disable-next-line no-unused-expressions\n          callbackRef.current?.();\n          resolve();\n        }, ms);\n        timeoutRef.current = { handle, resolve };\n      }),\n    [callbackRef, ms],\n  );\n\n  return timeoutCallback;\n};\n\nexport default useTimeoutCallback;\n\ninterface TimeoutObject {\n  handle: NodeJS.Timeout;\n  resolve: VoidFunction;\n}\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useUnmount.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useWillUnmount.js\n * https://github.com/imbhargav5/rooks/blob/dev/packages/will-unmount/src/useWillUnmount.ts\n */\n\nimport useEffectOnce from './useEffectOnce';\n\nconst useWillUnmount = (callback: VoidFunction) =>\n  useEffectOnce(() => callback);\n\nexport default useWillUnmount;\n","/**\n * References:\n * https://github.com/withvoid/melting-pot/blob/master/src/hooks/useTitle.js\n * https://github.com/streamich/react-use/blob/master/src/useTitle.ts\n */\n\nimport { useRef, useEffect } from 'react';\nimport useWillUnmount from './useWillUnmount';\n\nconst useTitle = (title: string, options?: UseTitleOptions) => {\n  const titleRef = useRef(document.title);\n\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  useWillUnmount(() => {\n    if (options?.restoreOnUnmount) {\n      document.title = titleRef.current;\n    }\n  });\n};\n\nexport default useTitle;\n\nexport interface UseTitleOptions {\n  restoreOnUnmount?: boolean;\n}\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useToggle.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useToggle.js\n */\n\nimport { useState, useCallback } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useCurryFunction from './useCurryFunction';\n\nconst useToggle = (initialValue: ValueFactory<boolean> = false) => {\n  const [value, setValue] = useState(initialValue);\n  const toggle = useCallback(() => setValue(prevValue => !prevValue), []);\n  const setTrue = useCurryFunction(setValue, null, true);\n  const setFalse = useCurryFunction(setValue, null, false);\n  return [value, toggle, setTrue, setFalse, setValue] as const;\n};\n\nexport default useToggle;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useWindowScroll.ts\n */\n\nimport { useState } from 'react';\nimport useEvent from './useEvent';\nimport { getWindowScrollOffset } from '../utils/common';\n\nconst useWindowScrollOffset = () => {\n  const [scrollOffset, setScrollOffset] = useState(getWindowScrollOffset);\n  useEvent(window, 'scroll', () => setScrollOffset(getWindowScrollOffset()), {\n    capture: false,\n    passive: true,\n    usingAnimationFrame: true,\n  });\n  return scrollOffset;\n};\n\nexport default useWindowScrollOffset;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useWindowSize.ts\n * https://github.com/imbhargav5/rooks/blob/dev/packages/window-size/src/useWindowSize.ts\n * https://github.com/contiamo/operational-ui/blob/master/src/useWindowSize/index.ts\n */\n\nimport { useState } from 'react';\nimport useEvent from './useEvent';\nimport { getWindowSize } from '../utils/common';\n\nconst useWindowSize = () => {\n  const [size, setSize] = useState(getWindowSize);\n  useEvent(window, 'resize', () => setSize(getWindowSize()));\n  return size;\n};\n\nexport default useWindowSize;\n","import { useRef, useState, useCallback } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useWillUnmount from './useWillUnmount';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { AsyncState } from '../types/common';\n\nconst useWorkerCallback = <\n  TMessage = unknown,\n  TResult = unknown,\n  TError = unknown\n>(\n  workerUrl: string,\n  options?: WorkerOptions,\n  initialState: ValueFactory<AsyncState<TResult, TError>> = PENDING_STATE,\n) => {\n  const [state, setState] = useState(initialState);\n  const workerRef = useRef<Worker>();\n\n  const callback = useCallback(\n    (message: TMessage, opts?: PostMessageOptions) => {\n      if (workerRef.current) {\n        workerRef.current.terminate();\n      }\n\n      const worker = new Worker(workerUrl, options);\n      worker.addEventListener('message', e =>\n        setState({ loading: false, result: e.data }),\n      );\n      worker.addEventListener('error', e =>\n        setState({ loading: false, error: e.error }),\n      );\n      worker.postMessage(message, opts);\n      setState(LOADING_STATE);\n      workerRef.current = worker;\n    },\n    [options, workerUrl],\n  );\n\n  useWillUnmount(() => {\n    if (workerRef.current) workerRef.current.terminate();\n  });\n\n  return [state, callback] as const;\n};\n\nexport default useWorkerCallback;\n"],"names":["useUpdatedRef","value","deps","ref","useRef","useLayoutEffect","current","checkAndInvokeEventListener","listener","event","selectors","target","Object","matches","useEvent","element","eventNames","capture","once","passive","usingAnimationFrame","enabled","listenerRef","animationFrameRef","useEffect","eventTarget","Function","getEventTarget","eventListener","e","cancelAnimationFrame","requestAnimationFrame","eventNameList","Array","isArray","forEach","eventName","addEventListener","removeEventListener","useWindowBeforeUnload","message","window","preventDefault","returnValue","createHistoryBlockHook","history","handler","handlerRef","unblock","block","location","action","createBeforeLeaveHook","useHistoryBlock","undefined","PENDING_STATE","loading","LOADING_STATE","usePromise","promiseFactory","initialState","cleanup","useState","state","setState","isCancelled","promise","then","result","error","FetchError","statusText","status","_this","Error","createFetchHook","fetchFn","getResult","input","init","abortControllerRef","abortController","AbortController","signal","res","ok","_abortControllerRef$c","abort","createHistoryListenHook","unlisten","listen","getWindowScrollOffset","isBrowser","x","scrollX","y","scrollY","getWindowSize","innerWidth","innerHeight","outerWidth","outerHeight","persistEvent","o","nativeEvent","Event","isSyntheticEvent","persist","createRateLimitHook","rateLimit","func","wait","options","funcRef","rateLimitedFuncRef","_rateLimitedFuncRef$c","cancel","useCallback","args","createRateLimitValueHook","setValue","useEffectOnce","effect","useIsMounted","isMountedRef","createResourceHook","tagName","isValid","insert","attrs","isMounted","id","document","querySelector","createElement","assign","handleLoad","handleError","createSearchParamsObjectHook","routerContext","searchString","useContext","search","createURLSearchObject","useAnimationFrame","callback","callbackRef","handle","time","reducer","type","payload","filter","useArray","initialValue","useReducer","dispatch","item","predicate","useAudit","audit","useAuditValue","useBase","setBaseAttrs","baseElement","baseAttrs","href","prevAttrs","base","head","insertAdjacentElement","remove","useCallbackWithCleanup","cleanupRef","useHandleChangeCheck","handlers","checked","Boolean","useCheckInput","useCurrent","set","get","is","useCurryFunction","fn","thisArg","restArgs","apply","useDebounce","debounce","useDebounceValue","useDidMount","useDidUpdate","didMountRef","useUpdatedLink","selector","selectorRef","linkSelector","link","HTMLLinkElement","appendChild","useFavicon","rel","useFetch","fetch","json","useFetchArrayBuffer","arrayBuffer","useFetchBlob","blob","useFetchFormData","formData","useFetchStream","Promise","resolve","body","useFetchText","text","useTriggerUpdate","createUniqueObject","useForceUpdate","useToggleFullscreen","elementRef","onChange","onError","toggleFullscreen","show","fullscreenElement","exitFullscreen","requestFullscreen","useFullscreen","fullscreen","setFullscreen","useHandleChangeFile","files","useHandleChangeNumber","Number","useHandleChangeText","String","_catch","recover","Symbol","iterator","asyncIterator","useIntersectionObserverEffect","getTargets","targets","length","opts","root","getValueFromFactory","observer","IntersectionObserver","entries","currentObserver","observe","disconnect","isOptionsObject","useInfiniteScroll","loadMore","loadingRef","every","isIntersecting","useIntersectionObserver","useInterval","period","leading","running","setInterval","clearInterval","defaultGetSrc","image","dataset","src","useLazyLoad","getSrc","imageMapRef","Map","register","arg","HTMLImageElement","from","keys","unobserve","useLink","getMediaResult","mql","pickFrom","useMediaQuery","query","media","matchMedia","setResult","addListener","removeListener","useMutationObserver","nodeRef","MutationObserver","mutation","useNumberInput","useOnClickOutside","handleClickOutside","contains","usePageVisibility","visibilityState","usePageVisibilityState","defaultPredicate","usePrevious","prevRef","usePromiseCallback","currentPromise","useResizeObserver","ResizeObserver","useSample","sample","useSampleValue","useScript","defaultGetId","getAttribute","useScrollSpy","getId","threshold","rest","setId","elementMapRef","intersectingElementsRef","Set","elementId","Element","intersectionRatio","add","size","selectedElement","reduce","prev","curr","getBoundingClientRect","top","newId","useTextInput","useThrottle","throttle","useThrottleValue","useTimeline","revert","accumulateRef","useTimeout","ms","setTimeout","clearTimeout","useTimeoutCallback","timeoutRef","useWillUnmount","useTitle","title","titleRef","restoreOnUnmount","useToggle","prevValue","useWindowScrollOffset","scrollOffset","setScrollOffset","useWindowSize","setSize","useWorkerCallback","workerUrl","workerRef","terminate","worker","Worker","data","postMessage"],"mappings":"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"}