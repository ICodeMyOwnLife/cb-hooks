{"version":3,"file":"index.js","sources":["../src/hooks/useUpdatedRef.ts","../src/hooks/useEvent.ts","../src/hooks/useWindowBeforeUnload.ts","../src/creators/createHistoryBlockHook.ts","../src/constants/common.ts","../src/hooks/usePromise.ts","../src/utils/FetchError.ts","../src/creators/createFetchHook.ts","../src/utils/common.ts","../src/creators/createRateLimitHook.ts","../src/creators/createRateLimitValueHook.ts","../src/creators/createResourceHook.ts","../src/hooks/useArray.ts","../src/hooks/useAudit.ts","../src/hooks/useAuditValue.ts","../src/hooks/useHandleChangeCheck.ts","../src/hooks/useCurrent.ts","../src/hooks/useCurryFunction.ts","../src/hooks/useDebounce.ts","../src/hooks/useDebounceValue.ts","../src/hooks/useEffectOnce.ts","../src/hooks/useDidMount.ts","../src/hooks/useUpdatedLink.ts","../src/hooks/useFetch.ts","../src/hooks/useFetchArrayBuffer.ts","../src/hooks/useFetchBlob.ts","../src/hooks/useFetchFormData.ts","../src/hooks/useFetchStream.ts","../src/hooks/useFetchText.ts","../src/hooks/useTriggerUpdate.ts","../src/hooks/useToggleFullscreen.ts","../src/hooks/useHandleChangeNumber.ts","../src/hooks/useHandleChangeText.ts","../src/hooks/useIntersectionObserverEffect.ts","../src/hooks/useInfiniteScroll.ts","../src/hooks/useIsMounted.ts","../src/hooks/useLazyLoad.ts","../src/hooks/useLink.ts","../src/hooks/useMediaQuery.ts","../src/hooks/usePageVisibility.ts","../src/hooks/usePrevious.ts","../src/hooks/useSample.ts","../src/hooks/useSampleValue.ts","../src/hooks/useScript.ts","../src/hooks/useScrollSpy.ts","../src/hooks/useThrottle.ts","../src/hooks/useThrottleValue.ts","../src/hooks/useTimeline.ts","../src/hooks/useWillUnmount.ts","../src/creators/createBeforeLeaveHook.ts","../src/creators/createHistoryListenHook.ts","../src/creators/createSearchParamsObjectHook.ts","../src/hooks/useAnimationFrame.ts","../src/hooks/useBase.ts","../src/hooks/useCallbackWithCleanup.ts","../src/hooks/useCheckInput.ts","../src/hooks/useDidUpdate.ts","../src/hooks/useFavicon.ts","../src/hooks/useForceUpdate.ts","../src/hooks/useFullscreen.ts","../src/hooks/useHandleChangeFile.ts","../src/hooks/useIntersectionObserver.ts","../src/hooks/useInterval.ts","../src/hooks/useMutationObserver.ts","../src/hooks/useNumberInput.ts","../src/hooks/useOnClickOutside.ts","../src/hooks/usePageVisibilityState.ts","../src/hooks/usePromiseCallback.ts","../src/hooks/useResizeObserver.ts","../src/hooks/useTextInput.ts","../src/hooks/useTimeout.ts","../src/hooks/useTimeoutCallback.ts","../src/hooks/useTitle.ts","../src/hooks/useToggle.ts","../src/hooks/useWindowScrollOffset.ts","../src/hooks/useWindowSize.ts","../src/hooks/useWorkerCallback.ts"],"sourcesContent":["import { DependencyList, useRef, useLayoutEffect } from 'react';\n\nconst useUpdatedRef = <TValue>(value: TValue, deps?: DependencyList) => {\n  const ref = useRef(value);\n\n  useLayoutEffect(() => {\n    ref.current = value;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  return ref;\n};\n\nexport default useUpdatedRef;\n","/**\n * References:\n * https://github.com/donavon/use-event-listener\n * https://github.com/streamich/react-use/blob/master/src/useEvent.ts\n * https://github.com/adambrgmn/hooks/blob/master/src/use-event-listener/index.ts\n */\n\nimport { useRef, useEffect } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst getEventTarget = <TElement>(element: ElementType<TElement>) =>\n  element instanceof Function ? element() : element;\n\nconst isElement = (target: EventTarget | null): target is Element =>\n  target instanceof Object && 'matches' in target;\n\nconst checkAndInvokeEventListener = (\n  listener: EventListener | null,\n  event: Event,\n  selectors: string | undefined,\n) => {\n  if (!listener) {\n    return;\n  }\n  if (\n    selectors &&\n    (!isElement(event.target) || !event.target.matches(selectors))\n  ) {\n    return;\n  }\n  listener(event);\n};\n\nconst useEvent: UseEvent = (\n  element: ElementType<EventTarget>,\n  eventNames: string | string[],\n  listener: EventListener | null,\n  {\n    capture,\n    once,\n    passive,\n    selectors,\n    usingAnimationFrame,\n    enabled = true,\n  }: UseEventOptions = {},\n) => {\n  const listenerRef = useUpdatedRef(listener);\n  const animationFrameRef = useRef(0);\n\n  useEffect(() => {\n    if (!enabled) {\n      return undefined;\n    }\n\n    const eventTarget = getEventTarget(element);\n    if (!eventTarget) {\n      return undefined;\n    }\n\n    const eventListener = (e: Event) => {\n      if (usingAnimationFrame) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = requestAnimationFrame(() =>\n          checkAndInvokeEventListener(listenerRef.current, e, selectors),\n        );\n      } else {\n        checkAndInvokeEventListener(listenerRef.current, e, selectors);\n      }\n    };\n\n    const eventNameList = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n    eventNameList.forEach(eventName =>\n      eventTarget.addEventListener(eventName, eventListener, {\n        capture,\n        once,\n        passive,\n      }),\n    );\n\n    return () => {\n      if (usingAnimationFrame && animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      eventNameList.forEach(eventName =>\n        eventTarget.removeEventListener(eventName, eventListener, { capture }),\n      );\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    element,\n    capture,\n    once,\n    passive,\n    selectors,\n    usingAnimationFrame,\n    enabled,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    ...eventNames,\n  ]);\n};\n\nexport default useEvent;\n\ninterface UseEvent {\n  <TEventName extends keyof WindowEventMap>(\n    element: ElementType<Window>,\n    eventNames: TEventName | TEventName[],\n    listener: (e: WindowEventMap[TEventName]) => void | null,\n    options?: UseEventOptions,\n  ): void;\n  <TEventName extends keyof DocumentEventMap>(\n    element: ElementType<Document>,\n    eventNames: TEventName | TEventName[],\n    listener: (e: DocumentEventMap[TEventName]) => void | null,\n    options?: UseEventOptions,\n  ): void;\n  <TEventName extends keyof HTMLElementEventMap>(\n    element: ElementType<HTMLElement>,\n    eventNames: TEventName | TEventName[],\n    listener: (e: HTMLElementEventMap[TEventName]) => void | null,\n    options?: UseEventOptions,\n  ): void;\n  (\n    element: ElementType<EventTarget>,\n    eventNames: string | string[],\n    listener: EventListener | null,\n    options?: UseEventOptions,\n  ): void;\n}\n\nexport interface UseEventOptions extends AddEventListenerOptions {\n  selectors?: string;\n  usingAnimationFrame?: boolean;\n  enabled?: boolean;\n}\n\ntype ElementType<TElement> = ValueFactory<TElement | null | undefined | false>;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useBeforeUnload.ts\n */\n\nimport useEvent from './useEvent';\n\nconst useWindowBeforeUnload = (message?: string, enabled = true) =>\n  useEvent(\n    window,\n    'beforeunload',\n    e => {\n      e.preventDefault();\n      if (message) e.returnValue = message;\n      return message;\n    },\n    { enabled },\n  );\n\nexport default useWindowBeforeUnload;\n","/**\n * References:\n * https://github.com/ReactTraining/history/blob/master/docs/Blocking.md\n */\nimport { useEffect } from 'react';\nimport { History, TransitionPromptHook } from 'history';\nimport useUpdatedRef from '../hooks/useUpdatedRef';\n\nconst createHistoryBlockHook = (history: History) => (\n  handler: TransitionPromptHook<unknown>,\n) => {\n  const handlerRef = useUpdatedRef(handler);\n\n  useEffect(() => {\n    const unblock = history.block((location, action) =>\n      handlerRef.current?.(location, action),\n    );\n    return () => unblock();\n  }, [handlerRef]);\n};\n\nexport default createHistoryBlockHook;\n","import { AsyncState } from '../types/common';\n\nexport const PENDING_STATE: AsyncState<any, any> = { loading: false };\nexport const LOADING_STATE: AsyncState<any, any> = { loading: true };\n","/**\n * References:\n * https://github.com/jacob-ebey/react-hook-utils/blob/master/src/usePromise.js\n * https://github.com/aiven715/promise-hook/blob/master/src/index.js\n * https://github.com/streamich/react-use/blob/master/src/useAsyncFn.ts\n * https://github.com/adambrgmn/hooks/blob/master/src/use-promise/index.ts\n */\n\nimport { DependencyList, useState, useEffect } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { AsyncState } from '../types/common';\n\nconst usePromise = <TResult, TError = unknown>(\n  promiseFactory: () => Promise<TResult> | false | undefined | null,\n  deps: DependencyList = [],\n  initialState: ValueFactory<AsyncState<TResult, TError>> = PENDING_STATE,\n  cleanup?: VoidFunction,\n) => {\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    let isCancelled = false;\n    const promise = promiseFactory();\n\n    if (!promise) {\n      setState(PENDING_STATE);\n      return undefined;\n    }\n\n    setState(LOADING_STATE);\n\n    promise\n      .then(result => {\n        if (!isCancelled) setState({ loading: false, result });\n      })\n      .catch(error => {\n        if (!isCancelled) setState({ loading: false, error });\n      });\n\n    return () => {\n      isCancelled = true;\n      cleanup?.();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  return state;\n};\n\nexport default usePromise;\n\nexport type PromiseState<TResult = unknown, TError = unknown> =\n  | {\n      loading: boolean;\n      result?: undefined;\n      error?: undefined;\n    }\n  | {\n      loading: false;\n      result: TResult;\n      error?: undefined;\n    }\n  | {\n      loading: false;\n      result?: undefined;\n      error: TError;\n    };\n","export default class FetchError extends Error {\n  constructor(statusText: string, readonly status: number) {\n    super(statusText || 'Fetch Error');\n  }\n}\n","/**\n * References:\n * https://github.com/mauricedb/use-abortable-fetch\n * https://medium.com/better-programming/learn-to-create-your-own-usefetch-react-hook-9cc31b038e53\n * https://github.com/ilyalesik/react-fetch-hook\n * https://github.com/raghav-grover/use-fetcher\n * https://github.com/alex-cory/use-http/blob/1d42e236846f7dc2ae13f6ad2861bb986252563a/src/useFetch.ts\n * https://github.com/franlol/useFetch\n */\n\nimport { useRef, DependencyList } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport { OmitFrom } from 'cb-toolset/object';\nimport usePromise from '../hooks/usePromise';\nimport FetchError from '../utils/FetchError';\nimport { AsyncState } from '../types/common';\n\nconst createFetchHook = <TResult>(\n  fetchFn: (input: RequestInfo, init?: RequestInit) => Promise<Response>,\n  getResult: (res: Response) => Promise<TResult>,\n) => <TAsyncResult extends TResult = TResult>(\n  input: RequestInfo,\n  init?: OmitFrom<RequestInit, 'signal'>,\n  deps?: DependencyList,\n  initialState?: ValueFactory<AsyncState<TAsyncResult, FetchError>>,\n) => {\n  const abortControllerRef = useRef<AbortController>();\n\n  return usePromise<TAsyncResult, FetchError>(\n    async () => {\n      const abortController = new AbortController();\n      abortControllerRef.current = abortController;\n      const res = await fetchFn(input, {\n        ...init,\n        signal: abortController.signal,\n      });\n      if (res.ok) {\n        const result = (await getResult(res)) as TAsyncResult;\n        return result;\n      }\n      throw new FetchError(res.statusText, res.status);\n    },\n    deps,\n    initialState,\n    () => abortControllerRef.current?.abort(),\n  );\n};\n\nexport default createFetchHook;\n","import { BaseSyntheticEvent } from 'react';\nimport { isBrowser } from 'cb-toolset/dom';\n\nexport const isSyntheticEvent = (o: any): o is BaseSyntheticEvent =>\n  o instanceof Object && o.nativeEvent instanceof Event;\n\nexport const getWindowScrollOffset = (): Offset =>\n  isBrowser() ? { x: window.scrollX, y: window.scrollY } : {};\n\nexport const getWindowSize = (): WindowSize =>\n  isBrowser()\n    ? {\n        innerWidth: window.innerWidth,\n        innerHeight: window.innerHeight,\n        outerWidth: window.outerWidth,\n        outerHeight: window.outerHeight,\n      }\n    : {};\n\nexport const persistEvent = (o: unknown) => isSyntheticEvent(o) && o.persist();\n\nexport interface Offset {\n  x?: number;\n  y?: number;\n}\n\nexport interface WindowSize {\n  innerWidth?: number;\n  innerHeight?: number;\n  outerWidth?: number;\n  outerHeight?: number;\n}\n","/**\n * References:\n * https://github.com/imbhargav5/rooks/blob/dev/packages/debounce/src/useDebounce.ts\n */\n\nimport { useRef, useEffect, useCallback } from 'react';\nimport { RateLimitFunctionWithOptions } from 'cb-toolset/function';\nimport useUpdatedRef from '../hooks/useUpdatedRef';\nimport { persistEvent } from '../utils/common';\n\nconst createRateLimitHook = <TOptions>(\n  rateLimit: RateLimitFunctionWithOptions<TOptions>,\n) => <TArgs extends any[], TReturn>(\n  func: (...args: TArgs) => TReturn,\n  wait: number,\n  options?: TOptions,\n) => {\n  const funcRef = useUpdatedRef(func);\n  const rateLimitedFuncRef = useRef(rateLimit(func, wait, options));\n\n  useEffect(() => {\n    rateLimitedFuncRef.current = rateLimit(\n      (...args) => funcRef.current(...args),\n      wait,\n      options,\n    );\n\n    return () => rateLimitedFuncRef.current?.cancel();\n  }, [funcRef, options, wait]);\n\n  return useCallback<(...args: TArgs) => TReturn | undefined>((...args) => {\n    args.forEach(persistEvent);\n    return rateLimitedFuncRef.current(...args);\n  }, []);\n};\n\nexport default createRateLimitHook;\n","import { useState, useRef, useEffect } from 'react';\nimport { RateLimitFunctionWithOptions } from 'cb-toolset/function';\nimport useUpdatedRef from '../hooks/useUpdatedRef';\n\nconst createRateLimitValueHook = <TOptions>(\n  rateLimit: RateLimitFunctionWithOptions<TOptions>,\n) => <TArgs extends any[], TReturn>(\n  func: (...args: TArgs) => TReturn,\n  args: TArgs,\n  wait: number,\n  options?: TOptions,\n) => {\n  const [value, setValue] = useState<TReturn>();\n  const funcRef = useUpdatedRef(func);\n  const rateLimitedFuncRef = useRef(rateLimit(func, wait, options));\n\n  useEffect(() => {\n    rateLimitedFuncRef.current = rateLimit(\n      (...currentArgs) => {\n        const result = funcRef.current(...currentArgs);\n        setValue(result);\n        return result;\n      },\n      wait,\n      options,\n    );\n\n    return () => rateLimitedFuncRef.current?.cancel();\n  }, [funcRef, options, wait]);\n\n  useEffect(() => {\n    rateLimitedFuncRef.current(...args);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, args);\n\n  return value;\n};\n\nexport default createRateLimitValueHook;\n","/**\n * References:\n * https://github.com/hupe1980/react-script-hook/blob/master/src/use-script.tsx\n */\n\nimport { useState, useEffect } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useUpdatedRef from '../hooks/useUpdatedRef';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { AsyncState } from '../types/common';\n\nconst createResourceHook = <TAttrs extends Partial<HTMLElement>>(\n  tagName: 'script' | 'link',\n  isValid: (attrs: TAttrs) => boolean,\n  insert: (element: HTMLElement) => void,\n) => (\n  attrs: TAttrs,\n  onLoad?: (e: Event) => void,\n  onError?: (e: ErrorEvent) => void,\n  initialState: ValueFactory<AsyncState> = PENDING_STATE,\n) => {\n  const [state, setState] = useState(initialState);\n  const onLoadRef = useUpdatedRef(onLoad);\n  const onErrorRef = useUpdatedRef(onError);\n\n  useEffect(() => {\n    if (!isValid(attrs)) {\n      setState(PENDING_STATE);\n      return undefined;\n    }\n\n    const element = ((attrs.id &&\n      document.querySelector(`${tagName}#${attrs.id}`)) ||\n      document.createElement(tagName)) as HTMLScriptElement;\n\n    Object.assign(element, attrs);\n\n    const handleLoad = (e: Event) => {\n      setState(PENDING_STATE);\n      onLoadRef.current?.(e);\n    };\n\n    const handleError = (e: ErrorEvent) => {\n      setState({ loading: false, error: e.error });\n      onErrorRef.current?.(e);\n    };\n\n    element.addEventListener('load', handleLoad, false);\n    element.addEventListener('error', handleError, false);\n\n    setState(LOADING_STATE);\n    insert(element);\n\n    return () => {\n      element.removeEventListener('load', handleLoad, false);\n      element.removeEventListener('error', handleError, false);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return state;\n};\n\nexport default createResourceHook;\n","import { useReducer, useCallback, Reducer } from 'react';\n\nconst reducer = <TValue>(\n  state: readonly TValue[],\n  action: ArrayAction<TValue>,\n) => {\n  switch (action.type) {\n    case 'append':\n      return [...state, action.payload];\n\n    case 'prepend':\n      return [action.payload, ...state];\n\n    case 'filter':\n      return state.filter(action.payload);\n\n    default:\n      return state;\n  }\n};\n\nconst useArray = <TValue>(initialValue: readonly TValue[] = []) => {\n  const [array, dispatch] = useReducer<\n    Reducer<readonly TValue[], ArrayAction<TValue>>\n  >(reducer, initialValue);\n\n  const append = useCallback(\n    (item: TValue) => dispatch({ type: 'append', payload: item }),\n    [dispatch],\n  );\n\n  const prepend = useCallback(\n    (item: TValue) => dispatch({ type: 'prepend', payload: item }),\n    [dispatch],\n  );\n\n  const filter = useCallback(\n    (predicate: (value: TValue, index: number) => boolean) =>\n      dispatch({ type: 'filter', payload: predicate }),\n    [dispatch],\n  );\n\n  return [array, append, prepend, filter] as const;\n};\n\nexport default useArray;\n\ntype AppendAction<TValue> = { type: 'append'; payload: TValue };\ntype PrependAction<TValue> = { type: 'prepend'; payload: TValue };\ntype FilterAction<TValue> = {\n  type: 'filter';\n  payload: (value: TValue, index: number) => boolean;\n};\ntype ArrayAction<TValue> =\n  | AppendAction<TValue>\n  | PrependAction<TValue>\n  | FilterAction<TValue>;\n","import { audit } from 'cb-toolset/function';\nimport createRateLimitHook from '../creators/createRateLimitHook';\n\nconst useAudit = createRateLimitHook(audit);\n\nexport default useAudit;\n","import { audit } from 'cb-toolset/function';\nimport createRateLimitValueHook from '../creators/createRateLimitValueHook';\n\nconst useAuditValue = createRateLimitValueHook(audit);\n\nexport default useAuditValue;\n","import { useCallback } from 'react';\nimport { CheckedTargetEvent } from 'cb-toolset/dom';\n\nconst useHandleChangeCheck = (\n  ...handlers: readonly ((checked: boolean) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { checked } }: CheckedTargetEvent) =>\n      handlers.forEach(handler => handler?.(Boolean(checked))),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeCheck;\n","import { useRef } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\n\nconst useCurrent = <TValue>(initialValue?: ValueFactory<TValue>) => {\n  const ref = useRef(initialValue);\n\n  return {\n    set: (value: TValue) => {\n      ref.current = value;\n    },\n    get: () => ref.current,\n    is: (value: TValue) => ref.current === value,\n  } as const;\n};\n\nexport default useCurrent;\n","import { useCallback } from 'react';\n\nconst useCurryFunction: UseCurryFunction = (\n  fn: (...args: any[]) => any,\n  thisArg: any = null,\n  ...args: any[]\n) =>\n  useCallback(\n    (...restArgs: any[]) => fn?.apply(thisArg, [...args, ...restArgs]),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [fn, ...args],\n  );\n\nexport default useCurryFunction;\n\ninterface UseCurryFunction {\n  <TFirstArg, TRestArgs extends any[], TReturn>(\n    func: (firstArg: TFirstArg, ...restArgs: TRestArgs) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n  ): (...args: TRestArgs) => TReturn;\n  <TFirstArg, TSecondArg, TRestArgs extends any[], TReturn>(\n    func: (\n      firstArg: TFirstArg,\n      secondArg: TSecondArg,\n      ...restArgs: TRestArgs\n    ) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n    secondArg: TSecondArg,\n  ): (...args: TRestArgs) => TReturn;\n  <TFirstArg, TSecondArg, TThirdArg, TRestArgs extends any[], TReturn>(\n    func: (\n      firstArg: TFirstArg,\n      secondArg: TSecondArg,\n      thirdArg: TThirdArg,\n      ...restArgs: TRestArgs\n    ) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n    secondArg: TSecondArg,\n    thirdArg: TThirdArg,\n  ): (...args: TRestArgs) => TReturn;\n  <\n    TFirstArg,\n    TSecondArg,\n    TThirdArg,\n    TForthArg,\n    TRestArgs extends any[],\n    TReturn\n  >(\n    func: (\n      firstArg: TFirstArg,\n      secondArg: TSecondArg,\n      thirdArg: TThirdArg,\n      forthArg: TForthArg,\n      ...restArgs: TRestArgs\n    ) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n    secondArg: TSecondArg,\n    thirdArg: TThirdArg,\n    forthArg: TForthArg,\n  ): (...args: TRestArgs) => TReturn;\n}\n","import { debounce } from 'cb-toolset/function';\nimport createRateLimitHook from '../creators/createRateLimitHook';\n\nconst useDebounce = createRateLimitHook(debounce);\n\nexport default useDebounce;\n","import { debounce } from 'cb-toolset/function';\nimport createRateLimitValueHook from '../creators/createRateLimitValueHook';\n\nconst useDebounceValue = createRateLimitValueHook(debounce);\n\nexport default useDebounceValue;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useEffectOnce.ts\n */\n\nimport { EffectCallback, useEffect } from 'react';\n\nconst useEffectOnce = (effect: EffectCallback) => useEffect(effect, []);\n\nexport default useEffectOnce;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useMount.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useDidMount.js\n * https://github.com/imbhargav5/rooks/blob/dev/packages/shared/useDidMount.ts\n */\n\nimport useEffectOnce from './useEffectOnce';\n\nconst useDidMount = (callback: VoidFunction) => useEffectOnce(callback);\n\nexport default useDidMount;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/c0574064ca/src/useFavicon.ts\n */\n\nimport { useEffect, DependencyList } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useUpdatedLink = (\n  attrs: Partial<HTMLLinkElement>,\n  selector: string | (() => HTMLLinkElement),\n  deps: DependencyList = [],\n) => {\n  const selectorRef = useUpdatedRef(selector);\n\n  useEffect(() => {\n    const linkSelector = selectorRef.current;\n    const link =\n      (typeof linkSelector === 'function'\n        ? linkSelector()\n        : document.querySelector(linkSelector)) ||\n      document.createElement('link');\n\n    if (link instanceof HTMLLinkElement) {\n      Object.assign(link, attrs);\n      document.head.appendChild(link);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useUpdatedLink;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetch = createFetchHook(fetch, res => res.json());\n\nexport default useFetch;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchArrayBuffer = createFetchHook(fetch, res => res.arrayBuffer());\n\nexport default useFetchArrayBuffer;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchBlob = createFetchHook(fetch, res => res.blob());\n\nexport default useFetchBlob;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchFormData = createFetchHook(fetch, res => res.formData());\n\nexport default useFetchFormData;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchStream = createFetchHook(fetch, res => Promise.resolve(res.body));\n\nexport default useFetchStream;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchText = createFetchHook(fetch, res => res.text());\n\nexport default useFetchText;\n","import { useReducer } from 'react';\nimport { createUniqueObject } from 'cb-toolset/object';\n\nconst useTriggerUpdate = () =>\n  useReducer(createUniqueObject, createUniqueObject());\n\nexport default useTriggerUpdate;\n","/**\n * References:\n * https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API/Guide\n * https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API\n */\n\nimport { RefObject, useCallback } from 'react';\nimport useEvent from './useEvent';\n\nconst useToggleFullscreen = (\n  elementRef: RefObject<Element>,\n  onChange: EventListener | null = null,\n  onError: EventListener | null = null,\n) => {\n  const toggleFullscreen = useCallback(\n    (show?: boolean) => {\n      if (\n        document.fullscreenElement &&\n        (show === false || show === undefined)\n      ) {\n        document.exitFullscreen();\n      }\n\n      if (\n        !document.fullscreenElement &&\n        (show === true || show === undefined)\n      ) {\n        // eslint-disable-next-line no-unused-expressions\n        elementRef.current?.requestFullscreen?.();\n      }\n    },\n    [elementRef],\n  );\n\n  useEvent(document, 'fullscreenchange', onChange);\n  useEvent(document, 'fullscreenerror', onError);\n\n  return toggleFullscreen;\n};\n\nexport default useToggleFullscreen;\n","import { useCallback } from 'react';\nimport { ValueTargetEvent } from 'cb-toolset/dom';\n\nconst useHandleChangeNumber = (\n  ...handlers: readonly ((value: number) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { value } }: ValueTargetEvent<string>) =>\n      handlers.forEach(handler => handler?.(Number(value))),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeNumber;\n","import { useCallback } from 'react';\nimport { ValueTargetEvent } from 'cb-toolset/dom';\n\nconst useHandleChangeText = (\n  ...handlers: readonly ((text: string) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { value } }: ValueTargetEvent<string>) =>\n      handlers.forEach(handler => handler?.(String(value))),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeText;\n","import { DependencyList, useLayoutEffect } from 'react';\nimport { OmitFrom } from 'cb-toolset/object';\nimport { ValueFactory, getValueFromFactory } from 'cb-toolset/function';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useIntersectionObserverEffect = (\n  getTargets: () => Element[] | undefined | null,\n  callback: IntersectionObserverCallback,\n  options?: UseIntersectionObserverEffectOptions,\n  deps: DependencyList = [],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useLayoutEffect(() => {\n    const targets = getTargets();\n\n    if (!targets || !targets.length) return undefined;\n\n    const opts: IntersectionObserverInit | undefined = options && {\n      ...options,\n      root: getValueFromFactory(options.root),\n    };\n\n    const observer = new IntersectionObserver(\n      (entries, currentObserver) =>\n        callbackRef.current?.(entries, currentObserver),\n      opts,\n    );\n    targets.forEach(target => observer.observe(target));\n\n    return () => observer.disconnect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useIntersectionObserverEffect;\n\nexport interface UseIntersectionObserverEffectOptions\n  extends OmitFrom<IntersectionObserverInit, 'root'> {\n  root?: ValueFactory<Element | undefined | null>;\n}\n","import { RefObject, useRef } from 'react';\nimport useIntersectionObserverEffect, {\n  UseIntersectionObserverEffectOptions,\n} from './useIntersectionObserverEffect';\n\nconst isOptionsObject = (\n  o: unknown,\n): o is UseIntersectionObserverEffectOptions => o instanceof Object;\n\nconst useInfiniteScroll: UseInfiniteScroll = (\n  elementRef: RefObject<Element>,\n  loadMore: () => void | Promise<unknown>,\n  ...args: any[]\n) => {\n  const loadingRef = useRef<boolean>(false);\n  const loading: boolean | undefined =\n    typeof args[0] === 'boolean' ? args[0] : undefined;\n  const options:\n    | UseIntersectionObserverEffectOptions\n    | undefined = isOptionsObject(args[0])\n    ? args[0]\n    : isOptionsObject(args[1])\n    ? args[1]\n    : undefined;\n\n  useIntersectionObserverEffect(\n    () => elementRef.current && [elementRef.current],\n    async entries => {\n      if (\n        loading ||\n        loadingRef.current ||\n        entries.every(({ isIntersecting }) => !isIntersecting)\n      ) {\n        return;\n      }\n\n      loadingRef.current = true;\n\n      try {\n        await Promise.resolve(loadMore());\n      } catch {\n        // Do nothing\n      }\n\n      loadingRef.current = false;\n    },\n    options,\n  );\n};\n\nexport default useInfiniteScroll;\n\nexport interface UseInfiniteScroll {\n  (\n    elementRef: RefObject<Element>,\n    loadMore: () => Promise<unknown>,\n    options?: UseIntersectionObserverEffectOptions,\n  ): void;\n  (\n    elementRef: RefObject<Element>,\n    loadMore: VoidFunction,\n    loading: boolean,\n    options?: UseIntersectionObserverEffectOptions,\n  ): void;\n}\n","/**\n * References:\n * https://github.com/adambrgmn/hooks/blob/master/src/use-is-mounted/index.ts\n * https://github.com/hupe1980/react-is-mounted-hook/blob/master/src/use-is-mounted.tsx\n * https://github.com/streamich/react-use/blob/master/src/useRefMounted.ts\n */\n\nimport { useRef, useCallback } from 'react';\nimport useEffectOnce from './useEffectOnce';\n\nconst useIsMounted = () => {\n  const isMountedRef = useRef(false);\n\n  useEffectOnce(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  });\n\n  return useCallback(() => isMountedRef.current, []);\n};\n\nexport default useIsMounted;\n","/* eslint-disable no-param-reassign */\nimport { useRef, useCallback } from 'react';\nimport useIntersectionObserverEffect, {\n  UseIntersectionObserverEffectOptions,\n} from './useIntersectionObserverEffect';\n\nconst defaultGetSrc = (image: HTMLImageElement) => image.dataset.src;\n\nconst useLazyLoad = ({\n  getSrc = defaultGetSrc,\n  ...options\n}: UseLazyLoadOptions = {}) => {\n  const imageMapRef = useRef(new Map<HTMLImageElement, string>());\n\n  const register = useCallback(\n    (arg: string | HTMLImageElement) => {\n      if (typeof arg === 'string') {\n        const src = arg;\n\n        return (image: HTMLImageElement) => {\n          imageMapRef.current.set(image, src);\n        };\n      }\n\n      if (arg instanceof HTMLImageElement) {\n        const image = arg;\n        const src = getSrc(image);\n\n        if (src) {\n          imageMapRef.current.set(image, src);\n        }\n      }\n\n      return undefined;\n    },\n    [getSrc],\n  ) as UseLazyLoadRegister;\n\n  useIntersectionObserverEffect(\n    () => Array.from(imageMapRef.current.keys()),\n    (entries, currentObserver) =>\n      entries.forEach(({ isIntersecting, target }) => {\n        if (!isIntersecting || !(target instanceof HTMLImageElement)) return;\n\n        const src = imageMapRef.current.get(target) || getSrc(target);\n\n        if (src) {\n          target.src = src;\n        }\n\n        currentObserver.unobserve(target);\n      }),\n    options,\n  );\n\n  return register;\n};\n\nexport default useLazyLoad;\n\nexport interface UseLazyLoadOptions\n  extends UseIntersectionObserverEffectOptions {\n  getSrc?: (image: HTMLImageElement) => string | null | undefined;\n}\n\nexport interface UseLazyLoadRegister {\n  (image: HTMLImageElement): void;\n  (src: string): (image: HTMLImageElement) => void;\n}\n","import { isBrowser } from 'cb-toolset/dom';\nimport createResourceHook from '../creators/createResourceHook';\n\nconst useLink = createResourceHook<Partial<HTMLLinkElement>>(\n  'link',\n  ({ href }) =>\n    isBrowser() && !!href && !document.querySelector(`link[href=\"${href}\"]`),\n  element => document.head.appendChild(element),\n);\n\nexport default useLink;\n","/**\n * References:\n * https://material-ui.com/components/use-media-query/\n * https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/useMediaQuery/useMediaQuery.js\n * https://github.com/streamich/react-use/blob/master/src/useMedia.ts\n * https://github.com/jaredpalmer/the-platform/blob/master/src/useMedia.tsx\n * https://usehooks.com/useMedia/\n * https://github.com/ReactTraining/react-media\n * https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\n * https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList\n * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries\n * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n * https://gomakethings.com/a-better-way-to-test-breakpoints-with-vanilla-javascript/\n * https://github.com/akiran/json2mq\n */\n\nimport { useState, useEffect } from 'react';\nimport { pickFrom, PickFrom } from 'cb-toolset/object';\nimport { isBrowser } from 'cb-toolset/dom';\nimport { ValueFactory } from 'cb-toolset/function';\n\nconst getMediaResult = (mql: MediaQueryList): MediaResult =>\n  pickFrom(mql, 'matches', 'media');\n\nconst useMediaQuery = (\n  query: string,\n  initialState: ValueFactory<MediaResult> = { media: '', matches: false },\n) => {\n  const [result, setResult] = useState(\n    isBrowser() ? () => getMediaResult(window.matchMedia(query)) : initialState,\n  );\n\n  useEffect(() => {\n    const mql = window.matchMedia(query);\n    const onChange = (e: MediaQueryListEvent) => {\n      setResult(e);\n    };\n    setResult(getMediaResult(mql));\n    mql.addListener(onChange);\n    return () => mql.removeListener(onChange);\n  }, [query]);\n\n  return result;\n};\n\nexport default useMediaQuery;\n\nexport type MediaResult = PickFrom<MediaQueryList, 'matches' | 'media'>;\n","import useEvent from './useEvent';\n\nconst usePageVisibility = (callback: (state: VisibilityState) => void) =>\n  useEvent(document, 'visibilitychange', () =>\n    callback?.(document.visibilityState),\n  );\n\nexport default usePageVisibility;\n","/**\n * References:\n * https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n * https://github.com/Andarist/use-previous\n * https://github.com/dispix/react-pirate\n * https://github.com/imbhargav5/rooks/tree/dev/packages/previous\n * https://github.com/kitze/react-hanger\n * https://github.com/zakariaharti/react-hookedup\n * https://github.com/imbhargav5/rooks/blob/dev/packages/previous/src/usePrevious.ts\n */\n\nimport { useRef, useEffect } from 'react';\n\nconst defaultPredicate = () => true;\n\nconst usePrevious = <TValue>(\n  value: TValue,\n  predicate: (value: TValue) => boolean = defaultPredicate,\n) => {\n  const prevRef = useRef<TValue>();\n\n  useEffect(() => {\n    if (predicate(value)) prevRef.current = value;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  return prevRef.current;\n};\n\nexport default usePrevious;\n","import { sample } from 'cb-toolset/function';\nimport createRateLimitHook from '../creators/createRateLimitHook';\n\nconst useSample = createRateLimitHook(sample);\n\nexport default useSample;\n","import { sample } from 'cb-toolset/function';\nimport createRateLimitValueHook from '../creators/createRateLimitValueHook';\n\nconst useSampleValue = createRateLimitValueHook(sample);\n\nexport default useSampleValue;\n","import { isBrowser } from 'cb-toolset/dom';\nimport createResourceHook from '../creators/createResourceHook';\n\nconst useScript = createResourceHook<Partial<HTMLScriptElement>>(\n  'script',\n  ({ src }) =>\n    isBrowser() && !!src && !document.querySelector(`script[src=\"${src}\"]`),\n  element => document.body.appendChild(element),\n);\n\nexport default useScript;\n","import { useRef, useCallback, useState } from 'react';\nimport useIntersectionObserverEffect, {\n  UseIntersectionObserverEffectOptions,\n} from './useIntersectionObserverEffect';\n\nconst defaultGetId = <TElement extends Element>(element: TElement) =>\n  element?.getAttribute('id');\n\nconst isElement = <TElement extends Element>(o: unknown): o is TElement =>\n  o instanceof Element;\n\nconst useScrollSpy = <TElement extends Element = Element>({\n  getId = defaultGetId,\n  threshold = 1,\n  ...rest\n}: UseScrollSpyOptions<TElement> = {}) => {\n  const [id, setId] = useState<string>();\n  const elementMapRef = useRef(new Map<TElement, string>());\n  const intersectingElementsRef = useRef(new Set<TElement>());\n\n  const register = useCallback(\n    (arg: string | TElement) => {\n      if (typeof arg === 'string') {\n        const elementId = arg;\n\n        return (element: TElement) => {\n          elementMapRef.current.set(element, elementId);\n        };\n      }\n\n      if (isElement<TElement>(arg)) {\n        const element = arg;\n        const elementId = getId(element);\n\n        if (elementId) {\n          elementMapRef.current.set(element, elementId);\n        }\n      }\n\n      return undefined;\n    },\n    [getId],\n  ) as UseScrollSpyRegister<TElement>;\n\n  useIntersectionObserverEffect(\n    () => Array.from(elementMapRef.current.keys()),\n    entries => {\n      entries.forEach(({ intersectionRatio, target }) => {\n        if (intersectionRatio >= threshold) {\n          intersectingElementsRef.current.add(target as TElement);\n        } else {\n          intersectingElementsRef.current.delete(target as TElement);\n        }\n      });\n\n      if (!intersectingElementsRef.current.size) return;\n\n      const selectedElement = Array.from(\n        intersectingElementsRef.current,\n      ).reduce((prev, curr) =>\n        prev.getBoundingClientRect().top < curr.getBoundingClientRect().top\n          ? prev\n          : curr,\n      );\n\n      const newId =\n        elementMapRef.current.get(selectedElement) || getId(selectedElement);\n\n      if (typeof newId === 'string') {\n        setId(newId);\n      }\n    },\n    { ...rest, threshold },\n  );\n\n  return [id, register] as const;\n};\n\nexport default useScrollSpy;\n\nexport interface UseScrollSpyOptions<TElement>\n  extends UseIntersectionObserverEffectOptions {\n  getId?: (element: TElement) => string | null | undefined;\n  threshold?: number;\n}\n\nexport interface UseScrollSpyRegister<TElement extends Element> {\n  (element: TElement): void;\n  (id: string): (element: TElement) => void;\n}\n","import { throttle } from 'cb-toolset/function';\nimport createRateLimitHook from '../creators/createRateLimitHook';\n\nconst useThrottle = createRateLimitHook(throttle);\n\nexport default useThrottle;\n","import { throttle } from 'cb-toolset/function';\nimport createRateLimitValueHook from '../creators/createRateLimitValueHook';\n\nconst useThrottleValue = createRateLimitValueHook(throttle);\n\nexport default useThrottleValue;\n","/**\n * References:\n * https://github.com/kripod/react-hooks/blob/master/packages/state-hooks/src/useTimeline.ts\n */\n\nimport { useRef, useEffect } from 'react';\n\nconst defaultPredicate = () => true;\n\nconst useTimeline = <TValue>(\n  value: TValue,\n  revert = true,\n  predicate: (value: TValue) => boolean = defaultPredicate,\n) => {\n  const accumulateRef = useRef<TValue[]>([]);\n\n  useEffect(() => {\n    if (predicate(value)) {\n      accumulateRef.current = revert\n        ? [value, ...accumulateRef.current]\n        : [...accumulateRef.current, value];\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  return accumulateRef.current;\n};\n\nexport default useTimeline;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useUnmount.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useWillUnmount.js\n * https://github.com/imbhargav5/rooks/blob/dev/packages/will-unmount/src/useWillUnmount.ts\n */\n\nimport useEffectOnce from './useEffectOnce';\n\nconst useWillUnmount = (callback: VoidFunction) =>\n  useEffectOnce(() => callback);\n\nexport default useWillUnmount;\n","import { History } from 'history';\nimport useWindowBeforeUnload from '../hooks/useWindowBeforeUnload';\nimport createHistoryBlockHook from './createHistoryBlockHook';\n\nconst createBeforeLeaveHook = (history: History) => (\n  enabled = true,\n  message?: string,\n) => {\n  const useHistoryBlock = createHistoryBlockHook(history);\n  useHistoryBlock(() => (enabled ? message || false : undefined));\n  useWindowBeforeUnload(message, enabled);\n};\n\nexport default createBeforeLeaveHook;\n","/**\n * References:\n * https://github.com/ReactTraining/history/blob/master/docs/GettingStarted.md\n */\n\nimport { useEffect } from 'react';\nimport { History, LocationListener } from 'history';\nimport useUpdatedRef from '../hooks/useUpdatedRef';\n\nconst createHistoryListenHook = (history: History) => (\n  listener: LocationListener<unknown>,\n) => {\n  const listenerRef = useUpdatedRef(listener);\n\n  useEffect(() => {\n    const unlisten = history.listen((location, action) =>\n      listenerRef.current?.(location, action),\n    );\n    return () => unlisten();\n  }, [listenerRef]);\n};\n\nexport default createHistoryListenHook;\n","import { Context, useContext } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { createURLSearchObject } from 'cb-toolset/dom';\n\nconst createSearchParamsObjectHook = (\n  routerContext: Context<RouteComponentProps>,\n) => <TSearchObject>() => {\n  const searchString = useContext(routerContext).location.search;\n  return createURLSearchObject<TSearchObject>(searchString);\n};\n\nexport default createSearchParamsObjectHook;\n","import { DependencyList, useEffect } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useAnimationFrame = (\n  callback: FrameRequestCallback,\n  deps: DependencyList = [],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useEffect(() => {\n    const handle = requestAnimationFrame(time => callbackRef.current?.(time));\n\n    return () => cancelAnimationFrame(handle);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useAnimationFrame;\n","/* eslint-disable no-param-reassign */\nimport { useEffect, DependencyList } from 'react';\n\nconst useBase = (attrs: BaseAttributes, deps: DependencyList = []) =>\n  useEffect(() => {\n    const setBaseAttrs = (\n      baseElement: HTMLBaseElement,\n      baseAttrs: BaseAttributes,\n    ) => {\n      const { href, target } = baseAttrs;\n      const prevAttrs: BaseAttributes = {\n        href: baseElement.href,\n        target: baseElement.target,\n      };\n      if (href) baseElement.href = href;\n      if (target) baseElement.target = target;\n      return prevAttrs;\n    };\n\n    const base = document.querySelector('base');\n\n    if (base) {\n      const baseElement = base;\n      const prevAttrs = setBaseAttrs(baseElement, attrs);\n      return () => setBaseAttrs(baseElement, prevAttrs);\n    }\n\n    const baseElement = document.createElement('base');\n    setBaseAttrs(baseElement, attrs);\n    document.head.insertAdjacentElement('afterbegin', baseElement);\n    return () => baseElement.remove();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\nexport default useBase;\n\nexport interface BaseAttributes {\n  href?: string;\n  target?: string;\n}\n","import { DependencyList, useRef, useCallback } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useCallbackWithCleanup = <TArgs extends any[]>(\n  callback: (...args: TArgs) => void | VoidFunction,\n  deps: DependencyList = [],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n  const cleanupRef = useRef<void | VoidFunction>();\n\n  return useCallback((...args: TArgs) => {\n    if (cleanupRef.current) cleanupRef.current();\n    cleanupRef.current = callbackRef.current?.(...args);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useCallbackWithCleanup;\n","import { useState } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useHandleChangeCheck from './useHandleChangeCheck';\n\nconst useCheckInput = (initialValue: ValueFactory<boolean> = false) => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = useHandleChangeCheck(setValue);\n  return [value, setValue, handleChange] as const;\n};\n\nexport default useCheckInput;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useUpdateEffect.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useDidUpdate.js\n */\n\nimport { EffectCallback, DependencyList, useRef, useEffect } from 'react';\n\nconst useDidUpdate = (callback: EffectCallback, deps?: DependencyList) => {\n  const didMountRef = useRef(false);\n\n  useEffect(\n    didMountRef.current\n      ? callback\n      : () => {\n          didMountRef.current = true;\n        },\n    deps,\n  );\n};\n\nexport default useDidUpdate;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/c0574064ca/src/useFavicon.ts\n */\n\nimport useUpdatedLink from './useUpdatedLink';\n\nconst useFavicon = (href: string) =>\n  useUpdatedLink(\n    { href, rel: `shortcut icon`, type: `image/x-icon` },\n    `link[rel='shortcut icon']`,\n    [href],\n  );\n\nexport default useFavicon;\n","/**\n * References:\n * https://github.com/CharlesStover/use-force-update\n * https://reactjs.org/docs/hooks-faq.html#is-there-something-like-forceupdate\n */\n\nimport useTriggerUpdate from './useTriggerUpdate';\n\nconst useForceUpdate = () => useTriggerUpdate()[1];\n\nexport default useForceUpdate;\n","import { useState, RefObject } from 'react';\nimport useToggleFullscreen from './useToggleFullscreen';\nimport useCurryFunction from './useCurryFunction';\n\nconst useFullscreen = (elementRef: RefObject<Element>) => {\n  const [fullscreen, setFullscreen] = useState(false);\n  const isFullscreen = () =>\n    !!document.fullscreenElement &&\n    document.fullscreenElement === elementRef.current;\n  const handleChange = () => setFullscreen(isFullscreen());\n  const toggleFullscreen = useToggleFullscreen(elementRef, handleChange);\n  const enterFullscreen = useCurryFunction(toggleFullscreen, null, true);\n  const exitFullscreen = useCurryFunction(toggleFullscreen, null, false);\n  return [\n    fullscreen,\n    toggleFullscreen,\n    enterFullscreen,\n    exitFullscreen,\n  ] as const;\n};\n\nexport default useFullscreen;\n","import { useCallback } from 'react';\nimport { FilesTargetEvent } from 'cb-toolset/dom';\n\nconst useHandleChangeFile = (\n  ...handlers: readonly ((files: FileList | null) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { files } }: FilesTargetEvent) =>\n      handlers.forEach(handler => handler?.(files)),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeFile;\n","/**\n * References:\n * https://github.com/adambrgmn/hooks/blob/master/src/use-in-view/index.ts\n * https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n */\n\nimport { RefObject } from 'react';\nimport useIntersectionObserverEffect, {\n  UseIntersectionObserverEffectOptions,\n} from './useIntersectionObserverEffect';\n\nconst useIntersectionObserver = (\n  elementRef: RefObject<Element>,\n  callback: IntersectionObserverCallback,\n  options?: UseIntersectionObserverEffectOptions,\n) =>\n  useIntersectionObserverEffect(\n    () => elementRef.current && [elementRef.current],\n    callback,\n    options,\n    [options],\n  );\n\nexport default useIntersectionObserver;\n","/**\n * References:\n * https://github.com/dispix/react-pirate/blob/master/src/useInterval.js\n * https://github.com/donavon/use-interval\n */\n\nimport { DependencyList, useEffect } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useInterval = (\n  callback: VoidFunction | undefined | null,\n  {\n    period,\n    leading,\n    running,\n    deps = [period, leading, running],\n  }: UseIntervalSettings,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useEffect(() => {\n    let handle: NodeJS.Timeout;\n\n    if (running) {\n      // eslint-disable-next-line no-unused-expressions\n      if (leading) callbackRef.current?.();\n      handle = setInterval(() => callbackRef.current?.(), period);\n    }\n\n    return () => {\n      if (handle) clearInterval(handle);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useInterval;\n\nexport interface UseIntervalSettings {\n  deps?: DependencyList;\n  leading?: boolean;\n  period: number;\n  running?: boolean;\n}\n","/**\n * References:\n * https://github.com/imbhargav5/rooks/blob/dev/packages/shared/useMutationObserver.ts\n * https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n */\n\nimport { useLayoutEffect, RefObject } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useMutationObserver = <TNode extends Node>(\n  nodeRef: RefObject<TNode>,\n  callback: MutationCallback,\n  options?: MutationObserverInit,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useLayoutEffect(() => {\n    if (!nodeRef.current) return undefined;\n\n    const observer = new MutationObserver((mutation, currentObserver) =>\n      callbackRef.current?.(mutation, currentObserver),\n    );\n    observer.observe(nodeRef.current, options);\n\n    return () => observer.disconnect();\n  }, [callbackRef, nodeRef, options]);\n};\n\nexport default useMutationObserver;\n","import { useState } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useHandleChangeNumber from './useHandleChangeNumber';\n\nconst useNumberInput = (initialValue: ValueFactory<number> = 0) => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = useHandleChangeNumber(setValue);\n  return [value, setValue, handleChange] as const;\n};\n\nexport default useNumberInput;\n","/**\n * References:\n * https://usehooks.com/useOnClickOutside/\n * https://github.com/sandiiarov/use-events/blob/master/src/useClickOutside/index.tsx\n * https://github.com/Andarist/use-onclickoutside/blob/master/src/index.ts\n * https://github.com/streamich/react-use/blob/master/src/useClickAway.ts\n * https://github.com/imbhargav5/rooks/blob/dev/packages/outside-click/src/useOutsideClick.ts\n */\n\nimport { RefObject } from 'react';\nimport useEvent from './useEvent';\n\nconst useOnClickOutside = (\n  nodeRef: RefObject<Node>,\n  handleClickOutside: ClickHandler,\n) =>\n  useEvent(document, ['mousedown', 'touchstart'], e => {\n    if (\n      handleClickOutside &&\n      nodeRef.current &&\n      !nodeRef.current.contains(e.target as Node)\n    ) {\n      handleClickOutside(e);\n    }\n  });\n\nexport default useOnClickOutside;\n\nexport type ClickHandler = (e: TouchEvent | MouseEvent) => void;\n","import { useState } from 'react';\nimport usePageVisibility from './usePageVisibility';\n\nconst usePageVisibilityState = () => {\n  const [state, setState] = useState(document.visibilityState);\n  usePageVisibility(setState);\n  return state;\n};\n\nexport default usePageVisibilityState;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useAsyncFn.ts\n * https://github.com/adambrgmn/hooks/blob/master/src/use-promise/index.ts\n */\n\nimport { DependencyList, useState, useCallback } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useIsMounted from './useIsMounted';\nimport useCurrent from './useCurrent';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { AsyncState } from '../types/common';\n\nconst usePromiseCallback = <TArgs extends any[], TResult, TError = unknown>(\n  promiseFactory: (\n    ...args: TArgs\n  ) => Promise<TResult> | false | undefined | null,\n  deps: DependencyList = [],\n  initialState: ValueFactory<AsyncState<TResult, TError>> = PENDING_STATE,\n) => {\n  const isMounted = useIsMounted();\n  const [state, setState] = useState(initialState);\n  const currentPromise = useCurrent<\n    Promise<TResult> | false | undefined | null\n  >();\n\n  const callback = useCallback(\n    (...args: TArgs) => {\n      const promise = promiseFactory(...args);\n      currentPromise.set(promise);\n\n      if (!promise) {\n        setState(PENDING_STATE);\n        return;\n      }\n\n      setState(LOADING_STATE);\n\n      promise\n        .then(result => {\n          if (currentPromise.is(promise) && isMounted()) {\n            setState({ loading: false, result });\n          }\n        })\n        .catch(error => {\n          if (currentPromise.is(promise) && isMounted()) {\n            setState({ loading: false, error });\n          }\n        });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    deps,\n  );\n\n  return [state, callback] as const;\n};\n\nexport default usePromiseCallback;\n","import { RefObject, useLayoutEffect } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useResizeObserver = (\n  elementRef: RefObject<Element>,\n  callback: ResizeObserverCallback,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useLayoutEffect(() => {\n    if (!elementRef.current) return undefined;\n\n    const observer = new ResizeObserver(entries =>\n      callbackRef.current?.(entries),\n    );\n    observer.observe(elementRef.current);\n\n    return () => observer.disconnect();\n  }, [callbackRef, elementRef]);\n};\n\nexport default useResizeObserver;\n","import { useState } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useHandleChangeText from './useHandleChangeText';\n\nconst useTextInput = (initialValue: ValueFactory<string> = '') => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = useHandleChangeText(setValue);\n  return [value, setValue, handleChange] as const;\n};\n\nexport default useTextInput;\n","/**\n * References:\n * https://github.com/dispix/react-pirate/blob/master/src/useTimeout.js\n * https://github.com/imbhargav5/rooks/blob/master/packages/timeout/src/useTimeout.ts\n */\n\nimport { DependencyList, useEffect } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\n\nconst useTimeout = (\n  callback: VoidFunction,\n  ms: number,\n  deps: DependencyList = [ms],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useEffect(() => {\n    const handle = setTimeout(() => callbackRef.current?.(), ms);\n    return () => clearTimeout(handle);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useTimeout;\n","import { useRef, useCallback } from 'react';\nimport useUpdatedRef from './useUpdatedRef';\nimport useDidMount from './useDidMount';\n\nconst useTimeoutCallback = (callback: VoidFunction, ms: number) => {\n  const callbackRef = useUpdatedRef(callback);\n  const timeoutRef = useRef<TimeoutObject>();\n\n  useDidMount(() => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current.handle);\n      timeoutRef.current.resolve();\n    }\n  });\n\n  const timeoutCallback = useCallback(\n    () =>\n      new Promise<void>(resolve => {\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current.handle);\n          timeoutRef.current.resolve();\n        }\n        const handle = setTimeout(() => {\n          // eslint-disable-next-line no-unused-expressions\n          callbackRef.current?.();\n          resolve();\n        }, ms);\n        timeoutRef.current = { handle, resolve };\n      }),\n    [callbackRef, ms],\n  );\n\n  return timeoutCallback;\n};\n\nexport default useTimeoutCallback;\n\ninterface TimeoutObject {\n  handle: NodeJS.Timeout;\n  resolve: VoidFunction;\n}\n","/**\n * References:\n * https://github.com/withvoid/melting-pot/blob/master/src/hooks/useTitle.js\n * https://github.com/streamich/react-use/blob/master/src/useTitle.ts\n */\n\nimport { useRef, useEffect } from 'react';\nimport useWillUnmount from './useWillUnmount';\n\nconst useTitle = (title: string, options?: UseTitleOptions) => {\n  const titleRef = useRef(document.title);\n\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  useWillUnmount(() => {\n    if (options?.restoreOnUnmount) {\n      document.title = titleRef.current;\n    }\n  });\n};\n\nexport default useTitle;\n\nexport interface UseTitleOptions {\n  restoreOnUnmount?: boolean;\n}\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useToggle.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useToggle.js\n */\n\nimport { useState, useCallback } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useCurryFunction from './useCurryFunction';\n\nconst useToggle = (initialValue: ValueFactory<boolean> = false) => {\n  const [value, setValue] = useState(initialValue);\n  const toggle = useCallback(() => setValue(prevValue => !prevValue), []);\n  const setTrue = useCurryFunction(setValue, null, true);\n  const setFalse = useCurryFunction(setValue, null, false);\n  return [value, toggle, setTrue, setFalse, setValue] as const;\n};\n\nexport default useToggle;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useWindowScroll.ts\n */\n\nimport { useState } from 'react';\nimport useEvent from './useEvent';\nimport { getWindowScrollOffset } from '../utils/common';\n\nconst useWindowScrollOffset = () => {\n  const [scrollOffset, setScrollOffset] = useState(getWindowScrollOffset);\n  useEvent(window, 'scroll', () => setScrollOffset(getWindowScrollOffset()), {\n    capture: false,\n    passive: true,\n    usingAnimationFrame: true,\n  });\n  return scrollOffset;\n};\n\nexport default useWindowScrollOffset;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useWindowSize.ts\n * https://github.com/imbhargav5/rooks/blob/dev/packages/window-size/src/useWindowSize.ts\n * https://github.com/contiamo/operational-ui/blob/master/src/useWindowSize/index.ts\n */\n\nimport { useState } from 'react';\nimport useEvent from './useEvent';\nimport { getWindowSize } from '../utils/common';\n\nconst useWindowSize = () => {\n  const [size, setSize] = useState(getWindowSize);\n  useEvent(window, 'resize', () => setSize(getWindowSize()));\n  return size;\n};\n\nexport default useWindowSize;\n","import { useRef, useState, useCallback } from 'react';\nimport { ValueFactory } from 'cb-toolset/function';\nimport useWillUnmount from './useWillUnmount';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { AsyncState } from '../types/common';\n\nconst useWorkerCallback = <\n  TMessage = unknown,\n  TResult = unknown,\n  TError = unknown\n>(\n  workerUrl: string,\n  options?: WorkerOptions,\n  initialState: ValueFactory<AsyncState<TResult, TError>> = PENDING_STATE,\n) => {\n  const [state, setState] = useState(initialState);\n  const workerRef = useRef<Worker>();\n\n  const callback = useCallback(\n    (message: TMessage, opts?: PostMessageOptions) => {\n      if (workerRef.current) {\n        workerRef.current.terminate();\n      }\n\n      const worker = new Worker(workerUrl, options);\n      worker.addEventListener('message', e =>\n        setState({ loading: false, result: e.data }),\n      );\n      worker.addEventListener('error', e =>\n        setState({ loading: false, error: e.error }),\n      );\n      worker.postMessage(message, opts);\n      setState(LOADING_STATE);\n      workerRef.current = worker;\n    },\n    [options, workerUrl],\n  );\n\n  useWillUnmount(() => {\n    if (workerRef.current) workerRef.current.terminate();\n  });\n\n  return [state, callback] as const;\n};\n\nexport default useWorkerCallback;\n"],"names":["useUpdatedRef","value","deps","ref","useRef","useLayoutEffect","current","checkAndInvokeEventListener","listener","event","selectors","target","Object","matches","useEvent","element","eventNames","capture","once","passive","usingAnimationFrame","enabled","listenerRef","animationFrameRef","useEffect","eventTarget","Function","getEventTarget","eventListener","e","cancelAnimationFrame","requestAnimationFrame","eventNameList","Array","isArray","forEach","eventName","addEventListener","removeEventListener","useWindowBeforeUnload","message","window","preventDefault","returnValue","createHistoryBlockHook","history","handler","handlerRef","unblock","block","location","action","PENDING_STATE","loading","LOADING_STATE","usePromise","promiseFactory","initialState","cleanup","useState","state","setState","isCancelled","promise","then","result","error","FetchError","statusText","status","_this","Error","createFetchHook","fetchFn","getResult","input","init","abortControllerRef","abortController","AbortController","signal","res","ok","_abortControllerRef$c","abort","getWindowScrollOffset","isBrowser","x","scrollX","y","scrollY","getWindowSize","innerWidth","innerHeight","outerWidth","outerHeight","persistEvent","o","nativeEvent","Event","isSyntheticEvent","persist","createRateLimitHook","rateLimit","func","wait","options","funcRef","rateLimitedFuncRef","_rateLimitedFuncRef$c","cancel","useCallback","args","createRateLimitValueHook","setValue","createResourceHook","tagName","isValid","insert","attrs","onLoad","onError","onLoadRef","onErrorRef","id","document","querySelector","createElement","assign","handleLoad","handleError","reducer","type","payload","filter","useAudit","audit","useAuditValue","useHandleChangeCheck","handlers","checked","Boolean","useCurrent","initialValue","set","get","is","useCurryFunction","fn","thisArg","apply","useDebounce","debounce","useDebounceValue","useEffectOnce","effect","useDidMount","callback","useUpdatedLink","selector","selectorRef","linkSelector","link","HTMLLinkElement","head","appendChild","useFetch","fetch","json","useFetchArrayBuffer","arrayBuffer","useFetchBlob","blob","useFetchFormData","formData","useFetchStream","Promise","resolve","body","useFetchText","text","useTriggerUpdate","useReducer","createUniqueObject","useToggleFullscreen","elementRef","onChange","toggleFullscreen","show","fullscreenElement","undefined","exitFullscreen","requestFullscreen","useHandleChangeNumber","Number","useHandleChangeText","String","useIntersectionObserverEffect","getTargets","callbackRef","targets","length","opts","root","getValueFromFactory","observer","IntersectionObserver","entries","currentObserver","observe","disconnect","isOptionsObject","useIsMounted","isMountedRef","defaultGetSrc","image","dataset","src","useLink","href","getMediaResult","mql","pickFrom","usePageVisibility","visibilityState","defaultPredicate","useSample","sample","useSampleValue","useScript","defaultGetId","getAttribute","useThrottle","throttle","useThrottleValue","useWillUnmount","useHistoryBlock","unlisten","listen","routerContext","searchString","useContext","search","createURLSearchObject","handle","time","dispatch","item","predicate","setBaseAttrs","baseElement","baseAttrs","prevAttrs","base","insertAdjacentElement","remove","cleanupRef","didMountRef","rel","fullscreen","setFullscreen","files","loadMore","loadingRef","every","isIntersecting","period","leading","running","setInterval","clearInterval","getSrc","imageMapRef","Map","register","arg","HTMLImageElement","from","keys","unobserve","query","media","matchMedia","setResult","addListener","removeListener","nodeRef","MutationObserver","mutation","handleClickOutside","contains","prevRef","isMounted","currentPromise","ResizeObserver","getId","threshold","rest","setId","elementMapRef","intersectingElementsRef","Set","elementId","Element","intersectionRatio","add","size","selectedElement","reduce","prev","curr","getBoundingClientRect","top","newId","revert","accumulateRef","ms","setTimeout","clearTimeout","timeoutRef","title","titleRef","restoreOnUnmount","prevValue","scrollOffset","setScrollOffset","setSize","workerUrl","workerRef","terminate","worker","Worker","data","postMessage"],"mappings":"mHAEMA,EAAgB,SAASC,EAAeC,GAC5C,IAAMC,EAAMC,SAAOH,GAOnB,OALAI,kBAAgB,WACdF,EAAIG,QAAUL,GAEbC,GAEIC,GCOHI,EAA8B,SAClCC,EACAC,EACAC,GANgB,IAACC,EAQZH,KAIHE,IAZeC,EAaHF,EAAME,kBAZFC,QAAU,YAAaD,GAYTF,EAAME,OAAOE,QAAQH,KAIrDF,EAASC,IAGLK,EAAqB,SACzBC,EACAC,EACAR,sBAQqB,KANnBS,IAAAA,QACAC,IAAAA,KACAC,IAAAA,QACAT,IAAAA,UACAU,IAAAA,wBACAC,QAAAA,gBAGIC,EAActB,EAAcQ,GAC5Be,EAAoBnB,SAAO,GAEjCoB,YAAU,WACR,GAAKH,EAAL,CAIA,IAAMI,EA5Ca,SAAWV,UAChCA,aAAmBW,SAAWX,IAAYA,EA2CpBY,CAAeZ,GACnC,GAAKU,EAAL,CAIA,IAAMG,EAAgB,SAACC,GACjBT,GACFU,qBAAqBP,EAAkBjB,SACvCiB,EAAkBjB,QAAUyB,sBAAsB,kBAChDxB,EAA4Be,EAAYhB,QAASuB,EAAGnB,MAGtDH,EAA4Be,EAAYhB,QAASuB,EAAGnB,IAIlDsB,EAAgBC,MAAMC,QAAQlB,GAAcA,EAAa,CAACA,GAUhE,OARAgB,EAAcG,QAAQ,SAAAC,UACpBX,EAAYY,iBAAiBD,EAAWR,EAAe,CACrDX,QAAAA,EACAC,KAAAA,EACAC,QAAAA,iBAKEC,GAAuBG,EAAkBjB,SAC3CwB,qBAAqBP,EAAkBjB,SAEzC0B,EAAcG,QAAQ,SAAAC,UACpBX,EAAYa,oBAAoBF,EAAWR,EAAe,CAAEX,QAAAA,WAKhEF,EACAE,EACAC,EACAC,EACAT,EACAU,EACAC,UAEGL,KC5FDuB,EAAwB,SAACC,EAAkBnB,mBAAAA,IAAAA,GAAU,GACzDP,EACE2B,OACA,eACA,SAAAZ,GAGE,OAFAA,EAAEa,iBACEF,IAASX,EAAEc,YAAcH,GACtBA,GAET,CAAEnB,QAAAA,KCRAuB,EAAyB,SAACC,mBAC9BC,GAEA,IAAMC,EAAa/C,EAAc8C,GAEjCtB,YAAU,WACR,IAAMwB,EAAUH,EAAQI,MAAM,SAACC,EAAUC,gBACvCJ,EAAWzC,eAAXyC,EAAWzC,QAAU4C,EAAUC,KAEjC,yBAAaH,MACZ,CAACD,m9CChBOK,EAAsC,CAAEC,SAAS,GACjDC,EAAsC,CAAED,SAAS,GCUxDE,EAAa,SACjBC,EACAtD,EACAuD,EACAC,YAFAxD,IAAAA,EAAuB,aACvBuD,IAAAA,EAA0DL,SAGhCO,WAASF,GAA5BG,OAAOC,OA4Bd,OA1BArC,YAAU,WACR,IAAIsC,GAAc,EACZC,EAAUP,IAEhB,GAAKO,EAeL,OAVAF,EAASP,GAETS,EACGC,KAAK,SAAAC,GACCH,GAAaD,EAAS,CAAER,SAAS,EAAOY,OAAAA,YAExC,SAAAC,GACAJ,GAAaD,EAAS,CAAER,SAAS,EAAOa,MAAAA,iBAI/CJ,GAAc,QACdJ,GAAAA,KAhBAG,EAAST,IAmBVlD,GAEI0D,GC/CYO,sBACnB,WAAYC,EAA6BC,gBACvCC,cAAMF,GAAc,6BADmBC,uGADHE,QCiBlCC,EAAkB,SACtBC,EACAC,mBAEAC,EACAC,EACA1E,EACAuD,GAEA,IAAMoB,EAAqBzE,WAE3B,OAAOmD,iBAEH,IAAMuB,EAAkB,IAAIC,uBAC5BF,EAAmBvE,QAAUwE,kBACXL,EAAQE,SACrBC,OACHI,OAAQF,EAAgBE,yBAFpBC,qCAQN,UAAUd,EAAWc,EAAIb,WAAYa,EAAIZ,4BAJrCY,EAAIC,0BACgBR,EAAUO,kBAA1BhB,cACCA,yCAVI,oCAcf/D,EACAuD,EACA,iCAAMoB,EAAmBvE,gBAAnB6E,EAA4BC,YCtCzBC,EAAwB,kBACnCC,cAAc,CAAEC,EAAG9C,OAAO+C,QAASC,EAAGhD,OAAOiD,SAAY,IAE9CC,EAAgB,kBAC3BL,cACI,CACEM,WAAYnD,OAAOmD,WACnBC,YAAapD,OAAOoD,YACpBC,WAAYrD,OAAOqD,WACnBC,YAAatD,OAAOsD,aAEtB,IAEOC,EAAe,SAACC,UAhBG,SAACA,UAC/BA,aAAarF,QAAUqF,EAAEC,uBAAuBC,MAeNC,CAAiBH,IAAMA,EAAEI,WCT/DC,EAAsB,SAC1BC,mBAEAC,EACAC,EACAC,GAEA,IAAMC,EAAU3G,EAAcwG,GACxBI,EAAqBxG,SAAOmG,EAAUC,EAAMC,EAAMC,IAYxD,OAVAlF,YAAU,WAOR,OANAoF,EAAmBtG,QAAUiG,EAC3B,kBAAaI,EAAQrG,cAARqG,6BACbF,EACAC,oCAGWE,EAAmBtG,gBAAnBuG,EAA4BC,WACxC,CAACH,EAASD,EAASD,IAEfM,cAAqD,eAAIC,2BAE9D,OADAA,EAAK7E,QAAQ6D,GACNY,EAAmBtG,cAAnBsG,EAA8BI,IACpC,MC7BCC,EAA2B,SAC/BV,mBAEAC,EACAQ,EACAP,EACAC,SAE0B/C,aAAnB1D,OAAOiH,OACRP,EAAU3G,EAAcwG,GACxBI,EAAqBxG,SAAOmG,EAAUC,EAAMC,EAAMC,IAqBxD,OAnBAlF,YAAU,WAWR,OAVAoF,EAAmBtG,QAAUiG,EAC3B,WACE,IAAMtC,EAAS0C,EAAQrG,cAARqG,4BAEf,OADAO,EAASjD,GACFA,GAETwC,EACAC,oCAGWE,EAAmBtG,gBAAnBuG,EAA4BC,WACxC,CAACH,EAASD,EAASD,IAEtBjF,YAAU,WACRoF,EAAmBtG,cAAnBsG,EAA8BI,IAE7BA,GAEI/G,ICxBHkH,EAAqB,SACzBC,EACAC,EACAC,mBAEAC,EACAC,EACAC,EACAhE,YAAAA,IAAAA,EAAyCL,SAEfO,WAASF,GAA5BG,OAAOC,OACR6D,EAAY1H,EAAcwH,GAC1BG,EAAa3H,EAAcyH,GAqCjC,OAnCAjG,YAAU,WACR,GAAK6F,EAAQE,GAAb,CAKA,IAAMxG,EAAYwG,EAAMK,IACtBC,SAASC,cAAiBV,MAAWG,EAAMK,KAC3CC,SAASE,cAAcX,GAEzBxG,OAAOoH,OAAOjH,EAASwG,GAEvB,IAAMU,EAAa,SAACpG,GAClBgC,EAAST,SACTsE,EAAUpH,SAAVoH,EAAUpH,QAAUuB,IAGhBqG,EAAc,SAACrG,GACnBgC,EAAS,CAAER,SAAS,EAAOa,MAAOrC,EAAEqC,cACpCyD,EAAWrH,SAAXqH,EAAWrH,QAAUuB,IASvB,OANAd,EAAQsB,iBAAiB,OAAQ4F,GAAY,GAC7ClH,EAAQsB,iBAAiB,QAAS6F,GAAa,GAE/CrE,EAASP,GACTgE,EAAOvG,cAGLA,EAAQuB,oBAAoB,OAAQ2F,GAAY,GAChDlH,EAAQuB,oBAAoB,QAAS4F,GAAa,IA5BlDrE,EAAST,IA+BV,IAEIQ,IC1DHuE,EAAU,SACdvE,EACAT,GAEA,OAAQA,EAAOiF,MACb,IAAK,SACH,gBAAWxE,GAAOT,EAAOkF,UAE3B,IAAK,UACH,OAAQlF,EAAOkF,gBAAYzE,GAE7B,IAAK,SACH,OAAOA,EAAM0E,OAAOnF,EAAOkF,SAE7B,QACE,OAAOzE,ICdP2E,EAAWjC,EAAoBkC,SCA/BC,EAAgBxB,EAAyBuB,SCAzCE,EAAuB,eACxBC,kCAEH5B,cACE,gBAAa6B,IAAVjI,OAAUiI,eACXD,EAASxG,QAAQ,SAAAW,gBAAWA,SAAAA,EAAU+F,QAAQD,OAEhDD,ICPEG,EAAa,SAASC,GAC1B,IAAM5I,EAAMC,SAAO2I,GAEnB,MAAO,CACLC,IAAK,SAAC/I,GACJE,EAAIG,QAAUL,GAEhBgJ,IAAK,kBAAM9I,EAAIG,SACf4I,GAAI,SAACjJ,UAAkBE,EAAIG,UAAYL,KCTrCkJ,EAAqC,SACzCC,EACAC,YAAAA,IAAAA,EAAe,UACZrC,oCAEHD,cACE,wBAAwBqC,SAAAA,EAAIE,MAAMD,YAAarC,+BAE9CoC,UAAOpC,KCPNuC,EAAcjD,EAAoBkD,YCAlCC,EAAmBxC,EAAyBuC,YCI5CE,EAAgB,SAACC,UAA2BnI,YAAUmI,EAAQ,KCE9DC,EAAc,SAACC,UAA2BH,EAAcG,ICDxDC,EAAiB,SACrBvC,EACAwC,EACA7J,YAAAA,IAAAA,EAAuB,IAEvB,IAAM8J,EAAchK,EAAc+J,GAElCvI,YAAU,WACR,IAAMyI,EAAeD,EAAY1J,QAC3B4J,GACqB,mBAAjBD,EACJA,IACApC,SAASC,cAAcmC,KAC3BpC,SAASE,cAAc,QAErBmC,aAAgBC,kBAClBvJ,OAAOoH,OAAOkC,EAAM3C,GACpBM,SAASuC,KAAKC,YAAYH,KAG3BhK,IC1BCoK,EAAW9F,EAAgB+F,MAAO,SAAAtF,UAAOA,EAAIuF,SCA7CC,EAAsBjG,EAAgB+F,MAAO,SAAAtF,UAAOA,EAAIyF,gBCAxDC,EAAenG,EAAgB+F,MAAO,SAAAtF,UAAOA,EAAI2F,SCAjDC,EAAmBrG,EAAgB+F,MAAO,SAAAtF,UAAOA,EAAI6F,aCArDC,EAAiBvG,EAAgB+F,MAAO,SAAAtF,UAAO+F,QAAQC,QAAQhG,EAAIiG,QCAnEC,EAAe3G,EAAgB+F,MAAO,SAAAtF,UAAOA,EAAImG,SCCjDC,EAAmB,kBACvBC,aAAWC,qBAAoBA,yBCK3BC,EAAsB,SAC1BC,EACAC,EACAjE,YADAiE,IAAAA,EAAiC,eACjCjE,IAAAA,EAAgC,MAEhC,IAAMkE,EAAmB5E,cACvB,SAAC6E,UAEG/D,SAASgE,oBACC,IAATD,QAA2BE,IAATF,GAEnB/D,SAASkE,iBAIRlE,SAASgE,oBACA,IAATD,QAA0BE,IAATF,YAGlBH,EAAWnL,kBAAS0L,qBAAAA,qBAGxB,CAACP,IAMH,OAHA3K,EAAS+G,SAAU,mBAAoB6D,GACvC5K,EAAS+G,SAAU,kBAAmBJ,GAE/BkE,GClCHM,EAAwB,eACzBtD,kCAEH5B,cACE,gBAAa9G,IAAVU,OAAUV,aACX0I,EAASxG,QAAQ,SAAAW,gBAAWA,SAAAA,EAAUoJ,OAAOjM,OAE/C0I,ICPEwD,EAAsB,eACvBxD,kCAEH5B,cACE,gBAAa9G,IAAVU,OAAUV,aACX0I,EAASxG,QAAQ,SAAAW,gBAAWA,SAAAA,EAAUsJ,OAAOnM,OAE/C0I,ICLE0D,EAAgC,SACpCC,EACAzC,EACAnD,EACAxG,YAAAA,IAAAA,EAAuB,IAEvB,IAAMqM,EAAcvM,EAAc6J,GAElCxJ,kBAAgB,WACd,IAAMmM,EAAUF,IAEhB,GAAKE,GAAYA,EAAQC,OAAzB,CAEA,IAAMC,EAA6ChG,UAC9CA,OACHiG,KAAMC,sBAAoBlG,EAAQiG,QAG9BE,EAAW,IAAIC,qBACnB,SAACC,EAASC,gBACRT,EAAYjM,eAAZiM,EAAYjM,QAAUyM,EAASC,IACjCN,GAIF,OAFAF,EAAQrK,QAAQ,SAAAxB,UAAUkM,EAASI,QAAQtM,uBAE9BkM,EAASK,gBAErBhN,2FC3BL,IAAMiN,EAAkB,SACtBlH,UAC8CA,aAAarF,QCGvDwM,EAAe,WACnB,IAAMC,EAAejN,UAAO,GAS5B,OAPAsJ,EAAc,WAEZ,OADA2D,EAAa/M,SAAU,aAErB+M,EAAa/M,SAAU,KAIpByG,cAAY,kBAAMsG,EAAa/M,SAAS,KCd3CgN,EAAgB,SAACC,UAA4BA,EAAMC,QAAQC,KCH3DC,EAAUvG,EACd,OACA,gBAAGwG,IAAAA,YACDrI,iBAAiBqI,IAAS9F,SAASC,4BAA4B6F,SACjE,SAAA5M,UAAW8G,SAASuC,KAAKC,YAAYtJ,KCcjC6M,GAAiB,SAACC,UACtBC,WAASD,EAAK,UAAW,UCpBrBE,GAAoB,SAAClE,UACzB/I,EAAS+G,SAAU,mBAAoB,wBACrCgC,SAAAA,EAAWhC,SAASmG,oBCSlBC,GAAmB,qBCVnBC,GAAY5H,EAAoB6H,UCAhCC,GAAiBnH,EAAyBkH,UCA1CE,GAAYlH,EAChB,SACA,gBAAGsG,IAAAA,WACDnI,iBAAiBmI,IAAQ5F,SAASC,6BAA6B2F,SACjE,SAAA1M,UAAW8G,SAASqD,KAAKb,YAAYtJ,KCFjCuN,GAAe,SAA2BvN,gBAC9CA,SAAAA,EAASwN,aAAa,OCHlBC,GAAclI,EAAoBmI,YCAlCC,GAAmBzH,EAAyBwH,YCI5CR,GAAmB,qBCEnBU,GAAiB,SAAC9E,UACtBH,EAAc,kBAAMG,mCCNQ,SAAChH,mBAC7BxB,EACAmB,YADAnB,IAAAA,GAAU,GAGcuB,EAAuBC,EAC/C+L,CAAgB,kBAAOvN,EAAUmB,IAAW,OAAQsJ,IACpDvJ,EAAsBC,EAASnB,gGCDD,SAACwB,mBAC/BrC,GAEA,IAAMc,EAActB,EAAcQ,GAElCgB,YAAU,WACR,IAAMqN,EAAWhM,EAAQiM,OAAO,SAAC5L,EAAUC,gBACzC7B,EAAYhB,eAAZgB,EAAYhB,QAAU4C,EAAUC,KAElC,yBAAa0L,MACZ,CAACvN,yICf+B,SACnCyN,qBAEA,IAAMC,EAAeC,aAAWF,GAAe7L,SAASgM,OACxD,OAAOC,wBAAqCH,+BCLpB,SACxBnF,EACA3J,YAAAA,IAAAA,EAAuB,IAEvB,IAAMqM,EAAcvM,EAAc6J,GAElCrI,YAAU,WACR,IAAM4N,EAASrN,sBAAsB,SAAAsN,gBAAQ9C,EAAYjM,eAAZiM,EAAYjM,QAAU+O,KAEnE,yBAAavN,qBAAqBsN,KAEjClP,qBxCOY,SAAS6I,YAAAA,IAAAA,EAAkC,UAChCuC,aAExBnD,EAASY,GAFGuG,OAoBd,MAAO,MAhBQvI,cACb,SAACwI,UAAiBD,EAAS,CAAElH,KAAM,SAAUC,QAASkH,KACtD,CAACD,IAGavI,cACd,SAACwI,UAAiBD,EAAS,CAAElH,KAAM,UAAWC,QAASkH,KACvD,CAACD,IAGYvI,cACb,SAACyI,UACCF,EAAS,CAAElH,KAAM,SAAUC,QAASmH,KACtC,CAACF,iEyCpCW,SAAC/H,EAAuBrH,mBAAAA,IAAAA,EAAuB,IAC7DsB,YAAU,WACR,IAAMiO,EAAe,SACnBC,EACAC,OAEQhC,EAAiBgC,EAAjBhC,KAAMhN,EAAWgP,EAAXhP,OACRiP,EAA4B,CAChCjC,KAAM+B,EAAY/B,KAClBhN,OAAQ+O,EAAY/O,QAItB,OAFIgN,IAAM+B,EAAY/B,KAAOA,GACzBhN,IAAQ+O,EAAY/O,OAASA,GAC1BiP,GAGHC,EAAOhI,SAASC,cAAc,QAEpC,GAAI+H,EAAM,CACR,IAAMH,EAAcG,EACdD,EAAYH,EAAaC,EAAanI,GAC5C,yBAAakI,EAAaC,EAAaE,IAGzC,IAAMF,EAAc7H,SAASE,cAAc,QAG3C,OAFA0H,EAAaC,EAAanI,GAC1BM,SAASuC,KAAK0F,sBAAsB,aAAcJ,qBACrCA,EAAYK,WAExB7P,mCC7B0B,SAC7B2J,EACA3J,YAAAA,IAAAA,EAAuB,IAEvB,IAAMqM,EAAcvM,EAAc6J,GAC5BmG,EAAa5P,WAEnB,OAAO2G,cAAY,WACbiJ,EAAW1P,SAAS0P,EAAW1P,UACnC0P,EAAW1P,cAAUiM,EAAYjM,eAAZiM,EAAYjM,cAAZiM,6BAEpBrM,0BCViB,SAAC6I,YAAAA,IAAAA,GAAsC,SACjCpF,WAASoF,GAArB7B,OAEd,MAAO,MAAQA,EADMwB,EAAqBxB,iJCEvB,SAAC2C,EAA0B3J,GAC9C,IAAM+P,EAAc7P,UAAO,GAE3BoB,YACEyO,EAAY3P,QACRuJ,EACA,WACEoG,EAAY3P,SAAU,GAE5BJ,kECVe,SAACyN,UAClB7D,EACE,CAAE6D,KAAAA,EAAMuC,oBAAsB9H,iDAE9B,CAACuF,+KCHkB,kBAAMtC,IAAmB,0BCJ1B,SAACI,SACe9H,YAAS,GAAtCwM,OAAYC,OAKbzE,EAAmBH,EAAoBC,EADxB,kBAAM2E,IAFvBvI,SAASgE,mBACXhE,SAASgE,oBAAsBJ,EAAWnL,WAK5C,MAAO,CACL6P,EACAxE,EAJsBxC,EAAiBwC,EAAkB,MAAM,GAC1CxC,EAAiBwC,EAAkB,MAAM,gECTtC,eACvBhD,kCAEH5B,cACE,gBAAasJ,IAAV1P,OAAU0P,aACX1H,EAASxG,QAAQ,SAAAW,gBAAWA,SAAAA,EAAUuN,MAExC1H,4F1BDyC,SAC3C8C,EACA6E,OACGtJ,6BAEGuJ,EAAanQ,UAAgB,GAC7BiD,EACe,kBAAZ2D,EAAK,GAAmBA,EAAK,QAAK8E,EACrCpF,EAEUyG,EAAgBnG,EAAK,IACjCA,EAAK,GACLmG,EAAgBnG,EAAK,IACrBA,EAAK,QACL8E,EAEJO,EACE,kBAAMZ,EAAWnL,SAAW,CAACmL,EAAWnL,mBAClCyM,wBAiBJwD,EAAWjQ,SAAU,GAhBrB,GACE+C,GACAkN,EAAWjQ,SACXyM,EAAQyD,MAAM,qBAAGC,iBAEjB,yBAGFF,EAAWjQ,SAAU,4CAGb0K,QAAQC,QAAQqF,wFAdC,oCAqB3B5J,oC2BnC4B,SAC9B+E,EACA5B,EACAnD,UAEA2F,EACE,kBAAMZ,EAAWnL,SAAW,CAACmL,EAAWnL,UACxCuJ,EACAnD,EACA,CAACA,iECXe,SAClBmD,SAEE6G,IAAAA,OACAC,IAAAA,QACAC,IAAAA,YACA1Q,KAAAA,aAAO,CAACwQ,EAAQC,EAASC,KAGrBrE,EAAcvM,EAAc6J,GAElCrI,YAAU,WACR,IAAI4N,EAQJ,OANIwB,IAEED,UAASpE,EAAYjM,SAAZiM,EAAYjM,WACzB8O,EAASyB,YAAY,wBAAMtE,EAAYjM,eAAZiM,EAAYjM,WAAaoQ,eAIhDtB,GAAQ0B,cAAc1B,KAG3BlP,+C1BzBe,6BAGI,SAFtB6Q,OAAAA,aAASzD,IACN5G,kBAEGsK,EAAc5Q,SAAO,IAAI6Q,KAEzBC,EAAWnK,cACf,SAACoK,GACC,GAAmB,iBAARA,EAAkB,CAC3B,IAAM1D,EAAM0D,EAEZ,gBAAQ5D,GACNyD,EAAY1Q,QAAQ0I,IAAIuE,EAAOE,IAInC,GAAI0D,aAAeC,iBAAkB,CACnC,IAAM7D,EAAQ4D,EACR1D,EAAMsD,EAAOxD,GAEfE,GACFuD,EAAY1Q,QAAQ0I,IAAIuE,EAAOE,KAMrC,CAACsD,IAoBH,OAjBA1E,EACE,kBAAMpK,MAAMoP,KAAKL,EAAY1Q,QAAQgR,SACrC,SAACvE,EAASC,UACRD,EAAQ5K,QAAQ,gBAAmBxB,IAAAA,OACjC,KADiB8P,gBACQ9P,aAAkByQ,iBAA3C,CAEA,IAAM3D,EAAMuD,EAAY1Q,QAAQ2I,IAAItI,IAAWoQ,EAAOpQ,GAElD8M,IACF9M,EAAO8M,IAAMA,GAGfT,EAAgBuE,UAAU5Q,OAE9B+F,GAGKwK,2CE/Ba,SACpBM,EACA/N,YAAAA,IAAAA,EAA0C,CAAEgO,MAAO,GAAI5Q,SAAS,UAEpC8C,WAC1B2B,cAAc,kBAAMsI,GAAenL,OAAOiP,WAAWF,KAAU/N,GAD1DQ,OAAQ0N,OAcf,OAVAnQ,YAAU,WACR,IAAMqM,EAAMpL,OAAOiP,WAAWF,GACxB9F,EAAW,SAAC7J,GAChB8P,EAAU9P,IAIZ,OAFA8P,EAAU/D,GAAeC,IACzBA,EAAI+D,YAAYlG,qBACHmC,EAAIgE,eAAenG,KAC/B,CAAC8F,IAEGvN,+ByBjCmB,SAC1B6N,EACAjI,EACAnD,GAEA,IAAM6F,EAAcvM,EAAc6J,GAElCxJ,kBAAgB,WACd,GAAKyR,EAAQxR,QAAb,CAEA,IAAMuM,EAAW,IAAIkF,iBAAiB,SAACC,EAAUhF,gBAC/CT,EAAYjM,eAAZiM,EAAYjM,QAAU0R,EAAUhF,KAIlC,OAFAH,EAASI,QAAQ6E,EAAQxR,QAASoG,qBAErBmG,EAASK,gBACrB,CAACX,EAAauF,EAASpL,4BCrBL,SAACqC,YAAAA,IAAAA,EAAqC,SACjCpF,WAASoF,GAArB7B,OAEd,MAAO,MAAQA,EADM+E,EAAsB/E,+BCMnB,SACxB4K,EACAG,UAEAnR,EAAS+G,SAAU,CAAC,YAAa,cAAe,SAAAhG,GAE5CoQ,GACAH,EAAQxR,UACPwR,EAAQxR,QAAQ4R,SAASrQ,EAAElB,SAE5BsR,EAAmBpQ,kECnBM,iBACH8B,WAASkE,SAASmG,iBAArCpK,OAEP,OADAmK,SACOnK,uB1BSW,SAClB3D,EACAuP,YAAAA,IAAAA,EAAwCvB,IAExC,IAAMkE,EAAU/R,WAOhB,OALAoB,YAAU,WACJgO,EAAUvP,KAAQkS,EAAQ7R,QAAUL,IAEvC,CAACA,IAEGkS,EAAQ7R,yD2BbU,SACzBkD,EAGAtD,EACAuD,YADAvD,IAAAA,EAAuB,aACvBuD,IAAAA,EAA0DL,GAE1D,IAAMgP,EAAYhF,MACQzJ,WAASF,GAA5BG,OAAOC,OACRwO,EAAiBvJ,IAgCvB,MAAO,CAAClF,EA5BSmD,cACf,WACE,IAAMhD,EAAUP,yCAChB6O,EAAerJ,IAAIjF,GAEdA,GAKLF,EAASP,GAETS,EACGC,KAAK,SAAAC,GACAoO,EAAenJ,GAAGnF,IAAYqO,KAChCvO,EAAS,CAAER,SAAS,EAAOY,OAAAA,YAGxB,SAAAC,GACDmO,EAAenJ,GAAGnF,IAAYqO,KAChCvO,EAAS,CAAER,SAAS,EAAOa,MAAAA,OAd/BL,EAAST,IAmBblD,+BChDsB,SACxBuL,EACA5B,GAEA,IAAM0C,EAAcvM,EAAc6J,GAElCxJ,kBAAgB,WACd,GAAKoL,EAAWnL,QAAhB,CAEA,IAAMuM,EAAW,IAAIyF,eAAe,SAAAvF,gBAClCR,EAAYjM,eAAZiM,EAAYjM,QAAUyM,KAIxB,OAFAF,EAASI,QAAQxB,EAAWnL,2BAEfuM,EAASK,gBACrB,CAACX,EAAad,8FxBPE,6BAIc,SAHjC8G,MAAAA,aAAQjE,SACRkE,UAAAA,aAAY,IACTC,+BAEiB9O,aAAbiE,OAAI8K,OACLC,EAAgBvS,SAAO,IAAI6Q,KAC3B2B,EAA0BxS,SAAO,IAAIyS,KAErC3B,EAAWnK,cACf,SAACoK,GACC,GAAmB,iBAARA,EAAkB,CAC3B,IAAM2B,EAAY3B,EAElB,gBAAQpQ,GACN4R,EAAcrS,QAAQ0I,IAAIjI,EAAS+R,IAIvC,GAAwB3B,aArBf4B,QAqBqB,CAC5B,IAAMhS,EAAUoQ,EACV2B,EAAYP,EAAMxR,GAEpB+R,GACFH,EAAcrS,QAAQ0I,IAAIjI,EAAS+R,KAMzC,CAACP,IAkCH,OA/BAlG,EACE,kBAAMpK,MAAMoP,KAAKsB,EAAcrS,QAAQgR,SACvC,SAAAvE,GASE,GARAA,EAAQ5K,QAAQ,gBAAsBxB,IAAAA,SAAnBqS,mBACQR,EACvBI,EAAwBtS,QAAQ2S,IAAItS,GAEpCiS,EAAwBtS,eAAeK,KAItCiS,EAAwBtS,QAAQ4S,KAArC,CAEA,IAAMC,EAAkBlR,MAAMoP,KAC5BuB,EAAwBtS,SACxB8S,OAAO,SAACC,EAAMC,UACdD,EAAKE,wBAAwBC,IAAMF,EAAKC,wBAAwBC,IAC5DH,EACAC,IAGAG,EACJd,EAAcrS,QAAQ2I,IAAIkK,IAAoBZ,EAAMY,GAEjC,iBAAVM,GACTf,EAAMe,YAGLhB,OAAMD,UAAAA,KAGN,CAAC5K,EAAIsJ,yByBvEO,SAACnI,YAAAA,IAAAA,EAAqC,UAC/BpF,WAASoF,GAArB7B,OAEd,MAAO,MAAQA,EADMiF,EAAoBjF,4EtBGvB,SAClBjH,EACAyT,EACAlE,YADAkE,IAAAA,GAAS,YACTlE,IAAAA,EAAwCvB,IAExC,IAAM0F,EAAgBvT,SAAiB,IAWvC,OATAoB,YAAU,WACJgO,EAAUvP,KACZ0T,EAAcrT,QAAUoT,GACnBzT,UAAU0T,EAAcrT,mBACrBqT,EAAcrT,SAASL,MAGhC,CAACA,IAEG0T,EAAcrT,4BuBhBJ,SACjBuJ,EACA+J,EACA1T,YAAAA,IAAAA,EAAuB,CAAC0T,IAExB,IAAMrH,EAAcvM,EAAc6J,GAElCrI,YAAU,WACR,IAAM4N,EAASyE,WAAW,wBAAMtH,EAAYjM,eAAZiM,EAAYjM,WAAasT,GACzD,yBAAaE,aAAa1E,KAEzBlP,+BChBsB,SAAC2J,EAAwB+J,GAClD,IAAMrH,EAAcvM,EAAc6J,GAC5BkK,EAAa3T,WA0BnB,OAxBAwJ,EAAY,WACNmK,EAAWzT,UACbwT,aAAaC,EAAWzT,QAAQ8O,QAChC2E,EAAWzT,QAAQ2K,aAIClE,cACtB,sBACMiE,QAAc,SAAAC,GACZ8I,EAAWzT,UACbwT,aAAaC,EAAWzT,QAAQ8O,QAChC2E,EAAWzT,QAAQ2K,WAErB,IAAMmE,EAASyE,WAAW,iBAExBtH,EAAYjM,SAAZiM,EAAYjM,UACZ2K,KACC2I,GACHG,EAAWzT,QAAU,CAAE8O,OAAAA,EAAQnE,QAAAA,MAEnC,CAACsB,EAAaqH,sBCpBD,SAACI,EAAetN,GAC/B,IAAMuN,EAAW7T,SAAOyH,SAASmM,OAEjCxS,YAAU,WACRqG,SAASmM,MAAQA,GAChB,CAACA,IAEJrF,GAAe,kBACTjI,SAAAA,EAASwN,oBACXrM,SAASmM,MAAQC,EAAS3T,8BCRd,SAACyI,YAAAA,IAAAA,GAAsC,SAC7BpF,WAASoF,GAArB7B,OAId,MAAO,MAHQH,cAAY,kBAAMG,EAAS,SAAAiN,UAAcA,KAAY,IACpDhL,EAAiBjC,EAAU,MAAM,GAChCiC,EAAiBjC,EAAU,MAAM,GACRA,sMCNd,iBACYvD,WAAS0B,GAA1C+O,OAAcC,OAMrB,OALAvT,EAAS2B,OAAQ,SAAU,kBAAM4R,EAAgBhP,MAA0B,CACzEpE,SAAS,EACTE,SAAS,EACTC,qBAAqB,IAEhBgT,yBCLa,iBACIzQ,WAASgC,GAA1BuN,OAAMoB,OAEb,OADAxT,EAAS2B,OAAQ,SAAU,kBAAM6R,EAAQ3O,OAClCuN,6BCRiB,SAKxBqB,EACA7N,EACAjD,YAAAA,IAAAA,EAA0DL,SAEhCO,WAASF,GAA5BG,OAAOC,OACR2Q,EAAYpU,WAEZyJ,EAAW9C,cACf,SAACvE,EAAmBkK,GACd8H,EAAUlU,SACZkU,EAAUlU,QAAQmU,YAGpB,IAAMC,EAAS,IAAIC,OAAOJ,EAAW7N,GACrCgO,EAAOrS,iBAAiB,UAAW,SAAAR,UACjCgC,EAAS,CAAER,SAAS,EAAOY,OAAQpC,EAAE+S,SAEvCF,EAAOrS,iBAAiB,QAAS,SAAAR,UAC/BgC,EAAS,CAAER,SAAS,EAAOa,MAAOrC,EAAEqC,UAEtCwQ,EAAOG,YAAYrS,EAASkK,GAC5B7I,EAASP,GACTkR,EAAUlU,QAAUoU,GAEtB,CAAChO,EAAS6N,IAOZ,OAJA5F,GAAe,WACT6F,EAAUlU,SAASkU,EAAUlU,QAAQmU,cAGpC,CAAC7Q,EAAOiG"}