{"version":3,"file":"index.modern.js","sources":["../src/useUpdatedRef/index.ts","../src/useAnimationFrame/index.ts","../src/utils/common.ts","../src/creators/createRateLimitHook.ts","../src/useAudit/index.ts","../src/useCallbackWithCleanup/index.ts","../src/useHandleChangeCheck/index.ts","../src/useCheckInput/index.ts","../src/useCurrent/index.ts","../src/useCurryFunction/index.ts","../src/useDebounce/index.ts","../src/useEffectOnce/index.ts","../src/useDidMount/index.ts","../src/useDidUpdate/index.ts","../src/useEvent/index.ts","../src/useTriggerUpdate/index.ts","../src/useForceUpdate/index.ts","../src/useToggleFullscreen/index.ts","../src/useFullscreen/index.ts","../src/useHandleChangeFile/index.ts","../src/useHandleChangeNumber/index.ts","../src/useHandleChangeText/index.ts","../src/useIntersectionObserver/index.ts","../src/useInterval/index.ts","../src/useIsMounted/index.ts","../src/constants/common.ts","../src/creators/createResourceHook.ts","../src/useLink/index.ts","../src/useMutationObserver/index.ts","../src/useNumberInput/index.ts","../src/useOnClickOutside/index.ts","../src/usePrevious/index.ts","../src/usePromise/index.ts","../src/usePromiseCallback/index.ts","../src/useResizeObserver/index.ts","../src/useSample/index.ts","../src/useScript/index.ts","../src/useTextInput/index.ts","../src/useThrottle/index.ts","../src/useTimeout/index.ts","../src/useTimeoutCallback/index.ts","../src/useToggle/index.ts","../src/useWillUnmount/index.ts","../src/useWindowBeforeUnload/index.ts","../src/useWindowScrollOffset/index.ts","../src/useWindowSize/index.ts","../src/useWorkerCallback/index.ts"],"sourcesContent":["import { DependencyList, useRef, useLayoutEffect } from 'react';\n\nconst useUpdatedRef = <TValue>(value: TValue, deps?: DependencyList) => {\n  const ref = useRef(value);\n\n  useLayoutEffect(() => {\n    ref.current = value;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  return ref;\n};\n\nexport default useUpdatedRef;\n","import { DependencyList, useEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useAnimationFrame = (\n  callback: FrameRequestCallback,\n  deps: DependencyList = [],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useEffect(() => {\n    const handle = requestAnimationFrame(time => callbackRef.current?.(time));\n\n    return () => cancelAnimationFrame(handle);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useAnimationFrame;\n","import { BaseSyntheticEvent } from 'react';\n\nexport const createUniqueObject = () => ({});\n\nexport const isBrowser = () =>\n  typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\nexport const isSyntheticEvent = (o: any): o is BaseSyntheticEvent =>\n  o instanceof Object && o.nativeEvent instanceof Event;\n\nexport const getWindowScrollOffset = (): Offset =>\n  isBrowser() ? { x: window.scrollX, y: window.scrollY } : {};\n\nexport const getWindowSize = (): WindowSize =>\n  isBrowser()\n    ? {\n        innerWidth: window.innerWidth,\n        innerHeight: window.innerHeight,\n        outerWidth: window.outerWidth,\n        outerHeight: window.outerHeight,\n      }\n    : {};\n\nexport const persistEvent = (o: unknown) => isSyntheticEvent(o) && o.persist();\n\nexport interface Offset {\n  x?: number;\n  y?: number;\n}\n\nexport interface WindowSize {\n  innerWidth?: number;\n  innerHeight?: number;\n  outerWidth?: number;\n  outerHeight?: number;\n}\n","/**\n * References:\n * https://github.com/imbhargav5/rooks/blob/dev/packages/debounce/src/useDebounce.ts\n */\n\nimport { useRef, useEffect, useCallback } from 'react';\nimport { RateLimitFunctionWithOptions } from '../types/common';\nimport useUpdatedRef from '../useUpdatedRef';\nimport { persistEvent } from '../utils/common';\n\nconst createRateLimitHook = <TOptions>(\n  rateLimit: RateLimitFunctionWithOptions<TOptions>,\n) => <TArgs extends any[], TReturn>(\n  func: (...args: TArgs) => TReturn,\n  wait: number,\n  options?: TOptions,\n) => {\n  const funcRef = useUpdatedRef(func);\n  const rateLimitedFuncRef = useRef(rateLimit(func, wait, options));\n\n  useEffect(() => {\n    rateLimitedFuncRef.current = rateLimit(\n      (...args) => funcRef.current(...args),\n      wait,\n      options,\n    );\n\n    return () => rateLimitedFuncRef.current?.cancel();\n  }, [funcRef, options, wait]);\n\n  return useCallback<(...args: TArgs) => TReturn | undefined>((...args) => {\n    args.forEach(persistEvent);\n    return rateLimitedFuncRef.current(...args);\n  }, []);\n};\n\nexport default createRateLimitHook;\n","import createRateLimitHook from '../creators/createRateLimitHook';\nimport {\n  RateLimitFunction,\n  CancellableRateLimitedFunction,\n} from '../types/common';\n\nconst audit: RateLimitFunction = <TArgs extends any[], TReturn>(\n  func: (...args: TArgs) => TReturn,\n  wait: number,\n) => {\n  let timeoutId: NodeJS.Timeout | null = null;\n  let lastArgs: TArgs | null = null;\n  let result: TReturn | undefined;\n\n  const ratedFunction: CancellableRateLimitedFunction<TArgs, TReturn> = (\n    ...args\n  ) => {\n    lastArgs = args;\n    if (timeoutId === null) {\n      timeoutId = setTimeout(() => {\n        if (lastArgs !== null) {\n          result = func(...lastArgs);\n          lastArgs = null;\n        }\n        timeoutId = null;\n      }, wait);\n    }\n    return result;\n  };\n\n  ratedFunction.cancel = () => {\n    if (timeoutId !== null) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = null;\n    lastArgs = null;\n  };\n\n  return ratedFunction;\n};\n\nconst useAudit = createRateLimitHook(audit);\n\nexport default useAudit;\n","import { DependencyList, useRef, useCallback } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useCallbackWithCleanup = <TArgs extends any[]>(\n  callback: (...args: TArgs) => void | VoidFunction,\n  deps: DependencyList = [],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n  const cleanupRef = useRef<void | VoidFunction>();\n\n  return useCallback((...args: TArgs) => {\n    if (cleanupRef.current) cleanupRef.current();\n    cleanupRef.current = callbackRef.current?.(...args);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useCallbackWithCleanup;\n","import { useCallback } from 'react';\nimport { CheckedTargetEvent } from '../types/common';\n\nconst useHandleChangeCheck = (\n  ...handlers: readonly ((checked: boolean) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { checked } }: CheckedTargetEvent) =>\n      handlers.forEach(handler => handler?.(Boolean(checked))),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeCheck;\n","import { useState } from 'react';\nimport useHandleChangeCheck from '../useHandleChangeCheck';\nimport { InitialState } from '../types/common';\n\nconst useCheckInput = (initialValue: InitialState<boolean> = false) => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = useHandleChangeCheck(setValue);\n  return [value, setValue, handleChange] as const;\n};\n\nexport default useCheckInput;\n","import { useRef } from 'react';\nimport { InitialState } from '../types/common';\n\nconst useCurrent = <TValue>(initialValue?: InitialState<TValue>) => {\n  const ref = useRef(initialValue);\n\n  return {\n    set: (value: TValue) => {\n      ref.current = value;\n    },\n    get: () => ref.current,\n    is: (value: TValue) => ref.current === value,\n  };\n};\n\nexport default useCurrent;\n","import { useCallback } from 'react';\n\nconst useCurryFunction: UseCurryFunction = (\n  fn: (...args: any[]) => any,\n  thisArg: any = null,\n  ...args: any[]\n) =>\n  useCallback(\n    (...restArgs: any[]) => fn?.apply(thisArg, [...args, ...restArgs]),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [fn, ...args],\n  );\n\nexport default useCurryFunction;\n\ninterface UseCurryFunction {\n  <TFirstArg, TRestArgs extends any[], TReturn>(\n    func: (firstArg: TFirstArg, ...restArgs: TRestArgs) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n  ): (...args: TRestArgs) => TReturn;\n  <TFirstArg, TSecondArg, TRestArgs extends any[], TReturn>(\n    func: (\n      firstArg: TFirstArg,\n      secondArg: TSecondArg,\n      ...restArgs: TRestArgs\n    ) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n    secondArg: TSecondArg,\n  ): (...args: TRestArgs) => TReturn;\n  <TFirstArg, TSecondArg, TThirdArg, TRestArgs extends any[], TReturn>(\n    func: (\n      firstArg: TFirstArg,\n      secondArg: TSecondArg,\n      thirdArg: TThirdArg,\n      ...restArgs: TRestArgs\n    ) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n    secondArg: TSecondArg,\n    thirdArg: TThirdArg,\n  ): (...args: TRestArgs) => TReturn;\n  <\n    TFirstArg,\n    TSecondArg,\n    TThirdArg,\n    TForthArg,\n    TRestArgs extends any[],\n    TReturn\n  >(\n    func: (\n      firstArg: TFirstArg,\n      secondArg: TSecondArg,\n      thirdArg: TThirdArg,\n      forthArg: TForthArg,\n      ...restArgs: TRestArgs\n    ) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n    secondArg: TSecondArg,\n    thirdArg: TThirdArg,\n    forthArg: TForthArg,\n  ): (...args: TRestArgs) => TReturn;\n}\n","import createRateLimitHook from '../creators/createRateLimitHook';\nimport {\n  RateLimitFunctionWithOptions,\n  CancellableRateLimitedFunction,\n} from '../types/common';\n\nconst debounce: RateLimitFunctionWithOptions<DebounceOptions> = <\n  TArgs extends any[],\n  TReturn\n>(\n  func: (...args: TArgs) => TReturn,\n  wait: number,\n  { leading, trailing }: DebounceOptions = { trailing: true },\n) => {\n  let lastArgs: TArgs | null = null;\n  let timeoutId: NodeJS.Timeout | null = null;\n  let result: TReturn | undefined;\n\n  const ratedFunction: CancellableRateLimitedFunction<TArgs, TReturn> = (\n    ...args\n  ) => {\n    lastArgs = args;\n\n    if (timeoutId !== null) {\n      clearTimeout(timeoutId);\n    } else if (leading) {\n      result = func(...lastArgs);\n      lastArgs = null;\n    }\n\n    timeoutId = setTimeout(() => {\n      if (trailing && lastArgs !== null) {\n        result = func(...lastArgs);\n        lastArgs = null;\n      }\n      timeoutId = null;\n    }, wait);\n\n    return result;\n  };\n\n  ratedFunction.cancel = () => {\n    if (timeoutId !== null) {\n      clearTimeout(timeoutId);\n    }\n    lastArgs = null;\n    timeoutId = null;\n  };\n\n  return ratedFunction;\n};\n\nconst useDebounce = createRateLimitHook(debounce);\n\nexport default useDebounce;\n\nexport interface DebounceOptions {\n  leading?: boolean;\n  trailing?: boolean;\n}\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useEffectOnce.ts\n */\n\nimport { EffectCallback, useEffect } from 'react';\n\nconst useEffectOnce = (effect: EffectCallback) => useEffect(effect, []);\n\nexport default useEffectOnce;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useMount.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useDidMount.js\n * https://github.com/imbhargav5/rooks/blob/dev/packages/shared/useDidMount.ts\n */\n\nimport useEffectOnce from '../useEffectOnce';\n\nconst useDidMount = (callback: VoidFunction) => useEffectOnce(callback);\n\nexport default useDidMount;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useUpdateEffect.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useDidUpdate.js\n */\n\nimport { EffectCallback, DependencyList, useRef, useEffect } from 'react';\n\nconst useDidUpdate = (callback: EffectCallback, deps?: DependencyList) => {\n  const didMountRef = useRef(false);\n\n  useEffect(\n    didMountRef.current\n      ? callback\n      : () => {\n          didMountRef.current = true;\n        },\n    deps,\n  );\n};\n\nexport default useDidUpdate;\n","/**\n * References:\n * https://github.com/donavon/use-event-listener\n * https://github.com/streamich/react-use/blob/master/src/useEvent.ts\n * https://github.com/adambrgmn/hooks/blob/master/src/use-event-listener/index.ts\n */\n\nimport { useRef, useEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst getEventTarget = <TElement>(element: ElementType<TElement>) =>\n  element instanceof Function ? element() : element;\n\nconst isElement = (target: EventTarget | null): target is Element =>\n  target instanceof Object && 'matches' in target;\n\nconst checkAndInvokeEventListener = (\n  listener: EventListener | null,\n  event: Event,\n  selectors: string | undefined,\n) => {\n  if (!listener) {\n    return;\n  }\n  if (\n    selectors &&\n    (!isElement(event.target) || !event.target.matches(selectors))\n  ) {\n    return;\n  }\n  listener(event);\n};\n\nconst useEvent: UseEventHook = (\n  element: ElementType<EventTarget>,\n  eventNames: string | string[],\n  listener: EventListener | null,\n  {\n    capture,\n    once,\n    passive,\n    selectors,\n    usingAnimationFrame,\n    enabled = true,\n  }: UseEventOptions = {},\n) => {\n  const listenerRef = useUpdatedRef(listener);\n  const animationFrameRef = useRef(0);\n\n  useEffect(() => {\n    if (!enabled) {\n      return undefined;\n    }\n\n    const eventTarget = getEventTarget(element);\n    if (!eventTarget) {\n      return undefined;\n    }\n\n    const eventListener = (e: Event) => {\n      if (usingAnimationFrame) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = requestAnimationFrame(() =>\n          checkAndInvokeEventListener(listenerRef.current, e, selectors),\n        );\n      } else {\n        checkAndInvokeEventListener(listenerRef.current, e, selectors);\n      }\n    };\n\n    const eventNameList = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n    eventNameList.forEach(eventName =>\n      eventTarget.addEventListener(eventName, eventListener, {\n        capture,\n        once,\n        passive,\n      }),\n    );\n\n    return () => {\n      if (usingAnimationFrame && animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      eventNameList.forEach(eventName =>\n        eventTarget.removeEventListener(eventName, eventListener, { capture }),\n      );\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    element,\n    capture,\n    once,\n    passive,\n    selectors,\n    usingAnimationFrame,\n    enabled,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    ...eventNames,\n  ]);\n};\n\nexport default useEvent;\n\ninterface UseEventHook {\n  <TEventName extends keyof WindowEventMap>(\n    element: ElementType<Window>,\n    eventNames: TEventName | TEventName[],\n    listener: (e: WindowEventMap[TEventName]) => void | null,\n    options?: UseEventOptions,\n  ): void;\n  <TEventName extends keyof DocumentEventMap>(\n    element: ElementType<Document>,\n    eventNames: TEventName | TEventName[],\n    listener: (e: DocumentEventMap[TEventName]) => void | null,\n    options?: UseEventOptions,\n  ): void;\n  <TEventName extends keyof HTMLElementEventMap>(\n    element: ElementType<HTMLElement>,\n    eventNames: TEventName | TEventName[],\n    listener: (e: HTMLElementEventMap[TEventName]) => void | null,\n    options?: UseEventOptions,\n  ): void;\n  (\n    element: ElementType<EventTarget>,\n    eventNames: string | string[],\n    listener: EventListener | null,\n    options?: UseEventOptions,\n  ): void;\n}\n\nexport interface UseEventOptions extends AddEventListenerOptions {\n  selectors?: string;\n  usingAnimationFrame?: boolean;\n  enabled?: boolean;\n}\n\ntype ElementType<TElement> =\n  | TElement\n  | null\n  | undefined\n  | false\n  | (() => TElement | null | undefined | false);\n","import { useReducer } from 'react';\nimport { createUniqueObject } from '../utils/common';\n\nconst useTriggerUpdate = () =>\n  useReducer(createUniqueObject, createUniqueObject());\n\nexport default useTriggerUpdate;\n","/**\n * References:\n * https://github.com/CharlesStover/use-force-update\n * https://reactjs.org/docs/hooks-faq.html#is-there-something-like-forceupdate\n */\n\nimport useTriggerUpdate from '../useTriggerUpdate';\n\nconst useForceUpdate = () => useTriggerUpdate()[1];\n\nexport default useForceUpdate;\n","/**\n * References:\n * https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API/Guide\n * https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API\n */\n\nimport { RefObject, useCallback } from 'react';\nimport useEvent from '../useEvent';\n\nconst useToggleFullscreen = (\n  elementRef: RefObject<Element>,\n  onChange: EventListener | null = null,\n  onError: EventListener | null = null,\n) => {\n  const toggleFullscreen = useCallback(\n    (show?: boolean, options?: FullscreenOptions) => {\n      if (\n        document.fullscreenElement &&\n        (show === false || show === undefined)\n      ) {\n        document.exitFullscreen();\n      }\n\n      if (\n        !document.fullscreenElement &&\n        (show === true || show === undefined)\n      ) {\n        // eslint-disable-next-line no-unused-expressions\n        elementRef.current?.requestFullscreen?.(options);\n      }\n    },\n    [elementRef],\n  );\n\n  useEvent(document, 'fullscreenchange', onChange);\n  useEvent(document, 'fullscreenerror', onError);\n\n  return toggleFullscreen;\n};\n\nexport default useToggleFullscreen;\n","import { useState, MutableRefObject } from 'react';\nimport useToggleFullscreen from '../useToggleFullscreen';\n\nconst useFullscreen = (elementRef: MutableRefObject<Element>) => {\n  const [fullscreen, setFullscreen] = useState(false);\n  const isFullscreen = () =>\n    !!document.fullscreenElement &&\n    document.fullscreenElement === elementRef.current;\n  const handleChange = () => setFullscreen(isFullscreen());\n  const toggleFullscreen = useToggleFullscreen(elementRef, handleChange);\n  return [fullscreen, toggleFullscreen] as const;\n};\n\nexport default useFullscreen;\n","import { useCallback } from 'react';\nimport { FilesTargetEvent } from '../types/common';\n\nconst useHandleChangeFile = (\n  ...handlers: readonly ((files: FileList | null) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { files } }: FilesTargetEvent) =>\n      handlers.forEach(handler => handler?.(files)),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeFile;\n","import { useCallback } from 'react';\nimport { ValueTargetEvent } from '../types/common';\n\nconst useHandleChangeNumber = (\n  ...handlers: readonly ((value: number) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { value } }: ValueTargetEvent<string>) =>\n      handlers.forEach(handler => handler?.(Number(value))),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeNumber;\n","import { useCallback } from 'react';\nimport { ValueTargetEvent } from '../types/common';\n\nconst useHandleChangeText = (\n  ...handlers: readonly ((text: string) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { value } }: ValueTargetEvent<string>) =>\n      handlers.forEach(handler => handler?.(String(value))),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeText;\n","/**\n * References:\n * https://github.com/adambrgmn/hooks/blob/master/src/use-in-view/index.ts\n * https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n */\n\nimport { RefObject, useLayoutEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useIntersectionObserver = (\n  elementRef: RefObject<Element>,\n  callback: IntersectionObserverCallback,\n  options?: IntersectionObserverInit,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useLayoutEffect(() => {\n    if (!elementRef.current) return undefined;\n\n    const observer = new IntersectionObserver(\n      (entries, currentObserver) =>\n        callbackRef.current?.(entries, currentObserver),\n      options,\n    );\n    observer.observe(elementRef.current);\n\n    return () => observer.disconnect();\n  }, [callbackRef, elementRef, options]);\n};\n\nexport default useIntersectionObserver;\n","/**\n * References:\n * https://github.com/dispix/react-pirate/blob/master/src/useInterval.js\n * https://github.com/donavon/use-interval\n */\n\nimport { DependencyList, useEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useInterval = (\n  callback: VoidFunction | undefined | null,\n  {\n    period,\n    leading,\n    running,\n    deps = [period, leading, running],\n  }: UseIntervalSettings,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useEffect(() => {\n    let handle: NodeJS.Timeout;\n\n    if (running) {\n      // eslint-disable-next-line no-unused-expressions\n      if (leading) callbackRef.current?.();\n      handle = setInterval(() => callbackRef.current?.(), period);\n    }\n\n    return () => {\n      if (handle) clearInterval(handle);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useInterval;\n\nexport interface UseIntervalSettings {\n  deps?: DependencyList;\n  leading?: boolean;\n  period: number;\n  running?: boolean;\n}\n","/**\n * References:\n * https://github.com/adambrgmn/hooks/blob/master/src/use-is-mounted/index.ts\n * https://github.com/hupe1980/react-is-mounted-hook/blob/master/src/use-is-mounted.tsx\n * https://github.com/streamich/react-use/blob/master/src/useRefMounted.ts\n */\n\nimport { useRef, useCallback } from 'react';\nimport useEffectOnce from '../useEffectOnce';\n\nconst useIsMounted = () => {\n  const isMountedRef = useRef(false);\n\n  useEffectOnce(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  });\n\n  return useCallback(() => isMountedRef.current, []);\n};\n\nexport default useIsMounted;\n","import { AsyncState } from '../types/common';\n\nexport const PENDING_STATE: AsyncState<any, any> = { loading: false };\nexport const LOADING_STATE: AsyncState<any, any> = { loading: true };\n","/**\n * References:\n * https://github.com/hupe1980/react-script-hook/blob/master/src/use-script.tsx\n */\n\nimport { HTMLAttributes, useState, useEffect } from 'react';\nimport useIsMounted from '../useIsMounted';\nimport { InitialState, AsyncState } from '../types/common';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\n\nconst createResourceHook = <TAttrs extends HTMLAttributes<HTMLElement>>(\n  tagName: 'script' | 'link',\n  isValid: (attrs: TAttrs) => boolean,\n) => (\n  attrs: TAttrs,\n  initialState: InitialState<AsyncState> = PENDING_STATE,\n) => {\n  const isMounted = useIsMounted();\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    if (!isValid(attrs)) {\n      setState(PENDING_STATE);\n      return undefined;\n    }\n\n    const element = ((attrs.id &&\n      document.querySelector(`${tagName}#${attrs.id}`)) ||\n      document.createElement(tagName)) as HTMLScriptElement;\n\n    Object.keys(attrs).forEach(key => {\n      (element as any)[key] = (attrs as any)[key];\n    });\n\n    const handleLoad = () => {\n      if (isMounted()) {\n        setState(PENDING_STATE);\n      }\n    };\n\n    const handleError = (e: ErrorEvent) => {\n      if (isMounted()) {\n        setState({ loading: false, error: e.error });\n      }\n    };\n\n    element.addEventListener('load', handleLoad, false);\n    element.addEventListener('error', handleError, false);\n\n    setState(LOADING_STATE);\n    document.body.appendChild(element);\n\n    return () => {\n      element.removeEventListener('load', handleLoad, false);\n      element.removeEventListener('error', handleError, false);\n    };\n  }, [attrs, isMounted]);\n\n  return state;\n};\n\nexport default createResourceHook;\n","import { LinkHTMLAttributes } from 'react';\nimport createResourceHook from '../creators/createResourceHook';\nimport { isBrowser } from '../utils/common';\n\nconst useLink = createResourceHook<LinkHTMLAttributes<HTMLLinkElement>>(\n  'link',\n  ({ href }) =>\n    isBrowser() && !!href && !document.querySelector(`link[href=\"${href}\"]`),\n);\n\nexport default useLink;\n","/**\n * References:\n * https://github.com/imbhargav5/rooks/blob/dev/packages/shared/useMutationObserver.ts\n * https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n */\n\nimport { MutableRefObject, useLayoutEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useMutationObserver = <TNode extends Node>(\n  nodeRef: MutableRefObject<TNode>,\n  callback: MutationCallback,\n  options?: MutationObserverInit,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useLayoutEffect(() => {\n    if (!nodeRef.current) return undefined;\n\n    const observer = new MutationObserver((mutation, currentObserver) =>\n      callbackRef.current?.(mutation, currentObserver),\n    );\n    observer.observe(nodeRef.current, options);\n\n    return () => observer.disconnect();\n  }, [callbackRef, nodeRef, options]);\n};\n\nexport default useMutationObserver;\n","import { useState } from 'react';\nimport useHandleChangeNumber from '../useHandleChangeNumber';\nimport { InitialState } from '../types/common';\n\nconst useNumberInput = (initialValue: InitialState<number> = 0) => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = useHandleChangeNumber(setValue);\n  return [value, setValue, handleChange] as const;\n};\n\nexport default useNumberInput;\n","/**\n * References:\n * https://usehooks.com/useOnClickOutside/\n * https://github.com/sandiiarov/use-events/blob/master/src/useClickOutside/index.tsx\n * https://github.com/Andarist/use-onclickoutside/blob/master/src/index.ts\n * https://github.com/streamich/react-use/blob/master/src/useClickAway.ts\n * https://github.com/imbhargav5/rooks/blob/dev/packages/outside-click/src/useOutsideClick.ts\n */\n\nimport { RefObject } from 'react';\nimport useEvent from '../useEvent';\n\nconst useOnClickOutside = (\n  nodeRef: RefObject<Node>,\n  handleClickOutside: ClickHandler,\n) =>\n  useEvent(document, ['mousedown', 'touchstart'], e => {\n    if (\n      handleClickOutside &&\n      nodeRef.current &&\n      !nodeRef.current.contains(e.target as Node)\n    ) {\n      handleClickOutside(e);\n    }\n  });\n\nexport default useOnClickOutside;\n\nexport type ClickHandler = (e: TouchEvent | MouseEvent) => void;\n","/**\n * References:\n * https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n * https://github.com/Andarist/use-previous\n * https://github.com/dispix/react-pirate\n * https://github.com/imbhargav5/rooks/tree/dev/packages/previous\n * https://github.com/kitze/react-hanger\n * https://github.com/zakariaharti/react-hookedup\n * https://github.com/imbhargav5/rooks/blob/dev/packages/previous/src/usePrevious.ts\n */\n\nimport { useRef, useEffect } from 'react';\n\nconst usePrevious = <TValue>(value: TValue) => {\n  const prevRef = useRef<TValue>();\n\n  useEffect(() => {\n    prevRef.current = value;\n  });\n\n  return prevRef.current;\n};\n\nexport default usePrevious;\n","/**\n * References:\n * https://github.com/jacob-ebey/react-hook-utils/blob/master/src/usePromise.js\n * https://github.com/aiven715/promise-hook/blob/master/src/index.js\n * https://github.com/streamich/react-use/blob/master/src/useAsyncFn.ts\n * https://github.com/adambrgmn/hooks/blob/master/src/use-promise/index.ts\n */\n\nimport { DependencyList, useState, useEffect } from 'react';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { InitialState, AsyncState } from '../types/common';\n\nconst usePromise = <TResult, TError = unknown>(\n  promiseFactory: () => Promise<TResult> | false | undefined | null,\n  deps: DependencyList = [],\n  initialState: InitialState<AsyncState<TResult, TError>> = PENDING_STATE,\n) => {\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    let isCancelled = false;\n    const promise = promiseFactory();\n\n    if (!promise) {\n      setState(PENDING_STATE);\n      return undefined;\n    }\n\n    setState(LOADING_STATE);\n    promise\n      .then(result => {\n        if (!isCancelled) setState({ loading: false, result });\n      })\n      .catch(error => {\n        if (!isCancelled) setState({ loading: false, error });\n      });\n\n    return () => {\n      isCancelled = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  return state;\n};\n\nexport default usePromise;\n\nexport type PromiseState<TResult = unknown, TError = unknown> =\n  | {\n      loading: boolean;\n      result?: undefined;\n      error?: undefined;\n    }\n  | {\n      loading: false;\n      result: TResult;\n      error?: undefined;\n    }\n  | {\n      loading: false;\n      result?: undefined;\n      error: TError;\n    };\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useAsyncFn.ts\n * https://github.com/adambrgmn/hooks/blob/master/src/use-promise/index.ts\n */\n\nimport { DependencyList, useState, useCallback } from 'react';\nimport useIsMounted from '../useIsMounted';\nimport useCurrent from '../useCurrent';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { InitialState, AsyncState } from '../types/common';\n\nconst usePromiseCallback = <TArgs extends any[], TResult, TError = unknown>(\n  promiseFactory: (\n    ...args: TArgs\n  ) => Promise<TResult> | false | undefined | null,\n  deps: DependencyList = [],\n  initialState: InitialState<AsyncState<TResult, TError>> = PENDING_STATE,\n) => {\n  const isMounted = useIsMounted();\n  const [state, setState] = useState(initialState);\n  const currentPromise = useCurrent<\n    Promise<TResult> | false | undefined | null\n  >();\n\n  const callback = useCallback(\n    (...args: TArgs) => {\n      const promise = promiseFactory(...args);\n      currentPromise.set(promise);\n\n      if (!promise) {\n        setState(PENDING_STATE);\n        return;\n      }\n\n      setState(LOADING_STATE);\n      promise\n        .then(result => {\n          if (currentPromise.is(promise) && isMounted()) {\n            setState({ loading: false, result });\n          }\n        })\n        .catch(error => {\n          if (currentPromise.is(promise) && isMounted()) {\n            setState({ loading: false, error });\n          }\n        });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    deps,\n  );\n\n  return [state, callback] as const;\n};\n\nexport default usePromiseCallback;\n","import { RefObject, useLayoutEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useResizeObserver = (\n  elementRef: RefObject<Element>,\n  callback: ResizeObserverCallback,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useLayoutEffect(() => {\n    if (!elementRef.current) return undefined;\n\n    const observer = new ResizeObserver(entries =>\n      callbackRef.current?.(entries),\n    );\n    observer.observe(elementRef.current);\n\n    return () => observer.disconnect();\n  }, [callbackRef, elementRef]);\n};\n\nexport default useResizeObserver;\n","import createRateLimitHook from '../creators/createRateLimitHook';\nimport {\n  RateLimitFunction,\n  CancellableRateLimitedFunction,\n} from '../types/common';\n\nconst sample: RateLimitFunction = <TArgs extends any[], TReturn>(\n  func: (...args: TArgs) => TReturn,\n  wait: number,\n) => {\n  let lastArgs: TArgs | null = null;\n  let result: TReturn | undefined;\n\n  const intervalId = setInterval(() => {\n    if (lastArgs) {\n      result = func(...lastArgs);\n      lastArgs = null;\n    }\n  }, wait);\n\n  const ratedFunction: CancellableRateLimitedFunction<TArgs, TReturn> = (\n    ...args\n  ) => {\n    lastArgs = args;\n    return result;\n  };\n\n  ratedFunction.cancel = () => {\n    clearInterval(intervalId);\n    lastArgs = null;\n  };\n\n  return ratedFunction;\n};\n\nconst useSample = createRateLimitHook(sample);\n\nexport default useSample;\n","import { ScriptHTMLAttributes } from 'react';\nimport createResourceHook from '../creators/createResourceHook';\nimport { isBrowser } from '../utils/common';\n\nconst useScript = createResourceHook<ScriptHTMLAttributes<HTMLScriptElement>>(\n  'script',\n  ({ src }) =>\n    isBrowser() && !!src && !document.querySelector(`script=[src=\"${src}\"]`),\n);\n\nexport default useScript;\n","import { useState } from 'react';\nimport useHandleChangeText from '../useHandleChangeText';\nimport { InitialState } from '../types/common';\n\nconst useTextInput = (initialValue: InitialState<string> = '') => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = useHandleChangeText(setValue);\n  return [value, setValue, handleChange] as const;\n};\n\nexport default useTextInput;\n","import createRateLimitHook from '../creators/createRateLimitHook';\nimport {\n  RateLimitFunctionWithOptions,\n  CancellableRateLimitedFunction,\n} from '../types/common';\n\nconst throttle: RateLimitFunctionWithOptions<ThrottleOptions> = <\n  TArgs extends any[],\n  TReturn\n>(\n  func: (...args: TArgs) => TReturn,\n  wait: number,\n  { leading, trailing }: ThrottleOptions = { leading: true, trailing: true },\n) => {\n  let lastArgs: TArgs | null = null;\n  let timeoutId: NodeJS.Timeout | null = null;\n  let result: TReturn | undefined;\n\n  const ratedFunction: CancellableRateLimitedFunction<TArgs, TReturn> = (\n    ...args\n  ) => {\n    lastArgs = args;\n\n    if (timeoutId === null) {\n      if (leading) {\n        result = func(...lastArgs);\n        lastArgs = null;\n      }\n\n      timeoutId = setTimeout(() => {\n        if (trailing && lastArgs !== null) {\n          result = func(...lastArgs);\n          lastArgs = null;\n        }\n        timeoutId = null;\n      }, wait);\n    }\n\n    return result;\n  };\n\n  ratedFunction.cancel = () => {\n    if (timeoutId !== null) {\n      clearTimeout(timeoutId);\n    }\n    lastArgs = null;\n    timeoutId = null;\n  };\n\n  return ratedFunction;\n};\n\nconst useThrottle = createRateLimitHook(throttle);\n\nexport default useThrottle;\n\nexport interface ThrottleOptions {\n  leading?: boolean;\n  trailing?: boolean;\n}\n","/**\n * References:\n * https://github.com/dispix/react-pirate/blob/master/src/useTimeout.js\n * https://github.com/imbhargav5/rooks/blob/master/packages/timeout/src/useTimeout.ts\n */\n\nimport { DependencyList, useEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useTimeout = (\n  callback: VoidFunction,\n  ms: number,\n  deps: DependencyList = [ms],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useEffect(() => {\n    const handle = setTimeout(() => callbackRef.current?.(), ms);\n    return () => clearTimeout(handle);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useTimeout;\n","import { useRef, useCallback } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\nimport useDidMount from '../useDidMount';\n\nconst useTimeoutCallback = (callback: VoidFunction, ms: number) => {\n  const callbackRef = useUpdatedRef(callback);\n  const timeoutRef = useRef<TimeoutObject>();\n\n  useDidMount(() => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current.handle);\n      timeoutRef.current.resolve();\n    }\n  });\n\n  const timeoutCallback = useCallback(\n    () =>\n      new Promise<void>(resolve => {\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current.handle);\n          timeoutRef.current.resolve();\n        }\n        const handle = setTimeout(() => {\n          // eslint-disable-next-line no-unused-expressions\n          callbackRef.current?.();\n          resolve();\n        }, ms);\n        timeoutRef.current = { handle, resolve };\n      }),\n    [callbackRef, ms],\n  );\n\n  return timeoutCallback;\n};\n\nexport default useTimeoutCallback;\n\ninterface TimeoutObject {\n  handle: NodeJS.Timeout;\n  resolve: VoidFunction;\n}\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useToggle.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useToggle.js\n */\n\nimport { useState, useCallback } from 'react';\nimport useCurryFunction from '../useCurryFunction';\nimport { InitialState } from '../types/common';\n\nconst useToggle = (initialValue: InitialState<boolean> = false) => {\n  const [value, setValue] = useState(initialValue);\n  const toggle = useCallback(\n    (nextValue?: boolean) =>\n      setValue(prevValue =>\n        typeof nextValue === 'boolean' ? nextValue : !prevValue,\n      ),\n    [],\n  );\n  const setTrue = useCurryFunction(setValue, null, true);\n  const setFalse = useCurryFunction(setValue, null, false);\n\n  return [value, toggle, setTrue, setFalse] as const;\n};\n\nexport default useToggle;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useUnmount.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useWillUnmount.js\n * https://github.com/imbhargav5/rooks/blob/dev/packages/will-unmount/src/useWillUnmount.ts\n */\n\nimport useEffectOnce from '../useEffectOnce';\n\nconst useWillUnmount = (callback: VoidFunction) =>\n  useEffectOnce(() => callback);\n\nexport default useWillUnmount;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useBeforeUnload.ts\n */\n\nimport useEvent from '../useEvent';\n\nconst useWindowBeforeUnload = (message?: string, enabled = true) =>\n  useEvent(\n    window,\n    'beforeunload',\n    e => {\n      e.preventDefault();\n      if (message) e.returnValue = message;\n      return message;\n    },\n    { enabled },\n  );\n\nexport default useWindowBeforeUnload;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useWindowScroll.ts\n */\n\nimport { useState } from 'react';\nimport useEvent from '../useEvent';\nimport { getWindowScrollOffset } from '../utils/common';\n\nconst useWindowScrollOffset = () => {\n  const [scrollOffset, setScrollOffset] = useState(getWindowScrollOffset);\n  useEvent(window, 'scroll', () => setScrollOffset(getWindowScrollOffset()), {\n    capture: false,\n    passive: true,\n    usingAnimationFrame: true,\n  });\n  return scrollOffset;\n};\n\nexport default useWindowScrollOffset;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useWindowSize.ts\n * https://github.com/imbhargav5/rooks/blob/dev/packages/window-size/src/useWindowSize.ts\n * https://github.com/contiamo/operational-ui/blob/master/src/useWindowSize/index.ts\n */\n\nimport { useState } from 'react';\nimport useEvent from '../useEvent';\nimport { getWindowSize } from '../utils/common';\n\nconst useWindowSize = () => {\n  const [size, setSize] = useState(getWindowSize);\n  useEvent(window, 'resize', () => setSize(getWindowSize()));\n  return size;\n};\n\nexport default useWindowSize;\n","import { useRef, useState, useCallback } from 'react';\nimport useWillUnmount from '../useWillUnmount';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { InitialState, AsyncState } from '../types/common';\n\nconst useWorkerCallback = <\n  TMessage = unknown,\n  TResult = unknown,\n  TError = unknown\n>(\n  workerUrl: string,\n  options?: WorkerOptions,\n  initialState: InitialState<AsyncState<TResult, TError>> = PENDING_STATE,\n) => {\n  const [state, setState] = useState(initialState);\n  const workerRef = useRef<Worker>();\n\n  const callback = useCallback(\n    (message: TMessage, opts?: PostMessageOptions) => {\n      if (workerRef.current) {\n        workerRef.current.terminate();\n      }\n\n      const worker = new Worker(workerUrl, options);\n      worker.addEventListener('message', e =>\n        setState({ loading: false, result: e.data }),\n      );\n      worker.addEventListener('error', e =>\n        setState({ loading: false, error: e.error }),\n      );\n      worker.postMessage(message, opts);\n      setState(LOADING_STATE);\n      workerRef.current = worker;\n    },\n    [options, workerUrl],\n  );\n\n  useWillUnmount(() => {\n    if (workerRef.current) workerRef.current.terminate();\n  });\n\n  return [state, callback];\n};\n\nexport default useWorkerCallback;\n"],"names":["useUpdatedRef","value","deps","ref","useRef","useLayoutEffect","current","useAnimationFrame","callback","callbackRef","useEffect","handle","requestAnimationFrame","time","cancelAnimationFrame","createUniqueObject","isBrowser","window","document","getWindowScrollOffset","x","scrollX","y","scrollY","getWindowSize","innerWidth","innerHeight","outerWidth","outerHeight","persistEvent","o","Object","nativeEvent","Event","isSyntheticEvent","persist","createRateLimitHook","rateLimit","func","wait","options","funcRef","rateLimitedFuncRef","_rateLimitedFuncRef$c","cancel","useCallback","args","forEach","useAudit","result","timeoutId","lastArgs","ratedFunction","setTimeout","clearTimeout","useCallbackWithCleanup","cleanupRef","useHandleChangeCheck","handlers","checked","target","handler","Boolean","useCheckInput","initialValue","useState","setValue","useCurrent","set","get","is","useCurryFunction","fn","thisArg","restArgs","apply","useDebounce","trailing","leading","useEffectOnce","effect","useDidMount","useDidUpdate","didMountRef","checkAndInvokeEventListener","listener","event","selectors","matches","useEvent","element","eventNames","capture","once","passive","usingAnimationFrame","enabled","listenerRef","animationFrameRef","eventTarget","Function","getEventTarget","eventListener","e","eventNameList","Array","isArray","eventName","addEventListener","removeEventListener","useTriggerUpdate","useReducer","useForceUpdate","useToggleFullscreen","elementRef","onChange","onError","toggleFullscreen","show","fullscreenElement","undefined","exitFullscreen","requestFullscreen","useFullscreen","setFullscreen","useHandleChangeFile","files","useHandleChangeNumber","Number","useHandleChangeText","String","useIntersectionObserver","observer","IntersectionObserver","entries","currentObserver","observe","disconnect","useInterval","period","running","setInterval","clearInterval","useIsMounted","isMountedRef","PENDING_STATE","loading","LOADING_STATE","createResourceHook","tagName","isValid","attrs","initialState","isMounted","state","setState","id","querySelector","createElement","keys","key","handleLoad","handleError","error","body","appendChild","useLink","href","useMutationObserver","nodeRef","MutationObserver","mutation","useNumberInput","useOnClickOutside","handleClickOutside","contains","usePrevious","prevRef","usePromise","promiseFactory","isCancelled","promise","then","usePromiseCallback","currentPromise","useResizeObserver","ResizeObserver","useSample","intervalId","useScript","src","useTextInput","useThrottle","useTimeout","ms","useTimeoutCallback","timeoutRef","resolve","Promise","useToggle","nextValue","prevValue","useWillUnmount","useWindowBeforeUnload","message","preventDefault","returnValue","useWindowScrollOffset","scrollOffset","setScrollOffset","useWindowSize","size","setSize","useWorkerCallback","workerUrl","workerRef","opts","terminate","worker","Worker","data","postMessage"],"mappings":"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"}