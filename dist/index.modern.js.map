{"version":3,"file":"index.modern.js","sources":["../src/useUpdatedRef/index.ts","../src/useAnimationFrame/index.ts","../src/useArray/index.ts","../src/utils/common.ts","../src/creators/createRateLimitHook.ts","../src/utils/rateLimit/audit.ts","../src/useAudit/index.ts","../src/creators/createRateLimitValueHook.ts","../src/useAuditValue/index.ts","../src/useEvent/index.ts","../src/useBeforeUnload/index.ts","../src/useCallbackWithCleanup/index.ts","../src/useHandleChangeCheck/index.ts","../src/useCheckInput/index.ts","../src/useCurrent/index.ts","../src/useCurryFunction/index.ts","../src/utils/rateLimit/debounce.ts","../src/useDebounce/index.ts","../src/useDebounceValue/index.ts","../src/useEffectOnce/index.ts","../src/useDidMount/index.ts","../src/useDidUpdate/index.ts","../src/useUpdatedLink/index.ts","../src/useFavicon/index.ts","../src/constants/common.ts","../src/usePromise/index.ts","../src/utils/FetchError.ts","../src/creators/createFetchHook.ts","../src/useFetch/index.ts","../src/useFetchArrayBuffer/index.ts","../src/useFetchBlob/index.ts","../src/useFetchFormData/index.ts","../src/useFetchStream/index.ts","../src/useFetchText/index.ts","../src/useTriggerUpdate/index.ts","../src/useForceUpdate/index.ts","../src/useToggleFullscreen/index.ts","../src/useFullscreen/index.ts","../src/useHandleChangeFile/index.ts","../src/useHandleChangeNumber/index.ts","../src/useHandleChangeText/index.ts","../src/useIntersectionObserverEffect/index.ts","../src/useInfiniteScroll/index.ts","../src/useIntersectionObserver/index.ts","../src/useInterval/index.ts","../src/useIsMounted/index.ts","../src/useLazyLoad/index.ts","../src/creators/createResourceHook.ts","../src/useLink/index.ts","../src/useMediaQuery/index.ts","../src/useMutationObserver/index.ts","../src/useNumberInput/index.ts","../src/useOnClickOutside/index.ts","../src/usePageVisibility/index.ts","../src/usePageVisibilityState/index.ts","../src/usePrevious/index.ts","../src/usePromiseCallback/index.ts","../src/useResizeObserver/index.ts","../src/utils/rateLimit/sample.ts","../src/useSample/index.ts","../src/useSampleValue/index.ts","../src/useScript/index.ts","../src/useScrollSpy/index.ts","../src/useTextInput/index.ts","../src/utils/rateLimit/throttle.ts","../src/useThrottle/index.ts","../src/useThrottleValue/index.ts","../src/useTimeout/index.ts","../src/useTimeoutCallback/index.ts","../src/useWillUnmount/index.ts","../src/useTitle/index.ts","../src/useToggle/index.ts","../src/useWindowBeforeUnload/index.ts","../src/useWindowScrollOffset/index.ts","../src/useWindowSize/index.ts","../src/useWorkerCallback/index.ts"],"sourcesContent":["import { DependencyList, useRef, useLayoutEffect } from 'react';\n\nconst useUpdatedRef = <TValue>(value: TValue, deps?: DependencyList) => {\n  const ref = useRef(value);\n\n  useLayoutEffect(() => {\n    ref.current = value;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  return ref;\n};\n\nexport default useUpdatedRef;\n","import { DependencyList, useEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useAnimationFrame = (\n  callback: FrameRequestCallback,\n  deps: DependencyList = [],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useEffect(() => {\n    const handle = requestAnimationFrame(time => callbackRef.current?.(time));\n\n    return () => cancelAnimationFrame(handle);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useAnimationFrame;\n","import { useReducer, useCallback, Reducer } from 'react';\n\nconst reducer = <TValue>(\n  state: readonly TValue[],\n  action: ArrayAction<TValue>,\n) => {\n  switch (action.type) {\n    case 'append':\n      return [...state, action.payload];\n\n    case 'prepend':\n      return [action.payload, ...state];\n\n    case 'filter':\n      return state.filter(action.payload);\n\n    default:\n      return state;\n  }\n};\n\nconst useArray = <TValue>(initialValue: readonly TValue[] = []) => {\n  const [array, dispatch] = useReducer<\n    Reducer<readonly TValue[], ArrayAction<TValue>>\n  >(reducer, initialValue);\n\n  const append = useCallback(\n    (item: TValue) => dispatch({ type: 'append', payload: item }),\n    [dispatch],\n  );\n\n  const prepend = useCallback(\n    (item: TValue) => dispatch({ type: 'prepend', payload: item }),\n    [dispatch],\n  );\n\n  const filter = useCallback(\n    (predicate: (value: TValue, index: number) => boolean) =>\n      dispatch({ type: 'filter', payload: predicate }),\n    [dispatch],\n  );\n\n  return [array, append, prepend, filter] as const;\n};\n\nexport default useArray;\n\ntype AppendAction<TValue> = { type: 'append'; payload: TValue };\ntype PrependAction<TValue> = { type: 'prepend'; payload: TValue };\ntype FilterAction<TValue> = {\n  type: 'filter';\n  payload: (value: TValue, index: number) => boolean;\n};\ntype ArrayAction<TValue> =\n  | AppendAction<TValue>\n  | PrependAction<TValue>\n  | FilterAction<TValue>;\n","import { BaseSyntheticEvent } from 'react';\nimport { PickFrom } from '../types/common';\n\nexport const createUniqueObject = () => ({});\n\nexport const isBrowser = () =>\n  typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\nexport const isSyntheticEvent = (o: any): o is BaseSyntheticEvent =>\n  o instanceof Object && o.nativeEvent instanceof Event;\n\nexport const getWindowScrollOffset = (): Offset =>\n  isBrowser() ? { x: window.scrollX, y: window.scrollY } : {};\n\nexport const getWindowSize = (): WindowSize =>\n  isBrowser()\n    ? {\n        innerWidth: window.innerWidth,\n        innerHeight: window.innerHeight,\n        outerWidth: window.outerWidth,\n        outerHeight: window.outerHeight,\n      }\n    : {};\n\nexport const persistEvent = (o: unknown) => isSyntheticEvent(o) && o.persist();\n\nexport const pickFrom = <TObject extends object, TKeys extends keyof TObject>(\n  o: TObject,\n  keys: TKeys[],\n) =>\n  (Object.fromEntries(keys.map(k => [k, o[k]])) as unknown) as PickFrom<\n    TObject,\n    TKeys\n  >;\n\nexport interface Offset {\n  x?: number;\n  y?: number;\n}\n\nexport interface WindowSize {\n  innerWidth?: number;\n  innerHeight?: number;\n  outerWidth?: number;\n  outerHeight?: number;\n}\n","/**\n * References:\n * https://github.com/imbhargav5/rooks/blob/dev/packages/debounce/src/useDebounce.ts\n */\n\nimport { useRef, useEffect, useCallback } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\nimport { persistEvent } from '../utils/common';\nimport { RateLimitFunctionWithOptions } from '../types/common';\n\nconst createRateLimitHook = <TOptions>(\n  rateLimit: RateLimitFunctionWithOptions<TOptions>,\n) => <TArgs extends any[], TReturn>(\n  func: (...args: TArgs) => TReturn,\n  wait: number,\n  options?: TOptions,\n) => {\n  const funcRef = useUpdatedRef(func);\n  const rateLimitedFuncRef = useRef(rateLimit(func, wait, options));\n\n  useEffect(() => {\n    rateLimitedFuncRef.current = rateLimit(\n      (...args) => funcRef.current(...args),\n      wait,\n      options,\n    );\n\n    return () => rateLimitedFuncRef.current?.cancel();\n  }, [funcRef, options, wait]);\n\n  return useCallback<(...args: TArgs) => TReturn | undefined>((...args) => {\n    args.forEach(persistEvent);\n    return rateLimitedFuncRef.current(...args);\n  }, []);\n};\n\nexport default createRateLimitHook;\n","import {\n  RateLimitFunction,\n  CancellableRateLimitedFunction,\n} from '../../types/common';\n\nconst audit: RateLimitFunction = <TArgs extends any[], TReturn>(\n  func: (...args: TArgs) => TReturn,\n  wait: number,\n) => {\n  let timeoutId: NodeJS.Timeout | null = null;\n  let lastArgs: TArgs | null = null;\n  let result: TReturn | undefined;\n\n  const ratedFunction: CancellableRateLimitedFunction<TArgs, TReturn> = (\n    ...args\n  ) => {\n    lastArgs = args;\n    if (timeoutId === null) {\n      timeoutId = setTimeout(() => {\n        if (lastArgs !== null) {\n          result = func(...lastArgs);\n          lastArgs = null;\n        }\n        timeoutId = null;\n      }, wait);\n    }\n    return result;\n  };\n\n  ratedFunction.cancel = () => {\n    if (timeoutId !== null) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = null;\n    lastArgs = null;\n  };\n\n  return ratedFunction;\n};\n\nexport default audit;\n","import createRateLimitHook from '../creators/createRateLimitHook';\nimport audit from '../utils/rateLimit/audit';\n\nconst useAudit = createRateLimitHook(audit);\n\nexport default useAudit;\n","import { useState, useRef, useEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\nimport { RateLimitFunctionWithOptions } from '../types/common';\n\nconst createRateLimitValueHook = <TOptions>(\n  rateLimit: RateLimitFunctionWithOptions<TOptions>,\n) => <TArgs extends any[], TReturn>(\n  func: (...args: TArgs) => TReturn,\n  args: TArgs,\n  wait: number,\n  options?: TOptions,\n) => {\n  const [value, setValue] = useState<TReturn>();\n  const funcRef = useUpdatedRef(func);\n  const rateLimitedFuncRef = useRef(rateLimit(func, wait, options));\n\n  useEffect(() => {\n    rateLimitedFuncRef.current = rateLimit(\n      (...currentArgs) => {\n        const result = funcRef.current(...currentArgs);\n        setValue(result);\n        return result;\n      },\n      wait,\n      options,\n    );\n\n    return () => rateLimitedFuncRef.current?.cancel();\n  }, [funcRef, options, wait]);\n\n  useEffect(() => {\n    rateLimitedFuncRef.current(...args);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, args);\n\n  return value;\n};\n\nexport default createRateLimitValueHook;\n","import createRateLimitValueHook from '../creators/createRateLimitValueHook';\nimport audit from '../utils/rateLimit/audit';\n\nconst useAuditValue = createRateLimitValueHook(audit);\n\nexport default useAuditValue;\n","/**\n * References:\n * https://github.com/donavon/use-event-listener\n * https://github.com/streamich/react-use/blob/master/src/useEvent.ts\n * https://github.com/adambrgmn/hooks/blob/master/src/use-event-listener/index.ts\n */\n\nimport { useRef, useEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst getEventTarget = <TElement>(element: ElementType<TElement>) =>\n  element instanceof Function ? element() : element;\n\nconst isElement = (target: EventTarget | null): target is Element =>\n  target instanceof Object && 'matches' in target;\n\nconst checkAndInvokeEventListener = (\n  listener: EventListener | null,\n  event: Event,\n  selectors: string | undefined,\n) => {\n  if (!listener) {\n    return;\n  }\n  if (\n    selectors &&\n    (!isElement(event.target) || !event.target.matches(selectors))\n  ) {\n    return;\n  }\n  listener(event);\n};\n\nconst useEvent: UseEvent = (\n  element: ElementType<EventTarget>,\n  eventNames: string | string[],\n  listener: EventListener | null,\n  {\n    capture,\n    once,\n    passive,\n    selectors,\n    usingAnimationFrame,\n    enabled = true,\n  }: UseEventOptions = {},\n) => {\n  const listenerRef = useUpdatedRef(listener);\n  const animationFrameRef = useRef(0);\n\n  useEffect(() => {\n    if (!enabled) {\n      return undefined;\n    }\n\n    const eventTarget = getEventTarget(element);\n    if (!eventTarget) {\n      return undefined;\n    }\n\n    const eventListener = (e: Event) => {\n      if (usingAnimationFrame) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = requestAnimationFrame(() =>\n          checkAndInvokeEventListener(listenerRef.current, e, selectors),\n        );\n      } else {\n        checkAndInvokeEventListener(listenerRef.current, e, selectors);\n      }\n    };\n\n    const eventNameList = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n    eventNameList.forEach(eventName =>\n      eventTarget.addEventListener(eventName, eventListener, {\n        capture,\n        once,\n        passive,\n      }),\n    );\n\n    return () => {\n      if (usingAnimationFrame && animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      eventNameList.forEach(eventName =>\n        eventTarget.removeEventListener(eventName, eventListener, { capture }),\n      );\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    element,\n    capture,\n    once,\n    passive,\n    selectors,\n    usingAnimationFrame,\n    enabled,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    ...eventNames,\n  ]);\n};\n\nexport default useEvent;\n\ninterface UseEvent {\n  <TEventName extends keyof WindowEventMap>(\n    element: ElementType<Window>,\n    eventNames: TEventName | TEventName[],\n    listener: (e: WindowEventMap[TEventName]) => void | null,\n    options?: UseEventOptions,\n  ): void;\n  <TEventName extends keyof DocumentEventMap>(\n    element: ElementType<Document>,\n    eventNames: TEventName | TEventName[],\n    listener: (e: DocumentEventMap[TEventName]) => void | null,\n    options?: UseEventOptions,\n  ): void;\n  <TEventName extends keyof HTMLElementEventMap>(\n    element: ElementType<HTMLElement>,\n    eventNames: TEventName | TEventName[],\n    listener: (e: HTMLElementEventMap[TEventName]) => void | null,\n    options?: UseEventOptions,\n  ): void;\n  (\n    element: ElementType<EventTarget>,\n    eventNames: string | string[],\n    listener: EventListener | null,\n    options?: UseEventOptions,\n  ): void;\n}\n\nexport interface UseEventOptions extends AddEventListenerOptions {\n  selectors?: string;\n  usingAnimationFrame?: boolean;\n  enabled?: boolean;\n}\n\ntype ElementType<TElement> =\n  | TElement\n  | null\n  | undefined\n  | false\n  | (() => TElement | null | undefined | false);\n","/**\n * References\n * https://github.com/streamich/react-use/blob/c0574064ca/src/useBeforeUnload.ts\n * https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n */\n\nimport useEvent from '../useEvent';\n\nconst useBeforeUnload = (\n  enabled: boolean | (() => boolean) = true,\n  message = '',\n) =>\n  useEvent(window, 'beforeunload', e => {\n    const isEnabled = typeof enabled === 'function' ? enabled() : enabled;\n    if (isEnabled) {\n      e.preventDefault();\n      e.returnValue = message;\n      return message;\n    }\n    return undefined;\n  });\n\nexport default useBeforeUnload;\n","import { DependencyList, useRef, useCallback } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useCallbackWithCleanup = <TArgs extends any[]>(\n  callback: (...args: TArgs) => void | VoidFunction,\n  deps: DependencyList = [],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n  const cleanupRef = useRef<void | VoidFunction>();\n\n  return useCallback((...args: TArgs) => {\n    if (cleanupRef.current) cleanupRef.current();\n    cleanupRef.current = callbackRef.current?.(...args);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useCallbackWithCleanup;\n","import { useCallback } from 'react';\nimport { CheckedTargetEvent } from '../types/common';\n\nconst useHandleChangeCheck = (\n  ...handlers: readonly ((checked: boolean) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { checked } }: CheckedTargetEvent) =>\n      handlers.forEach(handler => handler?.(Boolean(checked))),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeCheck;\n","import { useState } from 'react';\nimport useHandleChangeCheck from '../useHandleChangeCheck';\nimport { InitialState } from '../types/common';\n\nconst useCheckInput = (initialValue: InitialState<boolean> = false) => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = useHandleChangeCheck(setValue);\n  return [value, setValue, handleChange] as const;\n};\n\nexport default useCheckInput;\n","import { useRef } from 'react';\nimport { InitialState } from '../types/common';\n\nconst useCurrent = <TValue>(initialValue?: InitialState<TValue>) => {\n  const ref = useRef(initialValue);\n\n  return {\n    set: (value: TValue) => {\n      ref.current = value;\n    },\n    get: () => ref.current,\n    is: (value: TValue) => ref.current === value,\n  } as const;\n};\n\nexport default useCurrent;\n","import { useCallback } from 'react';\n\nconst useCurryFunction: UseCurryFunction = (\n  fn: (...args: any[]) => any,\n  thisArg: any = null,\n  ...args: any[]\n) =>\n  useCallback(\n    (...restArgs: any[]) => fn?.apply(thisArg, [...args, ...restArgs]),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [fn, ...args],\n  );\n\nexport default useCurryFunction;\n\ninterface UseCurryFunction {\n  <TFirstArg, TRestArgs extends any[], TReturn>(\n    func: (firstArg: TFirstArg, ...restArgs: TRestArgs) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n  ): (...args: TRestArgs) => TReturn;\n  <TFirstArg, TSecondArg, TRestArgs extends any[], TReturn>(\n    func: (\n      firstArg: TFirstArg,\n      secondArg: TSecondArg,\n      ...restArgs: TRestArgs\n    ) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n    secondArg: TSecondArg,\n  ): (...args: TRestArgs) => TReturn;\n  <TFirstArg, TSecondArg, TThirdArg, TRestArgs extends any[], TReturn>(\n    func: (\n      firstArg: TFirstArg,\n      secondArg: TSecondArg,\n      thirdArg: TThirdArg,\n      ...restArgs: TRestArgs\n    ) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n    secondArg: TSecondArg,\n    thirdArg: TThirdArg,\n  ): (...args: TRestArgs) => TReturn;\n  <\n    TFirstArg,\n    TSecondArg,\n    TThirdArg,\n    TForthArg,\n    TRestArgs extends any[],\n    TReturn\n  >(\n    func: (\n      firstArg: TFirstArg,\n      secondArg: TSecondArg,\n      thirdArg: TThirdArg,\n      forthArg: TForthArg,\n      ...restArgs: TRestArgs\n    ) => TReturn,\n    thisArg: any,\n    firstArg: TFirstArg,\n    secondArg: TSecondArg,\n    thirdArg: TThirdArg,\n    forthArg: TForthArg,\n  ): (...args: TRestArgs) => TReturn;\n}\n","import {\n  RateLimitFunctionWithOptions,\n  CancellableRateLimitedFunction,\n} from '../../types/common';\n\nconst debounce: RateLimitFunctionWithOptions<DebounceOptions> = <\n  TArgs extends any[],\n  TReturn\n>(\n  func: (...args: TArgs) => TReturn,\n  wait: number,\n  { leading, trailing }: DebounceOptions = { trailing: true },\n) => {\n  let lastArgs: TArgs | null = null;\n  let timeoutId: NodeJS.Timeout | null = null;\n  let result: TReturn | undefined;\n\n  const ratedFunction: CancellableRateLimitedFunction<TArgs, TReturn> = (\n    ...args\n  ) => {\n    lastArgs = args;\n\n    if (timeoutId !== null) {\n      clearTimeout(timeoutId);\n    } else if (leading) {\n      result = func(...lastArgs);\n      lastArgs = null;\n    }\n\n    timeoutId = setTimeout(() => {\n      if (trailing && lastArgs !== null) {\n        result = func(...lastArgs);\n        lastArgs = null;\n      }\n      timeoutId = null;\n    }, wait);\n\n    return result;\n  };\n\n  ratedFunction.cancel = () => {\n    if (timeoutId !== null) {\n      clearTimeout(timeoutId);\n    }\n    lastArgs = null;\n    timeoutId = null;\n  };\n\n  return ratedFunction;\n};\n\nexport default debounce;\n\nexport interface DebounceOptions {\n  leading?: boolean;\n  trailing?: boolean;\n}\n","import createRateLimitHook from '../creators/createRateLimitHook';\nimport debounce from '../utils/rateLimit/debounce';\n\nconst useDebounce = createRateLimitHook(debounce);\n\nexport default useDebounce;\n","import createRateLimitValueHook from '../creators/createRateLimitValueHook';\nimport debounce from '../utils/rateLimit/debounce';\n\nconst useDebounceValue = createRateLimitValueHook(debounce);\n\nexport default useDebounceValue;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useEffectOnce.ts\n */\n\nimport { EffectCallback, useEffect } from 'react';\n\nconst useEffectOnce = (effect: EffectCallback) => useEffect(effect, []);\n\nexport default useEffectOnce;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useMount.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useDidMount.js\n * https://github.com/imbhargav5/rooks/blob/dev/packages/shared/useDidMount.ts\n */\n\nimport useEffectOnce from '../useEffectOnce';\n\nconst useDidMount = (callback: VoidFunction) => useEffectOnce(callback);\n\nexport default useDidMount;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useUpdateEffect.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useDidUpdate.js\n */\n\nimport { EffectCallback, DependencyList, useRef, useEffect } from 'react';\n\nconst useDidUpdate = (callback: EffectCallback, deps?: DependencyList) => {\n  const didMountRef = useRef(false);\n\n  useEffect(\n    didMountRef.current\n      ? callback\n      : () => {\n          didMountRef.current = true;\n        },\n    deps,\n  );\n};\n\nexport default useDidUpdate;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/c0574064ca/src/useFavicon.ts\n */\n\nimport { useEffect, DependencyList } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useUpdatedLink = (\n  attrs: Partial<HTMLLinkElement>,\n  selector: string | (() => HTMLLinkElement),\n  deps: DependencyList = [],\n) => {\n  const selectorRef = useUpdatedRef(selector);\n\n  useEffect(() => {\n    const linkSelector = selectorRef.current;\n    const link =\n      (typeof linkSelector === 'function'\n        ? linkSelector()\n        : document.querySelector(linkSelector)) ||\n      document.createElement('link');\n\n    if (link instanceof HTMLLinkElement) {\n      Object.assign(link, attrs);\n      document.head.appendChild(link);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useUpdatedLink;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/c0574064ca/src/useFavicon.ts\n */\n\nimport useUpdatedLink from '../useUpdatedLink';\n\nconst useFavicon = (href: string) =>\n  useUpdatedLink(\n    { href, rel: `shortcut icon`, type: `image/x-icon` },\n    `link[rel='shortcut icon']`,\n    [href],\n  );\n\nexport default useFavicon;\n","import { AsyncState } from '../types/common';\n\nexport const PENDING_STATE: AsyncState<any, any> = { loading: false };\nexport const LOADING_STATE: AsyncState<any, any> = { loading: true };\n","/**\n * References:\n * https://github.com/jacob-ebey/react-hook-utils/blob/master/src/usePromise.js\n * https://github.com/aiven715/promise-hook/blob/master/src/index.js\n * https://github.com/streamich/react-use/blob/master/src/useAsyncFn.ts\n * https://github.com/adambrgmn/hooks/blob/master/src/use-promise/index.ts\n */\n\nimport { DependencyList, useState, useEffect } from 'react';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { InitialState, AsyncState } from '../types/common';\n\nconst usePromise = <TResult, TError = unknown>(\n  promiseFactory: () => Promise<TResult> | false | undefined | null,\n  deps: DependencyList = [],\n  initialState: InitialState<AsyncState<TResult, TError>> = PENDING_STATE,\n  cleanup?: VoidFunction,\n) => {\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    let isCancelled = false;\n    const promise = promiseFactory();\n\n    if (!promise) {\n      setState(PENDING_STATE);\n      return undefined;\n    }\n\n    setState(LOADING_STATE);\n\n    promise\n      .then(result => {\n        if (!isCancelled) setState({ loading: false, result });\n      })\n      .catch(error => {\n        if (!isCancelled) setState({ loading: false, error });\n      });\n\n    return () => {\n      isCancelled = true;\n      cleanup?.();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  return state;\n};\n\nexport default usePromise;\n\nexport type PromiseState<TResult = unknown, TError = unknown> =\n  | {\n      loading: boolean;\n      result?: undefined;\n      error?: undefined;\n    }\n  | {\n      loading: false;\n      result: TResult;\n      error?: undefined;\n    }\n  | {\n      loading: false;\n      result?: undefined;\n      error: TError;\n    };\n","export default class FetchError extends Error {\n  constructor(statusText: string, readonly status: number) {\n    super(statusText || 'Fetch Error');\n  }\n}\n","/**\n * References:\n * https://github.com/mauricedb/use-abortable-fetch\n * https://medium.com/better-programming/learn-to-create-your-own-usefetch-react-hook-9cc31b038e53\n * https://github.com/ilyalesik/react-fetch-hook\n * https://github.com/raghav-grover/use-fetcher\n * https://github.com/alex-cory/use-http/blob/1d42e236846f7dc2ae13f6ad2861bb986252563a/src/useFetch.ts\n * https://github.com/franlol/useFetch\n */\n\nimport { useRef, DependencyList } from 'react';\nimport usePromise from '../usePromise';\nimport FetchError from '../utils/FetchError';\nimport { ValueOrFunction, AsyncState, OmitFrom } from '../types/common';\n\nconst createFetchHook = <TResult>(\n  fetchFn: (input: RequestInfo, init?: RequestInit) => Promise<Response>,\n  getResult: (res: Response) => Promise<TResult>,\n) => <TAsyncResult extends TResult = TResult>(\n  input: RequestInfo,\n  init?: OmitFrom<RequestInit, 'signal'>,\n  deps?: DependencyList,\n  initialState?: ValueOrFunction<AsyncState<TAsyncResult, FetchError>>,\n) => {\n  const abortControllerRef = useRef<AbortController>();\n\n  return usePromise<TAsyncResult, FetchError>(\n    async () => {\n      const abortController = new AbortController();\n      abortControllerRef.current = abortController;\n      const res = await fetchFn(input, {\n        ...init,\n        signal: abortController.signal,\n      });\n      if (res.ok) {\n        const result = (await getResult(res)) as TAsyncResult;\n        return result;\n      }\n      throw new FetchError(res.statusText, res.status);\n    },\n    deps,\n    initialState,\n    () => abortControllerRef.current?.abort(),\n  );\n};\n\nexport default createFetchHook;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetch = createFetchHook(fetch, res => res.json());\n\nexport default useFetch;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchArrayBuffer = createFetchHook(fetch, res => res.arrayBuffer());\n\nexport default useFetchArrayBuffer;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchBlob = createFetchHook(fetch, res => res.blob());\n\nexport default useFetchBlob;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchFormData = createFetchHook(fetch, res => res.formData());\n\nexport default useFetchFormData;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchStream = createFetchHook(fetch, res => Promise.resolve(res.body));\n\nexport default useFetchStream;\n","import createFetchHook from '../creators/createFetchHook';\n\nconst useFetchText = createFetchHook(fetch, res => res.text());\n\nexport default useFetchText;\n","import { useReducer } from 'react';\nimport { createUniqueObject } from '../utils/common';\n\nconst useTriggerUpdate = () =>\n  useReducer(createUniqueObject, createUniqueObject());\n\nexport default useTriggerUpdate;\n","/**\n * References:\n * https://github.com/CharlesStover/use-force-update\n * https://reactjs.org/docs/hooks-faq.html#is-there-something-like-forceupdate\n */\n\nimport useTriggerUpdate from '../useTriggerUpdate';\n\nconst useForceUpdate = () => useTriggerUpdate()[1];\n\nexport default useForceUpdate;\n","/**\n * References:\n * https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API/Guide\n * https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API\n */\n\nimport { RefObject, useCallback } from 'react';\nimport useEvent from '../useEvent';\n\nconst useToggleFullscreen = (\n  elementRef: RefObject<Element>,\n  onChange: EventListener | null = null,\n  onError: EventListener | null = null,\n) => {\n  const toggleFullscreen = useCallback(\n    (show?: boolean) => {\n      if (\n        document.fullscreenElement &&\n        (show === false || show === undefined)\n      ) {\n        document.exitFullscreen();\n      }\n\n      if (\n        !document.fullscreenElement &&\n        (show === true || show === undefined)\n      ) {\n        // eslint-disable-next-line no-unused-expressions\n        elementRef.current?.requestFullscreen?.();\n      }\n    },\n    [elementRef],\n  );\n\n  useEvent(document, 'fullscreenchange', onChange);\n  useEvent(document, 'fullscreenerror', onError);\n\n  return toggleFullscreen;\n};\n\nexport default useToggleFullscreen;\n","import { useState, RefObject } from 'react';\nimport useToggleFullscreen from '../useToggleFullscreen';\nimport useCurryFunction from '../useCurryFunction';\n\nconst useFullscreen = (elementRef: RefObject<Element>) => {\n  const [fullscreen, setFullscreen] = useState(false);\n  const isFullscreen = () =>\n    !!document.fullscreenElement &&\n    document.fullscreenElement === elementRef.current;\n  const handleChange = () => setFullscreen(isFullscreen());\n  const toggleFullscreen = useToggleFullscreen(elementRef, handleChange);\n  const enterFullscreen = useCurryFunction(toggleFullscreen, null, true);\n  const exitFullscreen = useCurryFunction(toggleFullscreen, null, false);\n  return [\n    fullscreen,\n    toggleFullscreen,\n    enterFullscreen,\n    exitFullscreen,\n  ] as const;\n};\n\nexport default useFullscreen;\n","import { useCallback } from 'react';\nimport { FilesTargetEvent } from '../types/common';\n\nconst useHandleChangeFile = (\n  ...handlers: readonly ((files: FileList | null) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { files } }: FilesTargetEvent) =>\n      handlers.forEach(handler => handler?.(files)),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeFile;\n","import { useCallback } from 'react';\nimport { ValueTargetEvent } from '../types/common';\n\nconst useHandleChangeNumber = (\n  ...handlers: readonly ((value: number) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { value } }: ValueTargetEvent<string>) =>\n      handlers.forEach(handler => handler?.(Number(value))),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeNumber;\n","import { useCallback } from 'react';\nimport { ValueTargetEvent } from '../types/common';\n\nconst useHandleChangeText = (\n  ...handlers: readonly ((text: string) => void | undefined)[]\n) =>\n  useCallback(\n    ({ target: { value } }: ValueTargetEvent<string>) =>\n      handlers.forEach(handler => handler?.(String(value))),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    handlers,\n  );\n\nexport default useHandleChangeText;\n","import { DependencyList, useLayoutEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useIntersectionObserverEffect = (\n  getTargets: () => Element[] | undefined | null,\n  callback: IntersectionObserverCallback,\n  options?: IntersectionObserverInit,\n  deps: DependencyList = [],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useLayoutEffect(() => {\n    const targets = getTargets();\n\n    if (!targets || !targets.length) return undefined;\n\n    const observer = new IntersectionObserver(\n      (entries, currentObserver) =>\n        callbackRef.current?.(entries, currentObserver),\n      options,\n    );\n    targets.forEach(target => observer.observe(target));\n\n    return () => observer.disconnect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useIntersectionObserverEffect;\n","import { RefObject, useRef } from 'react';\nimport useIntersectionObserverEffect from '../useIntersectionObserverEffect';\n\nconst isIntersectingObserverInit = (\n  o: unknown,\n): o is IntersectionObserverInit => o instanceof Object;\n\nconst useInfiniteScroll: UseInfiniteScroll = (\n  elementRef: RefObject<Element>,\n  loadMore: () => void | Promise<unknown>,\n  ...args: any[]\n) => {\n  const loadingRef = useRef<boolean>(false);\n  const loading: boolean | undefined =\n    typeof args[0] === 'boolean' ? args[0] : undefined;\n  const options:\n    | IntersectionObserverInit\n    | undefined = isIntersectingObserverInit(args[0])\n    ? args[0]\n    : isIntersectingObserverInit(args[1])\n    ? args[1]\n    : undefined;\n\n  useIntersectionObserverEffect(\n    () => elementRef.current && [elementRef.current],\n    async entries => {\n      if (\n        loading ||\n        loadingRef.current ||\n        entries.every(({ isIntersecting }) => !isIntersecting)\n      ) {\n        return;\n      }\n\n      loadingRef.current = true;\n\n      try {\n        await Promise.resolve(loadMore());\n      } catch {\n        // Do nothing\n      }\n\n      loadingRef.current = false;\n    },\n    options,\n  );\n};\n\nexport default useInfiniteScroll;\n\nexport interface UseInfiniteScroll {\n  (\n    elementRef: RefObject<Element>,\n    loadMore: () => Promise<unknown>,\n    options?: IntersectionObserverInit,\n  ): void;\n  (\n    elementRef: RefObject<Element>,\n    loadMore: VoidFunction,\n    loading: boolean,\n    options?: IntersectionObserverInit,\n  ): void;\n}\n","/**\n * References:\n * https://github.com/adambrgmn/hooks/blob/master/src/use-in-view/index.ts\n * https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n */\n\nimport { RefObject } from 'react';\nimport useIntersectionObserverEffect from '../useIntersectionObserverEffect';\n\nconst useIntersectionObserver = (\n  elementRef: RefObject<Element>,\n  callback: IntersectionObserverCallback,\n  options?: IntersectionObserverInit,\n) =>\n  useIntersectionObserverEffect(\n    () => elementRef.current && [elementRef.current],\n    callback,\n    options,\n    [options],\n  );\n\nexport default useIntersectionObserver;\n","/**\n * References:\n * https://github.com/dispix/react-pirate/blob/master/src/useInterval.js\n * https://github.com/donavon/use-interval\n */\n\nimport { DependencyList, useEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useInterval = (\n  callback: VoidFunction | undefined | null,\n  {\n    period,\n    leading,\n    running,\n    deps = [period, leading, running],\n  }: UseIntervalSettings,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useEffect(() => {\n    let handle: NodeJS.Timeout;\n\n    if (running) {\n      // eslint-disable-next-line no-unused-expressions\n      if (leading) callbackRef.current?.();\n      handle = setInterval(() => callbackRef.current?.(), period);\n    }\n\n    return () => {\n      if (handle) clearInterval(handle);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useInterval;\n\nexport interface UseIntervalSettings {\n  deps?: DependencyList;\n  leading?: boolean;\n  period: number;\n  running?: boolean;\n}\n","/**\n * References:\n * https://github.com/adambrgmn/hooks/blob/master/src/use-is-mounted/index.ts\n * https://github.com/hupe1980/react-is-mounted-hook/blob/master/src/use-is-mounted.tsx\n * https://github.com/streamich/react-use/blob/master/src/useRefMounted.ts\n */\n\nimport { useRef, useCallback } from 'react';\nimport useEffectOnce from '../useEffectOnce';\n\nconst useIsMounted = () => {\n  const isMountedRef = useRef(false);\n\n  useEffectOnce(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  });\n\n  return useCallback(() => isMountedRef.current, []);\n};\n\nexport default useIsMounted;\n","/* eslint-disable no-param-reassign */\nimport { useRef, useCallback } from 'react';\nimport useIntersectionObserverEffect from '../useIntersectionObserverEffect';\n\nconst defaultGetSrc = (image: HTMLImageElement) => image.dataset.src;\n\nconst useLazyLoad = ({\n  getSrc = defaultGetSrc,\n  ...options\n}: UseLazyLoadOptions = {}) => {\n  const imageMapRef = useRef(new Map<HTMLImageElement, string>());\n\n  const register = useCallback(\n    (arg: string | HTMLImageElement) => {\n      if (typeof arg === 'string') {\n        const src = arg;\n\n        return (image: HTMLImageElement) => {\n          imageMapRef.current.set(image, src);\n        };\n      }\n\n      if (arg instanceof HTMLImageElement) {\n        const image = arg;\n        const src = getSrc(image);\n\n        if (src) {\n          imageMapRef.current.set(image, src);\n        }\n      }\n\n      return undefined;\n    },\n    [getSrc],\n  ) as UseLazyLoadRegister;\n\n  useIntersectionObserverEffect(\n    () => Array.from(imageMapRef.current.keys()),\n    (entries, currentObserver) =>\n      entries.forEach(({ isIntersecting, target }) => {\n        if (!isIntersecting || !(target instanceof HTMLImageElement)) return;\n\n        const src = imageMapRef.current.get(target) || getSrc(target);\n\n        if (src) {\n          target.src = src;\n        }\n\n        currentObserver.unobserve(target);\n      }),\n    options,\n  );\n\n  return register;\n};\n\nexport default useLazyLoad;\n\nexport interface UseLazyLoadOptions extends IntersectionObserverInit {\n  getSrc?: (image: HTMLImageElement) => string | null | undefined;\n}\n\nexport interface UseLazyLoadRegister {\n  (image: HTMLImageElement): void;\n  (src: string): (image: HTMLImageElement) => void;\n}\n","/**\n * References:\n * https://github.com/hupe1980/react-script-hook/blob/master/src/use-script.tsx\n */\n\nimport { useState, useEffect } from 'react';\nimport useIsMounted from '../useIsMounted';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { InitialState, AsyncState } from '../types/common';\n\nconst createResourceHook = <TAttrs extends Partial<HTMLElement>>(\n  tagName: 'script' | 'link',\n  isValid: (attrs: TAttrs) => boolean,\n  insert: (element: HTMLElement) => void,\n) => (\n  attrs: TAttrs,\n  initialState: InitialState<AsyncState> = PENDING_STATE,\n) => {\n  const isMounted = useIsMounted();\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    if (!isValid(attrs)) {\n      setState(PENDING_STATE);\n      return undefined;\n    }\n\n    const element = ((attrs.id &&\n      document.querySelector(`${tagName}#${attrs.id}`)) ||\n      document.createElement(tagName)) as HTMLScriptElement;\n\n    Object.assign(element, attrs);\n\n    const handleLoad = () => {\n      if (isMounted()) {\n        setState(PENDING_STATE);\n      }\n    };\n\n    const handleError = (e: ErrorEvent) => {\n      if (isMounted()) {\n        setState({ loading: false, error: e.error });\n      }\n    };\n\n    element.addEventListener('load', handleLoad, false);\n    element.addEventListener('error', handleError, false);\n\n    setState(LOADING_STATE);\n    insert(element);\n\n    return () => {\n      element.removeEventListener('load', handleLoad, false);\n      element.removeEventListener('error', handleError, false);\n    };\n  }, [attrs, isMounted]);\n\n  return state;\n};\n\nexport default createResourceHook;\n","import createResourceHook from '../creators/createResourceHook';\nimport { isBrowser } from '../utils/common';\n\nconst useLink = createResourceHook<Partial<HTMLLinkElement>>(\n  'link',\n  ({ href }) =>\n    isBrowser() && !!href && !document.querySelector(`link[href=\"${href}\"]`),\n  element => document.head.appendChild(element),\n);\n\nexport default useLink;\n","/**\n * References:\n * https://material-ui.com/components/use-media-query/\n * https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/useMediaQuery/useMediaQuery.js\n * https://github.com/streamich/react-use/blob/master/src/useMedia.ts\n * https://github.com/jaredpalmer/the-platform/blob/master/src/useMedia.tsx\n * https://usehooks.com/useMedia/\n * https://github.com/ReactTraining/react-media\n * https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\n * https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList\n * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries\n * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n * https://gomakethings.com/a-better-way-to-test-breakpoints-with-vanilla-javascript/\n * https://github.com/akiran/json2mq\n */\n\nimport { useState, useEffect } from 'react';\nimport json2mq, { QueryObject } from 'json2mq';\nimport { pickFrom, isBrowser } from '../utils/common';\nimport { PickFrom, InitialState } from '../types/common';\n\nconst getMediaResult = (mql: MediaQueryList): MediaResult =>\n  pickFrom(mql, ['matches', 'media']);\n\nconst useMediaQuery = (\n  query: string | QueryObject,\n  initialState: InitialState<MediaResult> = { media: '', matches: false },\n) => {\n  const queryStr = typeof query === 'string' ? query : json2mq(query);\n  const [result, setResult] = useState(\n    isBrowser()\n      ? () => getMediaResult(window.matchMedia(queryStr))\n      : initialState,\n  );\n\n  useEffect(() => {\n    const mql = window.matchMedia(queryStr);\n    const onChange = (e: MediaQueryListEvent) => {\n      setResult(e);\n    };\n    setResult(getMediaResult(mql));\n    mql.addListener(onChange);\n    return () => mql.removeListener(onChange);\n  }, [queryStr]);\n\n  return result;\n};\n\nexport default useMediaQuery;\n\nexport type MediaResult = PickFrom<MediaQueryList, 'matches' | 'media'>;\n","/**\n * References:\n * https://github.com/imbhargav5/rooks/blob/dev/packages/shared/useMutationObserver.ts\n * https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n */\n\nimport { useLayoutEffect, RefObject } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useMutationObserver = <TNode extends Node>(\n  nodeRef: RefObject<TNode>,\n  callback: MutationCallback,\n  options?: MutationObserverInit,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useLayoutEffect(() => {\n    if (!nodeRef.current) return undefined;\n\n    const observer = new MutationObserver((mutation, currentObserver) =>\n      callbackRef.current?.(mutation, currentObserver),\n    );\n    observer.observe(nodeRef.current, options);\n\n    return () => observer.disconnect();\n  }, [callbackRef, nodeRef, options]);\n};\n\nexport default useMutationObserver;\n","import { useState } from 'react';\nimport useHandleChangeNumber from '../useHandleChangeNumber';\nimport { InitialState } from '../types/common';\n\nconst useNumberInput = (initialValue: InitialState<number> = 0) => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = useHandleChangeNumber(setValue);\n  return [value, setValue, handleChange] as const;\n};\n\nexport default useNumberInput;\n","/**\n * References:\n * https://usehooks.com/useOnClickOutside/\n * https://github.com/sandiiarov/use-events/blob/master/src/useClickOutside/index.tsx\n * https://github.com/Andarist/use-onclickoutside/blob/master/src/index.ts\n * https://github.com/streamich/react-use/blob/master/src/useClickAway.ts\n * https://github.com/imbhargav5/rooks/blob/dev/packages/outside-click/src/useOutsideClick.ts\n */\n\nimport { RefObject } from 'react';\nimport useEvent from '../useEvent';\n\nconst useOnClickOutside = (\n  nodeRef: RefObject<Node>,\n  handleClickOutside: ClickHandler,\n) =>\n  useEvent(document, ['mousedown', 'touchstart'], e => {\n    if (\n      handleClickOutside &&\n      nodeRef.current &&\n      !nodeRef.current.contains(e.target as Node)\n    ) {\n      handleClickOutside(e);\n    }\n  });\n\nexport default useOnClickOutside;\n\nexport type ClickHandler = (e: TouchEvent | MouseEvent) => void;\n","import useEvent from '../useEvent';\n\nconst usePageVisibility = (callback: (state: VisibilityState) => void) =>\n  useEvent(document, 'visibilitychange', () =>\n    callback?.(document.visibilityState),\n  );\n\nexport default usePageVisibility;\n","import { useState } from 'react';\nimport usePageVisibility from '../usePageVisibility';\n\nconst usePageVisibilityState = () => {\n  const [state, setState] = useState(document.visibilityState);\n  usePageVisibility(setState);\n  return state;\n};\n\nexport default usePageVisibilityState;\n","/**\n * References:\n * https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n * https://github.com/Andarist/use-previous\n * https://github.com/dispix/react-pirate\n * https://github.com/imbhargav5/rooks/tree/dev/packages/previous\n * https://github.com/kitze/react-hanger\n * https://github.com/zakariaharti/react-hookedup\n * https://github.com/imbhargav5/rooks/blob/dev/packages/previous/src/usePrevious.ts\n */\n\nimport { useRef, useEffect } from 'react';\n\nconst usePrevious = <TValue>(value: TValue) => {\n  const prevRef = useRef<TValue>();\n\n  useEffect(() => {\n    prevRef.current = value;\n  });\n\n  return prevRef.current;\n};\n\nexport default usePrevious;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useAsyncFn.ts\n * https://github.com/adambrgmn/hooks/blob/master/src/use-promise/index.ts\n */\n\nimport { DependencyList, useState, useCallback } from 'react';\nimport useIsMounted from '../useIsMounted';\nimport useCurrent from '../useCurrent';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { InitialState, AsyncState } from '../types/common';\n\nconst usePromiseCallback = <TArgs extends any[], TResult, TError = unknown>(\n  promiseFactory: (\n    ...args: TArgs\n  ) => Promise<TResult> | false | undefined | null,\n  deps: DependencyList = [],\n  initialState: InitialState<AsyncState<TResult, TError>> = PENDING_STATE,\n) => {\n  const isMounted = useIsMounted();\n  const [state, setState] = useState(initialState);\n  const currentPromise = useCurrent<\n    Promise<TResult> | false | undefined | null\n  >();\n\n  const callback = useCallback(\n    (...args: TArgs) => {\n      const promise = promiseFactory(...args);\n      currentPromise.set(promise);\n\n      if (!promise) {\n        setState(PENDING_STATE);\n        return;\n      }\n\n      setState(LOADING_STATE);\n\n      promise\n        .then(result => {\n          if (currentPromise.is(promise) && isMounted()) {\n            setState({ loading: false, result });\n          }\n        })\n        .catch(error => {\n          if (currentPromise.is(promise) && isMounted()) {\n            setState({ loading: false, error });\n          }\n        });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    deps,\n  );\n\n  return [state, callback] as const;\n};\n\nexport default usePromiseCallback;\n","import { RefObject, useLayoutEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useResizeObserver = (\n  elementRef: RefObject<Element>,\n  callback: ResizeObserverCallback,\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useLayoutEffect(() => {\n    if (!elementRef.current) return undefined;\n\n    const observer = new ResizeObserver(entries =>\n      callbackRef.current?.(entries),\n    );\n    observer.observe(elementRef.current);\n\n    return () => observer.disconnect();\n  }, [callbackRef, elementRef]);\n};\n\nexport default useResizeObserver;\n","import {\n  RateLimitFunction,\n  CancellableRateLimitedFunction,\n} from '../../types/common';\n\nconst sample: RateLimitFunction = <TArgs extends any[], TReturn>(\n  func: (...args: TArgs) => TReturn,\n  wait: number,\n) => {\n  let lastArgs: TArgs | null = null;\n  let result: TReturn | undefined;\n\n  const intervalId = setInterval(() => {\n    if (lastArgs) {\n      result = func(...lastArgs);\n      lastArgs = null;\n    }\n  }, wait);\n\n  const ratedFunction: CancellableRateLimitedFunction<TArgs, TReturn> = (\n    ...args\n  ) => {\n    lastArgs = args;\n    return result;\n  };\n\n  ratedFunction.cancel = () => {\n    clearInterval(intervalId);\n    lastArgs = null;\n  };\n\n  return ratedFunction;\n};\n\nexport default sample;\n","import createRateLimitHook from '../creators/createRateLimitHook';\nimport sample from '../utils/rateLimit/sample';\n\nconst useSample = createRateLimitHook(sample);\n\nexport default useSample;\n","import createRateLimitValueHook from '../creators/createRateLimitValueHook';\nimport sample from '../utils/rateLimit/sample';\n\nconst useSampleValue = createRateLimitValueHook(sample);\n\nexport default useSampleValue;\n","import createResourceHook from '../creators/createResourceHook';\nimport { isBrowser } from '../utils/common';\n\nconst useScript = createResourceHook<Partial<HTMLScriptElement>>(\n  'script',\n  ({ src }) =>\n    isBrowser() && !!src && !document.querySelector(`script[src=\"${src}\"]`),\n  element => document.body.appendChild(element),\n);\n\nexport default useScript;\n","import { useRef, useCallback, useState } from 'react';\nimport useIntersectionObserverEffect from '../useIntersectionObserverEffect';\n\nconst defaultGetId = <TElement extends Element>(element: TElement) =>\n  element?.getAttribute('id');\n\nconst isElement = <TElement extends Element>(o: unknown): o is TElement =>\n  o instanceof Element;\n\nconst useScrollSpy = <TElement extends Element = Element>(\n  { getId = defaultGetId, ...options }: UseScrollSpyOptions<TElement> = {\n    threshold: 1,\n  },\n) => {\n  const [id, setId] = useState<string>();\n  const elementMapRef = useRef(new Map<TElement, string>());\n  const intersectingElementsRef = useRef(new Set<TElement>());\n\n  const register = useCallback(\n    (arg: string | TElement) => {\n      if (typeof arg === 'string') {\n        const elementId = arg;\n\n        return (element: TElement) => {\n          elementMapRef.current.set(element, elementId);\n        };\n      }\n\n      if (isElement<TElement>(arg)) {\n        const element = arg;\n        const elementId = getId(element);\n\n        if (elementId) {\n          elementMapRef.current.set(element, elementId);\n        }\n      }\n\n      return undefined;\n    },\n    [getId],\n  ) as UseScrollSpyRegister<TElement>;\n\n  useIntersectionObserverEffect(\n    () => Array.from(elementMapRef.current.keys()),\n    entries => {\n      entries.forEach(({ isIntersecting, target }) => {\n        if (isIntersecting) {\n          intersectingElementsRef.current.add(target as TElement);\n        } else {\n          intersectingElementsRef.current.delete(target as TElement);\n        }\n      });\n\n      if (!intersectingElementsRef.current.size) return;\n\n      const selectedElement = Array.from(\n        intersectingElementsRef.current,\n      ).reduce((prev, curr) =>\n        prev.getBoundingClientRect().top < curr.getBoundingClientRect().top\n          ? prev\n          : curr,\n      );\n\n      const newId =\n        elementMapRef.current.get(selectedElement) || getId(selectedElement);\n\n      if (typeof newId === 'string') {\n        setId(newId);\n      }\n    },\n    options,\n  );\n\n  return [id, register] as const;\n};\n\nexport default useScrollSpy;\n\nexport interface UseScrollSpyOptions<TElement extends Element>\n  extends IntersectionObserverInit {\n  getId?: (element: TElement) => string | null | undefined;\n}\n\nexport interface UseScrollSpyRegister<TElement extends Element> {\n  (element: TElement): void;\n  (id: string): (element: TElement) => void;\n}\n","import { useState } from 'react';\nimport useHandleChangeText from '../useHandleChangeText';\nimport { InitialState } from '../types/common';\n\nconst useTextInput = (initialValue: InitialState<string> = '') => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = useHandleChangeText(setValue);\n  return [value, setValue, handleChange] as const;\n};\n\nexport default useTextInput;\n","import {\n  RateLimitFunctionWithOptions,\n  CancellableRateLimitedFunction,\n} from '../../types/common';\n\nconst throttle: RateLimitFunctionWithOptions<ThrottleOptions> = <\n  TArgs extends any[],\n  TReturn\n>(\n  func: (...args: TArgs) => TReturn,\n  wait: number,\n  { leading, trailing }: ThrottleOptions = { leading: true, trailing: true },\n) => {\n  let lastArgs: TArgs | null = null;\n  let timeoutId: NodeJS.Timeout | null = null;\n  let result: TReturn | undefined;\n\n  const ratedFunction: CancellableRateLimitedFunction<TArgs, TReturn> = (\n    ...args\n  ) => {\n    lastArgs = args;\n\n    if (timeoutId === null) {\n      if (leading) {\n        result = func(...lastArgs);\n        lastArgs = null;\n      }\n\n      timeoutId = setTimeout(() => {\n        if (trailing && lastArgs !== null) {\n          result = func(...lastArgs);\n          lastArgs = null;\n        }\n        timeoutId = null;\n      }, wait);\n    }\n\n    return result;\n  };\n\n  ratedFunction.cancel = () => {\n    if (timeoutId !== null) {\n      clearTimeout(timeoutId);\n    }\n    lastArgs = null;\n    timeoutId = null;\n  };\n\n  return ratedFunction;\n};\n\nexport default throttle;\n\nexport interface ThrottleOptions {\n  leading?: boolean;\n  trailing?: boolean;\n}\n","import createRateLimitHook from '../creators/createRateLimitHook';\nimport throttle from '../utils/rateLimit/throttle';\n\nconst useThrottle = createRateLimitHook(throttle);\n\nexport default useThrottle;\n","import createRateLimitValueHook from '../creators/createRateLimitValueHook';\nimport throttle from '../utils/rateLimit/throttle';\n\nconst useThrottleValue = createRateLimitValueHook(throttle);\n\nexport default useThrottleValue;\n","/**\n * References:\n * https://github.com/dispix/react-pirate/blob/master/src/useTimeout.js\n * https://github.com/imbhargav5/rooks/blob/master/packages/timeout/src/useTimeout.ts\n */\n\nimport { DependencyList, useEffect } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\n\nconst useTimeout = (\n  callback: VoidFunction,\n  ms: number,\n  deps: DependencyList = [ms],\n) => {\n  const callbackRef = useUpdatedRef(callback);\n\n  useEffect(() => {\n    const handle = setTimeout(() => callbackRef.current?.(), ms);\n    return () => clearTimeout(handle);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useTimeout;\n","import { useRef, useCallback } from 'react';\nimport useUpdatedRef from '../useUpdatedRef';\nimport useDidMount from '../useDidMount';\n\nconst useTimeoutCallback = (callback: VoidFunction, ms: number) => {\n  const callbackRef = useUpdatedRef(callback);\n  const timeoutRef = useRef<TimeoutObject>();\n\n  useDidMount(() => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current.handle);\n      timeoutRef.current.resolve();\n    }\n  });\n\n  const timeoutCallback = useCallback(\n    () =>\n      new Promise<void>(resolve => {\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current.handle);\n          timeoutRef.current.resolve();\n        }\n        const handle = setTimeout(() => {\n          // eslint-disable-next-line no-unused-expressions\n          callbackRef.current?.();\n          resolve();\n        }, ms);\n        timeoutRef.current = { handle, resolve };\n      }),\n    [callbackRef, ms],\n  );\n\n  return timeoutCallback;\n};\n\nexport default useTimeoutCallback;\n\ninterface TimeoutObject {\n  handle: NodeJS.Timeout;\n  resolve: VoidFunction;\n}\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useUnmount.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useWillUnmount.js\n * https://github.com/imbhargav5/rooks/blob/dev/packages/will-unmount/src/useWillUnmount.ts\n */\n\nimport useEffectOnce from '../useEffectOnce';\n\nconst useWillUnmount = (callback: VoidFunction) =>\n  useEffectOnce(() => callback);\n\nexport default useWillUnmount;\n","/**\n * References:\n * https://github.com/withvoid/melting-pot/blob/master/src/hooks/useTitle.js\n * https://github.com/streamich/react-use/blob/master/src/useTitle.ts\n */\n\nimport { useRef, useEffect } from 'react';\nimport useWillUnmount from '../useWillUnmount';\n\nconst useTitle = (title: string, options?: UseTitleOptions) => {\n  const titleRef = useRef(document.title);\n\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  useWillUnmount(() => {\n    if (options?.restoreOnUnmount) {\n      document.title = titleRef.current;\n    }\n  });\n};\n\nexport default useTitle;\n\nexport interface UseTitleOptions {\n  restoreOnUnmount?: boolean;\n}\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useToggle.ts\n * https://github.com/beizhedenglong/react-hooks-lib/blob/master/src/hooks/useToggle.js\n */\n\nimport { useState, useCallback } from 'react';\nimport useCurryFunction from '../useCurryFunction';\nimport { InitialState } from '../types/common';\n\nconst useToggle = (initialValue: InitialState<boolean> = false) => {\n  const [value, setValue] = useState(initialValue);\n  const toggle = useCallback(() => setValue(prevValue => !prevValue), []);\n  const setTrue = useCurryFunction(setValue, null, true);\n  const setFalse = useCurryFunction(setValue, null, false);\n  return [value, toggle, setTrue, setFalse, setValue] as const;\n};\n\nexport default useToggle;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useBeforeUnload.ts\n */\n\nimport useEvent from '../useEvent';\n\nconst useWindowBeforeUnload = (message?: string, enabled = true) =>\n  useEvent(\n    window,\n    'beforeunload',\n    e => {\n      e.preventDefault();\n      if (message) e.returnValue = message;\n      return message;\n    },\n    { enabled },\n  );\n\nexport default useWindowBeforeUnload;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useWindowScroll.ts\n */\n\nimport { useState } from 'react';\nimport useEvent from '../useEvent';\nimport { getWindowScrollOffset } from '../utils/common';\n\nconst useWindowScrollOffset = () => {\n  const [scrollOffset, setScrollOffset] = useState(getWindowScrollOffset);\n  useEvent(window, 'scroll', () => setScrollOffset(getWindowScrollOffset()), {\n    capture: false,\n    passive: true,\n    usingAnimationFrame: true,\n  });\n  return scrollOffset;\n};\n\nexport default useWindowScrollOffset;\n","/**\n * References:\n * https://github.com/streamich/react-use/blob/master/src/useWindowSize.ts\n * https://github.com/imbhargav5/rooks/blob/dev/packages/window-size/src/useWindowSize.ts\n * https://github.com/contiamo/operational-ui/blob/master/src/useWindowSize/index.ts\n */\n\nimport { useState } from 'react';\nimport useEvent from '../useEvent';\nimport { getWindowSize } from '../utils/common';\n\nconst useWindowSize = () => {\n  const [size, setSize] = useState(getWindowSize);\n  useEvent(window, 'resize', () => setSize(getWindowSize()));\n  return size;\n};\n\nexport default useWindowSize;\n","import { useRef, useState, useCallback } from 'react';\nimport useWillUnmount from '../useWillUnmount';\nimport { PENDING_STATE, LOADING_STATE } from '../constants/common';\nimport { InitialState, AsyncState } from '../types/common';\n\nconst useWorkerCallback = <\n  TMessage = unknown,\n  TResult = unknown,\n  TError = unknown\n>(\n  workerUrl: string,\n  options?: WorkerOptions,\n  initialState: InitialState<AsyncState<TResult, TError>> = PENDING_STATE,\n) => {\n  const [state, setState] = useState(initialState);\n  const workerRef = useRef<Worker>();\n\n  const callback = useCallback(\n    (message: TMessage, opts?: PostMessageOptions) => {\n      if (workerRef.current) {\n        workerRef.current.terminate();\n      }\n\n      const worker = new Worker(workerUrl, options);\n      worker.addEventListener('message', e =>\n        setState({ loading: false, result: e.data }),\n      );\n      worker.addEventListener('error', e =>\n        setState({ loading: false, error: e.error }),\n      );\n      worker.postMessage(message, opts);\n      setState(LOADING_STATE);\n      workerRef.current = worker;\n    },\n    [options, workerUrl],\n  );\n\n  useWillUnmount(() => {\n    if (workerRef.current) workerRef.current.terminate();\n  });\n\n  return [state, callback] as const;\n};\n\nexport default useWorkerCallback;\n"],"names":["useUpdatedRef","value","deps","ref","useRef","useLayoutEffect","current","useAnimationFrame","callback","callbackRef","useEffect","handle","requestAnimationFrame","time","cancelAnimationFrame","reducer","state","action","type","payload","filter","useArray","initialValue","array","dispatch","useReducer","useCallback","item","predicate","createUniqueObject","isBrowser","window","document","getWindowScrollOffset","x","scrollX","y","scrollY","getWindowSize","innerWidth","innerHeight","outerWidth","outerHeight","persistEvent","o","Object","nativeEvent","Event","isSyntheticEvent","persist","createRateLimitHook","rateLimit","func","wait","options","funcRef","rateLimitedFuncRef","_rateLimitedFuncRef$c","cancel","args","forEach","audit","result","timeoutId","lastArgs","ratedFunction","setTimeout","clearTimeout","useAudit","createRateLimitValueHook","setValue","useState","useAuditValue","checkAndInvokeEventListener","listener","event","selectors","target","matches","useEvent","element","eventNames","capture","once","passive","usingAnimationFrame","enabled","listenerRef","animationFrameRef","eventTarget","Function","getEventTarget","eventListener","e","eventNameList","Array","isArray","eventName","addEventListener","removeEventListener","useBeforeUnload","message","preventDefault","returnValue","useCallbackWithCleanup","cleanupRef","useHandleChangeCheck","handlers","checked","handler","Boolean","useCheckInput","useCurrent","set","get","is","useCurryFunction","fn","thisArg","restArgs","apply","debounce","leading","trailing","useDebounce","useDebounceValue","useEffectOnce","effect","useDidMount","useDidUpdate","didMountRef","useUpdatedLink","attrs","selector","selectorRef","linkSelector","link","querySelector","createElement","HTMLLinkElement","assign","head","appendChild","useFavicon","href","rel","PENDING_STATE","loading","LOADING_STATE","usePromise","promiseFactory","initialState","cleanup","setState","isCancelled","promise","then","catch","error","FetchError","Error","constructor","statusText","status","super","this","createFetchHook","fetchFn","getResult","input","init","abortControllerRef","async","abortController","AbortController","res","signal","ok","_abortControllerRef$c","abort","useFetch","fetch","json","useFetchArrayBuffer","arrayBuffer","useFetchBlob","blob","useFetchFormData","formData","useFetchStream","Promise","resolve","body","useFetchText","text","useTriggerUpdate","useForceUpdate","useToggleFullscreen","elementRef","onChange","onError","toggleFullscreen","show","fullscreenElement","undefined","exitFullscreen","requestFullscreen","useFullscreen","fullscreen","setFullscreen","useHandleChangeFile","files","useHandleChangeNumber","Number","useHandleChangeText","String","useIntersectionObserverEffect","getTargets","targets","length","observer","IntersectionObserver","entries","currentObserver","observe","disconnect","isIntersectingObserverInit","useInfiniteScroll","loadMore","loadingRef","every","isIntersecting","useIntersectionObserver","useInterval","period","running","setInterval","clearInterval","useIsMounted","isMountedRef","defaultGetSrc","image","dataset","src","useLazyLoad","getSrc","imageMapRef","Map","register","arg","HTMLImageElement","from","keys","unobserve","createResourceHook","tagName","isValid","insert","isMounted","id","handleLoad","handleError","useLink","getMediaResult","mql","pickFrom","fromEntries","map","k","useMediaQuery","query","media","queryStr","json2mq","setResult","matchMedia","addListener","removeListener","useMutationObserver","nodeRef","MutationObserver","mutation","useNumberInput","useOnClickOutside","handleClickOutside","contains","usePageVisibility","visibilityState","usePageVisibilityState","usePrevious","prevRef","usePromiseCallback","currentPromise","useResizeObserver","ResizeObserver","sample","intervalId","useSample","useSampleValue","useScript","defaultGetId","getAttribute","useScrollSpy","threshold","getId","setId","elementMapRef","intersectingElementsRef","Set","elementId","Element","add","delete","size","selectedElement","reduce","prev","curr","getBoundingClientRect","top","newId","useTextInput","throttle","useThrottle","useThrottleValue","useTimeout","ms","useTimeoutCallback","timeoutRef","useWillUnmount","useTitle","title","titleRef","restoreOnUnmount","useToggle","prevValue","useWindowBeforeUnload","useWindowScrollOffset","scrollOffset","setScrollOffset","useWindowSize","setSize","useWorkerCallback","workerUrl","workerRef","opts","terminate","worker","Worker","data","postMessage"],"mappings":"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"}